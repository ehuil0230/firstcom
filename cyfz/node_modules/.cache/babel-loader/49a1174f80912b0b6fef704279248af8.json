{"remainingRequest":"D:\\vueWorkspace\\cyfz\\node_modules\\babel-loader\\lib\\index.js!D:\\vueWorkspace\\cyfz\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\vueWorkspace\\cyfz\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\vueWorkspace\\cyfz\\src\\components\\echarts\\LineChart.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\vueWorkspace\\cyfz\\src\\components\\echarts\\LineChart.vue","mtime":1570327663879},{"path":"D:\\vueWorkspace\\cyfz\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\vueWorkspace\\cyfz\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\vueWorkspace\\cyfz\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\vueWorkspace\\cyfz\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\nimport echarts from 'echarts';\nexport default {\n  name: \"LineChart\",\n  props: {\n    LineChartData: {\n      text: String,\n      //标题  不需要标题可不传\n      titleSize: {\n        //标题大小\n        type: Number,\n        default: 20\n      },\n      download: {\n        //是否显示下载按钮\n        type: Boolean,\n        default: false\n      },\n      data: []\n    }\n  },\n  data: function data() {\n    return {\n      tipData: [],\n      //线数据\n      showData: [],\n      //展示数据\n      text: this.LineChartData.text,\n      //大标题\n      titleSize: this.LineChartData.titleSize,\n      //标题大小\n      download: this.LineChartData.download\n    };\n  },\n  // mounted() {\n  //     this.drawLine();\n  // },\n  methods: {\n    //绘制图表\n    drawLine: function drawLine() {\n      // 基于准备好的dom，初始化echarts实例\n      var id = \"echartBar\" + Math.random() * 1000;\n      this.$el.setAttribute(\"id\", id);\n      var myChartContainer = document.getElementById(id);\n      var myChartChina = echarts.init(myChartContainer); // 绘制图表\n\n      var optionMap = {\n        //折线图配置数据\n        color: ['#6cacaf', '#e4a526', '#e4391d', '#a1cb37', '#8c97cb'],\n        title: {\n          x: 'center',\n          text: this.text,\n          textStyle: {\n            fontSize: this.titleSize\n          }\n        },\n        tooltip: {\n          trigger: 'axis'\n        },\n        legend: {\n          top: [30],\n          data: this.tipData\n        },\n        grid: {\n          left: '3%',\n          right: '4%',\n          bottom: '3%',\n          containLabel: true\n        },\n        toolbox: {\n          show: this.download,\n          top: [5],\n          right: [20],\n          feature: {\n            saveAsImage: {}\n          }\n        },\n        xAxis: {\n          interval: ['0'],\n          //标签显示间隔\n          type: 'category',\n          boundaryGap: false,\n          data: ['1月', '2月', '3月', '4月', '5月', '6月', '7月', '8月', '9月', '10月', '11月', '12月'] //x轴数据\n\n        },\n        yAxis: {\n          name: '(万元)',\n          nameGap: [10],\n          type: 'value'\n        },\n        series: this.showData\n      };\n      myChartChina.setOption(optionMap);\n\n      window.onresize = function () {\n        myChartChina.resize();\n      };\n    }\n  },\n  watch: {\n    'LineChartData.data': function LineChartDataData(val) {\n      this.tipData = [];\n      this.showData = [];\n\n      for (var i = 0; i < val.length; i++) {\n        var obj = {\n          //折线图需要的数据结构\n          name: '',\n          type: 'line',\n          data: []\n        };\n        obj.name = val[i].name;\n        this.tipData.push(val[i].name);\n\n        for (var j = 0; j < val[i].monthlySales.length; j++) {\n          obj.data.push(parseFloat(val[i].monthlySales[j]));\n        }\n\n        this.showData.push(obj);\n      }\n\n      this.drawLine();\n    }\n  }\n};",{"version":3,"sources":["LineChart.vue"],"names":[],"mappings":";;;;;;;;AAOA,OAAA,OAAA,MAAA,SAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,WADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,aAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AACA;AACA,MAAA,SAAA,EAAA;AAAA;AACA,QAAA,IAAA,EAAA,MADA;AAEA,QAAA,OAAA,EAAA;AAFA,OAFA;AAMA,MAAA,QAAA,EAAA;AAAA;AACA,QAAA,IAAA,EAAA,OADA;AAEA,QAAA,OAAA,EAAA;AAFA,OANA;AAUA,MAAA,IAAA,EAAA;AAVA;AADA,GAFA;AAgBA,EAAA,IAhBA,kBAgBA;AACA,WAAA;AACA,MAAA,OAAA,EAAA,EADA;AACA;AACA,MAAA,QAAA,EAAA,EAFA;AAEA;AACA,MAAA,IAAA,EAAA,KAAA,aAAA,CAAA,IAHA;AAGA;AACA,MAAA,SAAA,EAAA,KAAA,aAAA,CAAA,SAJA;AAIA;AACA,MAAA,QAAA,EAAA,KAAA,aAAA,CAAA;AALA,KAAA;AAOA,GAxBA;AAyBA;AACA;AACA;AACA,EAAA,OAAA,EAAA;AACA;AACA,IAAA,QAFA,sBAEA;AACA;AACA,UAAA,EAAA,GAAA,cAAA,IAAA,CAAA,MAAA,KAAA,IAAA;AACA,WAAA,GAAA,CAAA,YAAA,CAAA,IAAA,EAAA,EAAA;AACA,UAAA,gBAAA,GAAA,QAAA,CAAA,cAAA,CAAA,EAAA,CAAA;AACA,UAAA,YAAA,GAAA,OAAA,CAAA,IAAA,CAAA,gBAAA,CAAA,CALA,CAMA;;AACA,UAAA,SAAA,GAAA;AAAA;AACA,QAAA,KAAA,EAAA,CAAA,SAAA,EAAA,SAAA,EAAA,SAAA,EAAA,SAAA,EAAA,SAAA,CADA;AAEA,QAAA,KAAA,EAAA;AACA,UAAA,CAAA,EAAA,QADA;AAEA,UAAA,IAAA,EAAA,KAAA,IAFA;AAGA,UAAA,SAAA,EAAA;AACA,YAAA,QAAA,EAAA,KAAA;AADA;AAHA,SAFA;AASA,QAAA,OAAA,EAAA;AACA,UAAA,OAAA,EAAA;AADA,SATA;AAYA,QAAA,MAAA,EAAA;AACA,UAAA,GAAA,EAAA,CAAA,EAAA,CADA;AAEA,UAAA,IAAA,EAAA,KAAA;AAFA,SAZA;AAgBA,QAAA,IAAA,EAAA;AACA,UAAA,IAAA,EAAA,IADA;AAEA,UAAA,KAAA,EAAA,IAFA;AAGA,UAAA,MAAA,EAAA,IAHA;AAIA,UAAA,YAAA,EAAA;AAJA,SAhBA;AAsBA,QAAA,OAAA,EAAA;AACA,UAAA,IAAA,EAAA,KAAA,QADA;AAEA,UAAA,GAAA,EAAA,CAAA,CAAA,CAFA;AAGA,UAAA,KAAA,EAAA,CAAA,EAAA,CAHA;AAIA,UAAA,OAAA,EAAA;AACA,YAAA,WAAA,EAAA;AADA;AAJA,SAtBA;AA8BA,QAAA,KAAA,EAAA;AACA,UAAA,QAAA,EAAA,CAAA,GAAA,CADA;AACA;AACA,UAAA,IAAA,EAAA,UAFA;AAGA,UAAA,WAAA,EAAA,KAHA;AAIA,UAAA,IAAA,EAAA,CAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,CAJA,CAIA;;AAJA,SA9BA;AAoCA,QAAA,KAAA,EAAA;AACA,UAAA,IAAA,EAAA,MADA;AAEA,UAAA,OAAA,EAAA,CAAA,EAAA,CAFA;AAGA,UAAA,IAAA,EAAA;AAHA,SApCA;AAyCA,QAAA,MAAA,EAAA,KAAA;AAzCA,OAAA;AA2CA,MAAA,YAAA,CAAA,SAAA,CAAA,SAAA;;AACA,MAAA,MAAA,CAAA,QAAA,GAAA,YAAA;AACA,QAAA,YAAA,CAAA,MAAA;AACA,OAFA;AAGA;AAxDA,GA5BA;AAsFA,EAAA,KAAA,EAAA;AACA,0BAAA,2BAAA,GAAA,EAAA;AACA,WAAA,OAAA,GAAA,EAAA;AACA,WAAA,QAAA,GAAA,EAAA;;AACA,WAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,GAAA,CAAA,MAAA,EAAA,CAAA,EAAA,EAAA;AACA,YAAA,GAAA,GAAA;AAAA;AACA,UAAA,IAAA,EAAA,EADA;AAEA,UAAA,IAAA,EAAA,MAFA;AAGA,UAAA,IAAA,EAAA;AAHA,SAAA;AAKA,QAAA,GAAA,CAAA,IAAA,GAAA,GAAA,CAAA,CAAA,CAAA,CAAA,IAAA;AACA,aAAA,OAAA,CAAA,IAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,IAAA;;AACA,aAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,GAAA,CAAA,CAAA,CAAA,CAAA,YAAA,CAAA,MAAA,EAAA,CAAA,EAAA,EAAA;AACA,UAAA,GAAA,CAAA,IAAA,CAAA,IAAA,CAAA,UAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,YAAA,CAAA,CAAA,CAAA,CAAA;AACA;;AACA,aAAA,QAAA,CAAA,IAAA,CAAA,GAAA;AACA;;AACA,WAAA,QAAA;AACA;AAlBA;AAtFA,CAAA","sourcesContent":["<template>\r\n    <div class=\"linechart\">\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import echarts from 'echarts'\r\n\r\n    export default {\r\n        name: \"LineChart\",\r\n        props: {\r\n            LineChartData: {\r\n                text: String, //标题  不需要标题可不传\r\n                titleSize: {  //标题大小\r\n                    type: Number,\r\n                    default: 20\r\n                },\r\n                download: { //是否显示下载按钮\r\n                    type: Boolean,\r\n                    default: false\r\n                },\r\n                data:[]\r\n            },\r\n        },\r\n        data() {\r\n            return {\r\n                tipData: [],//线数据\r\n                showData: [],//展示数据\r\n                text: this.LineChartData.text, //大标题\r\n                titleSize: this.LineChartData.titleSize, //标题大小\r\n                download: this.LineChartData.download,\r\n            }\r\n        },\r\n        // mounted() {\r\n        //     this.drawLine();\r\n        // },\r\n        methods: {\r\n            //绘制图表\r\n            drawLine() {\r\n                // 基于准备好的dom，初始化echarts实例\r\n                let id = \"echartBar\" + Math.random() * 1000;\r\n                this.$el.setAttribute(\"id\", id);\r\n                let myChartContainer = document.getElementById(id);\r\n                let myChartChina = echarts.init(myChartContainer);\r\n                // 绘制图表\r\n                let optionMap = {//折线图配置数据\r\n                    color:['#6cacaf','#e4a526','#e4391d','#a1cb37','#8c97cb'],\r\n                    title: {\r\n                        x: 'center',\r\n                        text: this.text,\r\n                        textStyle: {\r\n                            fontSize: this.titleSize,\r\n                        },\r\n                    },\r\n                    tooltip: {\r\n                        trigger: 'axis'\r\n                    },\r\n                    legend: {\r\n                        top: [30],\r\n                        data: this.tipData,\r\n                    },\r\n                    grid: {\r\n                        left: '3%',\r\n                        right: '4%',\r\n                        bottom: '3%',\r\n                        containLabel: true\r\n                    },\r\n                    toolbox: {\r\n                        show: this.download,\r\n                        top: [5],\r\n                        right: [20],\r\n                        feature: {\r\n                            saveAsImage: {}\r\n                        }\r\n                    },\r\n                    xAxis: {\r\n                        interval: ['0'], //标签显示间隔\r\n                        type: 'category',\r\n                        boundaryGap: false,\r\n                        data: ['1月', '2月', '3月', '4月', '5月', '6月', '7月', '8月', '9月', '10月', '11月', '12月'] //x轴数据\r\n                    },\r\n                    yAxis: {\r\n                        name: '(万元)',\r\n                        nameGap: [10],\r\n                        type: 'value'\r\n                    },\r\n                    series: this.showData,\r\n                };\r\n                myChartChina.setOption(optionMap);\r\n                window.onresize = function () {\r\n                    myChartChina.resize();\r\n                }\r\n            },\r\n        },\r\n        watch: {\r\n            'LineChartData.data':function (val) {\r\n                this.tipData = [];\r\n                this.showData = [];\r\n                for (let i = 0; i < val.length; i++) {\r\n                    let obj = { //折线图需要的数据结构\r\n                        name: '',\r\n                        type: 'line',\r\n                        data: []\r\n                    };\r\n                    obj.name = val[i].name;\r\n                    this.tipData.push(val[i].name);\r\n                    for(let j=0;j<val[i].monthlySales.length;j++){\r\n                        obj.data.push(parseFloat(val[i].monthlySales[j]));\r\n                    }\r\n                    this.showData.push(obj);\r\n                }\r\n                this.drawLine();\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n    .linechart {\r\n        width: 100%;\r\n        height: 100%;\r\n        margin: 0 auto;\r\n    }\r\n</style>\r\n"],"sourceRoot":"src/components/echarts"}]}