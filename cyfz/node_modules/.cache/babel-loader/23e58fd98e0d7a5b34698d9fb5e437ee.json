{"remainingRequest":"D:\\vueWorkspace\\cyfz\\node_modules\\babel-loader\\lib\\index.js!D:\\vueWorkspace\\cyfz\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\vueWorkspace\\cyfz\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\vueWorkspace\\cyfz\\src\\components\\upload\\upload.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\vueWorkspace\\cyfz\\src\\components\\upload\\upload.vue","mtime":1569635176325},{"path":"D:\\vueWorkspace\\cyfz\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\vueWorkspace\\cyfz\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\vueWorkspace\\cyfz\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\vueWorkspace\\cyfz\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from 'axios';\nimport uploadList from \"./uploadList\";\n\nfunction noop() {}\n\nexport default {\n  name: 'upload',\n  props: {\n    autoUp: {\n      //自动上传\n      type: Boolean,\n      default: false\n    },\n    downAll: {\n      //下载全部\n      type: Boolean,\n      default: false\n    },\n    showFileList: {\n      //是否使用elementUi自带的展示方式\n      type: Boolean,\n      default: true\n    },\n    showTable: {\n      //是否使用elementUi自带的展示方式\n      type: Boolean,\n      default: false\n    },\n    downAndPreview: {\n      //elementUi展示是否可以预览\n      type: Boolean,\n      default: false\n    },\n    fileNum: {\n      type: Number,\n      default: 10000\n    },\n    listType: {\n      type: String,\n      default: \"text\"\n    },\n    defaultFileList: {\n      //初始化list数据\n      type: Array,\n      default: function _default() {\n        return [];\n      },\n      required: false\n    },\n    columns: {\n      //表格展示表头\n      type: Array\n    },\n    md5CheckParams: {\n      type: Object,\n      default: function _default() {\n        return {\n          //md5校验需要的参数\n          userId: '222222',\n          moduleName: 'CheckForFrontEnd'\n        };\n      }\n    },\n    upLoadParams: {\n      type: Object,\n      default: function _default() {\n        return {\n          //上传需要的其他参数\n          userId: '222222',\n          moduleName: 'CheckForFrontEnd'\n        };\n      }\n    },\n    downLoadOneParams: {\n      type: Object,\n      default: function _default() {\n        return {\n          //下载需要的参数\n          isPreview: 1,\n          forceDocx: 1,\n          webOffice: 1,\n          wordWaterMark: 1,\n          isWpsSecure: 1,\n          caToken: 1,\n          waterMark: 1\n        };\n      }\n    },\n    downLoadAllParams: {\n      type: Object,\n      default: function _default() {\n        return {\n          //下载需要的参数\n          zipName: 'zipDownload'\n        };\n      }\n    },\n    getPdfPathParams: {\n      type: Object,\n      default: function _default() {\n        return {\n          isPreview: 1,\n          forceRefresh: 1,\n          xdocPdf: 1\n        };\n      }\n    },\n    onUpSuccess: {\n      type: Function,\n      default: noop\n    },\n    onUpError: {\n      type: Function,\n      default: noop\n    },\n    onUpProgress: {\n      type: Function,\n      default: noop\n    },\n    onUpChange: {\n      type: Function,\n      default: noop\n    },\n    onUpRemove: {\n      type: Function,\n      default: noop\n    },\n    onUpDownloadOne: {\n      type: Function,\n      default: noop\n    },\n    onUpDownloadMany: {\n      type: Function,\n      default: noop\n    }\n  },\n  components: {\n    uploadList: uploadList\n  },\n  data: function data() {\n    return {\n      dialogVisible: false,\n      fileList: this.defaultFileList\n    };\n  },\n  created: function created() {\n    this.defaultFileList.forEach(function (item, index) {\n      console.log(item);\n    });\n  },\n  methods: {\n    submitUpload: function submitUpload() {\n      this.$refs.upload.submit();\n    },\n    beforeUpload: function beforeUpload(file) {// console.log(file)\n\n      /*if (this.listType === 'picture') {\n          const isJPG = file.type === 'image/jpeg';\n          const isLt2M = file.size / 1024 / 1024 < 2;\n           if (!isJPG) {\n              this.$message.error('上传头像图片只能是 JPG 格式!');\n          }\n          if (!isLt2M) {\n              this.$message.error('上传图片大小不能超过 2MB!');\n          }\n          return isJPG && isLt2M;\n      } else {\n          return true\n      }*/\n    },\n    toUpload: function toUpload(params) {\n      var that = this;\n      that.$$md5ByFile(params).then(function (res) {\n        var defaultParam = {\n          file: params.file,\n          md5: res.md5\n        };\n        that.$$md5CheckByFile(Object.assign(defaultParam, that.md5CheckParams)).then(function (checkRes) {\n          if (checkRes && checkRes.message === \"正常上传\") {\n            that.$$uploadFile(Object.assign(defaultParam, {\n              progress: params.onProgress\n            })).then(function (response) {\n              console.log(response);\n              var resObj = {\n                fileExt: response.fileExt,\n                secretKey: response.secretKey,\n                fileSize: response.fileSize,\n                name: response.fileSrcName,\n                url: response.url,\n                md5: response.md5\n                /*上传成功，加入表格*/\n\n              };\n              that.fileList.push(resObj);\n              /*目前接口不是业务接口，只能采用假数据拼接*/\n\n              /*that.fileList.push(Object.assign(resObj, {\n                  deptName: \"白昱\",\n                  date: that.getCurrentDateStr()\n              }));*/\n              //上传成功 调用onSuccess方法，否则没有完成图标\n              //处理自己的逻辑\n\n              params.onSuccess(Object.assign(resObj, response));\n            }).catch(function () {\n              that.$message({\n                type: 'error',\n                message: \"上传失败\"\n              }); //上传失败 调用onError方法\n              //处理自己的逻辑\n\n              params.onError(error);\n            });\n          } else if (checkRes && checkRes.message === \"0\") {\n            console.log(checkRes);\n            /*已上传，加入表格*/\n\n            console.log(params); // this.fileList.push(checkRes.info);\n\n            /*目前接口不是业务接口，只能采用假数据拼接*/\n\n            var obj = {\n              name: params.file.name,\n              deptName: \"白昱\",\n              date: that.getCurrentDateStr()\n            };\n            console.log(Object.assign(checkRes, obj));\n            that.fileList.push(Object.assign(checkRes, obj));\n            params.onSuccess(checkRes);\n          } else {\n            that.$message({\n              type: 'error',\n              message: \"上传失败\"\n            });\n          }\n        });\n      });\n    },\n    toUploadSuccess: function toUploadSuccess(response, file, fileList) {\n      this.onUpSuccess(response, file, fileList);\n    },\n    toUploadError: function toUploadError(err, file, fileList) {\n      this.onUpError(err, file, fileList);\n    },\n    toUploadProgress: function toUploadProgress(event, file, fileList) {\n      this.onUpProgress(event, file, fileList);\n    },\n    handleExceed: function handleExceed() {\n      this.$message({\n        type: \"warning\",\n        message: \"文件个数不能超过\" + this.fileNum + \"个\"\n      });\n    },\n    handleChange: function handleChange(file, fileList) {\n      this.onUpChange(file, fileList);\n    },\n    beforeRemove: function beforeRemove(file, fileList) {\n      var _this = this;\n\n      console.log(file);\n      console.log(fileList);\n\n      if (!!this.onUpRemove && this.onUpRemove.name != \"noop\") {\n        this.onUpRemove(file, fileList); // this.onUpRemove(file, fileList).then(this.handleRemove(file, fileList));\n      } else {\n        var that = this;\n\n        if (file.status === 'success') {\n          this.$confirm(\"\\u786E\\u5B9A\\u79FB\\u9664\\u8BE5\\u6587\\u4EF6\\uFF1F\", '提示', {\n            confirmButtonText: '确定',\n            cancelButtonText: '取消',\n            type: 'warning'\n          }).then(function () {\n            that.$axios({\n              method: 'post',\n              url: _this.$api.wjglApi.Zh001deleteFile,\n              data: {\n                id: file.response.id\n              }\n            }).then(function (response) {\n              if (response.msg) {\n                that.handleRemove(file, fileList);\n              }\n\n              that.$message({\n                type: 'success',\n                message: '删除成功'\n              });\n            }).catch(function (error) {\n              that.$message({\n                type: 'error',\n                message: '删除失败'\n              });\n            });\n          }).catch(function () {\n            that.$message({\n              type: 'error',\n              message: '删除失败'\n            });\n          });\n        } else {\n          that.handleRemove(file, fileList);\n        }\n      }\n\n      return false;\n    },\n    handleRemove: function handleRemove(file, fileList) {\n      if (file.status === \"success\") {\n        for (var i = 0; i < fileList.length; i++) {\n          if (fileList[i].response.id === file.response.id) {\n            fileList.splice(i, 1);\n            this.fileList = fileList;\n            console.log(this.fileList);\n            break;\n          }\n        }\n      } else {\n        for (var _i = 0; _i < fileList.length; _i++) {\n          if (fileList[_i].uid === file.uid) {\n            fileList.splice(_i, 1);\n            break;\n          }\n        }\n      }\n    },\n    handlePreview: function handlePreview(file) {\n      console.log(file);\n\n      if (file.hasOwnProperty('status') && file.status === 'success') {\n        this.currentFileData = file.response ? file.response : file;\n        this.dialogVisible = true;\n      } else {\n        this.$message({\n          type: 'warning',\n          message: '请先上传，再对文件进行预览或下载'\n        });\n      }\n    },\n    preViewFile: function preViewFile() {\n      //文件预览\n      if (this.currentFileData.url) {\n        var name = this.currentFileData.name.split('.')[1];\n        var that = this;\n        console.log(name);\n        var url = that.$api.upload.reqUrl + that.$api.upload.preview + '?md5Path=';\n\n        if (name === 'pdf') {\n          window.open(url + this.currentFileData.url, '_blank');\n        } else {\n          //非pdf文件获取pdf地址\n          that.$message({\n            type: 'info',\n            message: '仅支持pdf预览，该文件需要先下载！'\n          });\n        }\n\n        this.dialogVisible = false;\n      } else {\n        this.$message({\n          type: 'info',\n          message: '预览失败，请检查文件路径！'\n        });\n      }\n    },\n\n    /*单文件下载*/\n    downloadFile: function downloadFile() {\n      var that = this;\n      this.$$download(this.currentFileData).then(function () {\n        that.$message({\n          type: 'success',\n          message: '下载成功！'\n        });\n      }).catch(function (err) {\n        that.$message({\n          type: 'info',\n          message: '下载失败！'\n        });\n      });\n      this.dialogVisible = false;\n    },\n    dialogClose: function dialogClose() {\n      this.currentFileData = {};\n    },\n    //批量下载\n    downloadAll: function downloadAll() {\n      var that = this;\n      var md5Path = [];\n      this.fileList.forEach(function (item, index) {\n        console.log(item);\n        md5Path.push(item.md5Path);\n      });\n      var Params = Object.assign({\n        //拼接参数\n        md5Paths: md5Path\n      }, this.downLoadAllParams);\n      this.$$downloadPackage(Params).then(function () {\n        that.$message({\n          type: 'success',\n          message: '下载成功！'\n        });\n      }).catch(function (err) {\n        that.$message({\n          type: 'info',\n          message: '下载失败！'\n        });\n      });\n    }\n  }\n};",{"version":3,"sources":["upload.vue"],"names":[],"mappings":"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","sourcesContent":["<!---->\r\n/**\r\n*  附件上传组件\r\n*  @params\r\n***\r\n*  autoUp 是否开启自动上传\r\n*  downAll 是否可以批量下载\r\n*  show-file-list 是否采用elementUi默认展示方式？\r\n*  down-and-preview  show-file-list为true情况下是否可以预览和下载\r\n*  show-table 和 show-file-list 只能一个为true 或者都为false 自定义 success 回调的展示\r\n*  show-table  采用表格展示方式 false\r\n*  columns 采用表格展示，需要配置表头\r\n*  defaultFileList 初始化filelist数据\r\n**/\r\n<template>\r\n    <div class=\"myupload\">\r\n        <el-upload\r\n                class=\"upload-demo\"\r\n                ref=\"upload\"\r\n                action=\"#\"\r\n                :before-upload=\"beforeUpload\"\r\n                :on-change=\"handleChange\"\r\n                :http-request=\"toUpload\"\r\n                :on-progress=\"toUploadProgress\"\r\n                :on-success=\"toUploadSuccess\"\r\n                :on-error=\"toUploadError\"\r\n                :on-preview=\"handlePreview\"\r\n                :before-remove=\"beforeRemove\"\r\n                :on-remove=\"handleRemove\"\r\n                :on-exceed=\"handleExceed\"\r\n                :file-list=\"fileList\"\r\n                :auto-upload=\"autoUp\"\r\n                :show-file-list=\"showFileList\"\r\n                :limit=\"fileNum\">\r\n            <el-button slot=\"trigger\" size=\"small\" type=\"primary\" icon=\"el-icon-circle-plus\">选取文件</el-button>\r\n            <el-button v-if=\"!autoUp\" style=\"margin-left: 10px;\" size=\"small\" type=\"success\"\r\n                       @click=\"submitUpload\"\r\n                       icon=\"el-icon-upload\">\r\n                上传文件\r\n            </el-button>\r\n            <el-button v-if=\"downAll\" style=\"margin-left: 10px;\" size=\"small\" type=\"success\" @click=\"downloadAll\"\r\n                       icon=\"el-icon-download\">\r\n                批量下载\r\n            </el-button>\r\n            <div slot=\"tip\" class=\"mytip\">\r\n                <slot name=\"mytip\"></slot>\r\n            </div>\r\n        </el-upload>\r\n        <!--不使用默认展示方式，使用表格-->\r\n        <upload-list v-if=\"showTable\" :list-columns=\"columns\" :list-data=\"fileList\"\r\n                     :list-type=\"listType\"></upload-list>\r\n        <el-dialog v-if=\"downAndPreview\"\r\n                   title=\"提示\"\r\n                   :visible.sync=\"dialogVisible\"\r\n                   width=\"30%\"\r\n                   :close=\"dialogClose\">\r\n            <span><i class=\"el-icon-warning el-dialog__body-myi\"></i>对该文件进行预览或者下载？</span>\r\n            <span slot=\"footer\" class=\"dialog-footer\">\r\n         <el-button size='small' type=\"primary\" @click=\"preViewFile\">文件预览</el-button>\r\n         <el-button size='small' type=\"primary\" @click=\"downloadFile\">文件下载</el-button>\r\n         <el-button size='small' @click=\"dialogVisible = false\">取 消</el-button>\r\n        </span>\r\n        </el-dialog>\r\n    </div>\r\n</template>\r\n<script>\r\n    import axios from 'axios'\r\n    import uploadList from \"./uploadList\";\r\n\r\n    function noop() {\r\n    }\r\n\r\n    export default {\r\n        name: 'upload',\r\n        props: {\r\n            autoUp: {//自动上传\r\n                type: Boolean,\r\n                default: false,\r\n            },\r\n            downAll: {//下载全部\r\n                type: Boolean,\r\n                default: false,\r\n            },\r\n            showFileList: {//是否使用elementUi自带的展示方式\r\n                type: Boolean,\r\n                default: true,\r\n            },\r\n            showTable: {//是否使用elementUi自带的展示方式\r\n                type: Boolean,\r\n                default: false,\r\n            },\r\n            downAndPreview: {//elementUi展示是否可以预览\r\n                type: Boolean,\r\n                default: false,\r\n            },\r\n            fileNum: {\r\n                type: Number,\r\n                default: 10000,\r\n            },\r\n            listType: {\r\n                type: String,\r\n                default: \"text\",\r\n            },\r\n            defaultFileList: {//初始化list数据\r\n                type: Array,\r\n                default: () => [],\r\n                required: false\r\n            },\r\n            columns: {//表格展示表头\r\n                type: Array\r\n            },\r\n            md5CheckParams: {\r\n                type: Object,\r\n                default: () => ({//md5校验需要的参数\r\n                    userId: '222222',\r\n                    moduleName: 'CheckForFrontEnd'\r\n                })\r\n            },\r\n            upLoadParams: {\r\n                type: Object,\r\n                default: () => ({//上传需要的其他参数\r\n                    userId: '222222',\r\n                    moduleName: 'CheckForFrontEnd'\r\n                })\r\n            },\r\n            downLoadOneParams: {\r\n                type: Object,\r\n                default: () => ({//下载需要的参数\r\n                    isPreview: 1,\r\n                    forceDocx: 1,\r\n                    webOffice: 1,\r\n                    wordWaterMark: 1,\r\n                    isWpsSecure: 1,\r\n                    caToken: 1,\r\n                    waterMark: 1,\r\n                })\r\n            },\r\n            downLoadAllParams: {\r\n                type: Object,\r\n                default: () => ({//下载需要的参数\r\n                    zipName: 'zipDownload',\r\n                })\r\n            },\r\n            getPdfPathParams: {\r\n                type: Object,\r\n                default: () => ({\r\n                    isPreview: 1,\r\n                    forceRefresh: 1,\r\n                    xdocPdf: 1,\r\n                })\r\n            },\r\n            onUpSuccess: {\r\n                type: Function,\r\n                default: noop\r\n            },\r\n            onUpError: {\r\n                type: Function,\r\n                default: noop\r\n            },\r\n            onUpProgress: {\r\n                type: Function,\r\n                default: noop\r\n            },\r\n            onUpChange: {\r\n                type: Function,\r\n                default: noop\r\n            },\r\n            onUpRemove: {\r\n                type: Function,\r\n                default: noop\r\n            },\r\n            onUpDownloadOne: {\r\n                type: Function,\r\n                default: noop\r\n            },\r\n            onUpDownloadMany: {\r\n                type: Function,\r\n                default: noop\r\n            },\r\n        },\r\n        components: {\r\n            uploadList,\r\n        },\r\n        data() {\r\n            return {\r\n                dialogVisible: false,\r\n                fileList: this.defaultFileList,\r\n            }\r\n        },\r\n        created() {\r\n            this.defaultFileList.forEach((item, index) => {\r\n                console.log(item)\r\n            })\r\n        },\r\n        methods: {\r\n            submitUpload() {\r\n                this.$refs.upload.submit()\r\n            },\r\n            beforeUpload(file) {\r\n                // console.log(file)\r\n                /*if (this.listType === 'picture') {\r\n                    const isJPG = file.type === 'image/jpeg';\r\n                    const isLt2M = file.size / 1024 / 1024 < 2;\r\n\r\n                    if (!isJPG) {\r\n                        this.$message.error('上传头像图片只能是 JPG 格式!');\r\n                    }\r\n                    if (!isLt2M) {\r\n                        this.$message.error('上传图片大小不能超过 2MB!');\r\n                    }\r\n                    return isJPG && isLt2M;\r\n                } else {\r\n                    return true\r\n                }*/\r\n            },\r\n            toUpload(params) {\r\n                let that = this;\r\n                that.$$md5ByFile(params).then((res) => {\r\n                    let defaultParam = {\r\n                        file: params.file,\r\n                        md5: res.md5\r\n                    };\r\n                    that.$$md5CheckByFile(Object.assign(defaultParam, that.md5CheckParams)).then((checkRes) => {\r\n                        if (checkRes && checkRes.message === \"正常上传\") {\r\n                            that.$$uploadFile(Object.assign(defaultParam, {progress:params.onProgress\r\n                            })).then(function (response) {\r\n                                console.log(response)\r\n                                let resObj = {\r\n                                    fileExt: response.fileExt,\r\n                                    secretKey: response.secretKey,\r\n                                    fileSize: response.fileSize,\r\n                                    name: response.fileSrcName,\r\n                                    url: response.url,\r\n                                    md5:response.md5,\r\n                                }\r\n                                /*上传成功，加入表格*/\r\n                                that.fileList.push(resObj)\r\n                                /*目前接口不是业务接口，只能采用假数据拼接*/\r\n                                /*that.fileList.push(Object.assign(resObj, {\r\n                                    deptName: \"白昱\",\r\n                                    date: that.getCurrentDateStr()\r\n                                }));*/\r\n                                //上传成功 调用onSuccess方法，否则没有完成图标\r\n                                //处理自己的逻辑\r\n                                params.onSuccess(Object.assign(resObj,response))\r\n                            }).catch(() => {\r\n                                that.$message({\r\n                                    type: 'error',\r\n                                    message: \"上传失败\"\r\n                                })\r\n                                //上传失败 调用onError方法\r\n                                //处理自己的逻辑\r\n                                params.onError(error)\r\n                            })\r\n                        } else if (checkRes && checkRes.message === \"0\") {\r\n                            console.log(checkRes);\r\n                            /*已上传，加入表格*/\r\n                            console.log(params)\r\n                            // this.fileList.push(checkRes.info);\r\n                            /*目前接口不是业务接口，只能采用假数据拼接*/\r\n                            let obj = {\r\n                                name: params.file.name,\r\n                                deptName: \"白昱\",\r\n                                date: that.getCurrentDateStr()\r\n                            }\r\n                            console.log(Object.assign(checkRes, obj))\r\n                            that.fileList.push(Object.assign(checkRes, obj))\r\n                            params.onSuccess(checkRes)\r\n                        } else {\r\n                            that.$message({\r\n                                type: 'error',\r\n                                message: \"上传失败\"\r\n                            })\r\n                        }\r\n                    })\r\n                })\r\n            },\r\n            toUploadSuccess(response, file, fileList) {\r\n                this.onUpSuccess(response, file, fileList);\r\n            },\r\n            toUploadError(err, file, fileList) {\r\n                this.onUpError(err, file, fileList);\r\n            },\r\n            toUploadProgress(event, file, fileList) {\r\n                this.onUpProgress(event, file, fileList)\r\n            },\r\n            handleExceed() {\r\n                this.$message({\r\n                    type: \"warning\",\r\n                    message: \"文件个数不能超过\" + this.fileNum + \"个\"\r\n                })\r\n            },\r\n            handleChange(file, fileList) {\r\n                this.onUpChange(file, fileList)\r\n            },\r\n            beforeRemove(file, fileList) {\r\n                console.log(file);\r\n                console.log(fileList)\r\n                if (!!this.onUpRemove && this.onUpRemove.name != \"noop\") {\r\n                    this.onUpRemove(file, fileList)\r\n                    // this.onUpRemove(file, fileList).then(this.handleRemove(file, fileList));\r\n                } else {\r\n                    let that = this;\r\n                    if (file.status === 'success') {\r\n                        this.$confirm(`确定移除该文件？`, '提示', {\r\n                            confirmButtonText: '确定',\r\n                            cancelButtonText: '取消',\r\n                            type: 'warning'\r\n                        }).then(() => {\r\n\r\n                            that.$axios({\r\n                                method: 'post',\r\n                                url: this.$api.wjglApi.Zh001deleteFile,\r\n                                data: {\r\n                                    id: file.response.id,\r\n                                }\r\n                            }).then(function (response) {\r\n                                if (response.msg) {\r\n                                    that.handleRemove(file, fileList)\r\n                                }\r\n                                that.$message({\r\n                                    type: 'success',\r\n                                    message: '删除成功'\r\n                                });\r\n                            }).catch(function (error) {\r\n                                that.$message({\r\n                                    type: 'error',\r\n                                    message: '删除失败'\r\n                                })\r\n                            })\r\n                        }).catch(() => {\r\n                            that.$message({\r\n                                type: 'error',\r\n                                message: '删除失败'\r\n                            })\r\n                        })\r\n                    } else {\r\n                        that.handleRemove(file, fileList)\r\n                    }\r\n                }\r\n                return false\r\n            },\r\n            handleRemove(file, fileList) {\r\n                if (file.status === \"success\") {\r\n                    for (let i = 0; i < fileList.length; i++) {\r\n                        if (fileList[i].response.id === file.response.id) {\r\n                            fileList.splice(i, 1);\r\n                            this.fileList = fileList\r\n                            console.log(this.fileList)\r\n                            break;\r\n                        }\r\n                    }\r\n                } else {\r\n                    for (let i = 0; i < fileList.length; i++) {\r\n                        if (fileList[i].uid === file.uid) {\r\n                            fileList.splice(i, 1);\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n\r\n            handlePreview(file) {\r\n                console.log(file)\r\n                if (file.hasOwnProperty('status') && file.status === 'success') {\r\n                    this.currentFileData = file.response ? file.response : file;\r\n                    this.dialogVisible = true\r\n                } else {\r\n                    this.$message({\r\n                        type: 'warning',\r\n                        message: '请先上传，再对文件进行预览或下载'\r\n                    })\r\n                }\r\n            },\r\n            preViewFile() {//文件预览\r\n                if (this.currentFileData.url) {\r\n                    let name = this.currentFileData.name.split('.')[1];\r\n                    let that = this;\r\n                    console.log(name)\r\n                    let url = that.$api.upload.reqUrl + that.$api.upload.preview + '?md5Path='\r\n                    if (name === 'pdf') {\r\n                        window.open(url + this.currentFileData.url,'_blank')\r\n                    } else {//非pdf文件获取pdf地址\r\n                        that.$message({\r\n                            type: 'info',\r\n                            message: '仅支持pdf预览，该文件需要先下载！'\r\n                        })\r\n                    }\r\n                    this.dialogVisible = false\r\n                } else {\r\n                    this.$message({\r\n                        type: 'info',\r\n                        message: '预览失败，请检查文件路径！'\r\n                    })\r\n                }\r\n            },\r\n            /*单文件下载*/\r\n            downloadFile() {\r\n                let that = this;\r\n                this.$$download(this.currentFileData).then(() => {\r\n                    that.$message({\r\n                        type: 'success',\r\n                        message: '下载成功！'\r\n                    })\r\n                }).catch((err) => {\r\n                    that.$message({\r\n                        type: 'info',\r\n                        message: '下载失败！'\r\n                    })\r\n                })\r\n                this.dialogVisible = false\r\n            },\r\n            dialogClose() {\r\n                this.currentFileData = {}\r\n            },\r\n            //批量下载\r\n            downloadAll() {\r\n                let that = this;\r\n                let md5Path = [];\r\n                this.fileList.forEach((item, index) => {\r\n                    console.log(item)\r\n                    md5Path.push(item.md5Path)\r\n                });\r\n                let Params = Object.assign({//拼接参数\r\n                    md5Paths: md5Path,\r\n                }, this.downLoadAllParams);\r\n                this.$$downloadPackage(Params).then(() => {\r\n                    that.$message({\r\n                        type: 'success',\r\n                        message: '下载成功！'\r\n                    })\r\n                }).catch((err) => {\r\n                    that.$message({\r\n                        type: 'info',\r\n                        message: '下载失败！'\r\n                    })\r\n                })\r\n            },\r\n        }\r\n    }\r\n</script>\r\n\r\n<style>\r\n    .myupload .el-dialog__body {\r\n        padding: 10px 20px;\r\n        font-size: 16px;\r\n    }\r\n\r\n    .myupload .el-dialog__body-myi {\r\n        color: #EED46F;\r\n        margin-right: 20px;\r\n    }\r\n\r\n    .mytip {\r\n        font-size: 12px;\r\n        color: #909399;\r\n        margin: 3px;\r\n    }\r\n\r\n</style>\r\n"],"sourceRoot":"src/components/upload"}]}