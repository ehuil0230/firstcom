{"remainingRequest":"D:\\vueWorkspace\\cyfz\\node_modules\\babel-loader\\lib\\index.js!D:\\vueWorkspace\\cyfz\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\vueWorkspace\\cyfz\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\vueWorkspace\\cyfz\\src\\components\\echarts\\Map2.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\vueWorkspace\\cyfz\\src\\components\\echarts\\Map2.vue","mtime":1569547254094},{"path":"D:\\vueWorkspace\\cyfz\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\vueWorkspace\\cyfz\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\vueWorkspace\\cyfz\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\vueWorkspace\\cyfz\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\nimport echarts from 'echarts';\nimport china from 'echarts/map/json/china.json';\necharts.registerMap('china', china);\nexport default {\n  name: 'Map',\n  props: {\n    Data: {\n      url: String,\n      color: {\n        //地图的颜色范围\n        type: Array,\n        default: ['#0eb93d', '#00f4b3'] //深到浅\n\n      },\n      name: String,\n      //标题名字\n      download: {\n        //是否显示下载按钮\n        type: Boolean,\n        default: false\n      },\n      params: {\n        type: String,\n        default: ''\n      }\n    }\n  },\n  data: function data() {\n    return {\n      data: [],\n      max: 1500,\n      param: this.Data.params,\n      //传过来的业务类型参数\n      color: this.Data.color,\n      //传递过来的颜色\n      name: this.Data.name,\n      //图标题\n      download: this.Data.download //是否下载按钮\n\n    };\n  },\n  mounted: function mounted() {\n    this.getData();\n  },\n  methods: {\n    //获取数据\n    getData: function getData() {\n      var that = this;\n      this.$$request({\n        url: this.Data.url,\n        data: {\n          mapType: this.param\n        }\n      }).then(function (res) {\n        var list = res.info.one.data;\n\n        for (var i = 0; i < list.length; i++) {\n          var obj = {\n            name: '',\n            value: ''\n          };\n          obj.name = list[i].name;\n          obj.value = list[i].value;\n          that.data.push(obj);\n        }\n\n        that.max = res.info.one.maxCount;\n        that.$emit(\"sendData\", res.info.two);\n      }).then(function () {\n        that.drawLine();\n      });\n    },\n    //绘制图表\n    drawLine: function drawLine() {\n      // 基于准备好的dom，初始化echarts实例\n      var id = \"echartBar\" + Math.random() * 1000;\n      this.$el.setAttribute(\"id\", id);\n      var myChartContainer = document.getElementById(id);\n      var myChartChina = echarts.init(myChartContainer); // 绘制图表\n\n      var optionMap = {\n        //地图配置项\n        tooltip: {},\n        //鼠标悬停提示是否显示\n        title: {\n          text: this.name,\n          left: 'center',\n          top: [10]\n        },\n        toolbox: {\n          show: this.download,\n          top: [5],\n          right: [20],\n          feature: {\n            saveAsImage: {}\n          }\n        },\n        // legend: {   //定位\n        //     orient: 'vertical',\n        //     left: 'left',\n        //     data: ['']\n        // },\n        visualMap: {\n          min: 0,\n          max: this.max,\n          left: '5%',\n          top: '50%',\n          text: ['高', '低'],\n          calculable: true,\n          color: this.color,\n          itemWidth: [10],\n          itemHeight: [100]\n        },\n        selectedMode: 'single',\n        series: [{\n          name: '',\n          type: 'map',\n          // type: 'scatter',\n          mapType: 'china',\n          itemStyle: {\n            normal: {\n              borderColor: 'rgba(0, 0, 0, 0.2)'\n            },\n            emphasis: {\n              shadowOffsetX: 10,\n              shadowOffsetY: 10,\n              shadowBlur: 20,\n              borderWidth: 0,\n              shadowColor: 'rgba(0, 0, 0, 0.5)'\n            }\n          },\n          showLegendSymbol: true,\n          label: {\n            position: [4, 5],\n            show: true,\n            fontSize: 8,\n            color: '#888888',\n            align: 'center'\n          },\n          data: this.data //展示的地图数据\n\n        }]\n      };\n      myChartChina.setOption(optionMap);\n\n      window.onresize = function () {\n        myChartChina.resize();\n      };\n    }\n  },\n  watch: {\n    'Data.params': function DataParams(val) {\n      alert(val);\n      this.param = val;\n      this.getData();\n    }\n  }\n};",{"version":3,"sources":["Map2.vue"],"names":[],"mappings":"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","sourcesContent":["<!--地图组件-->\r\n<template>\r\n    <div class=\"chart_map\">\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import echarts from 'echarts'\r\n    import china from 'echarts/map/json/china.json'\r\n    echarts.registerMap('china', china)\r\n\r\n    export default {\r\n        name: 'Map',\r\n        props: {\r\n            Data: {\r\n                url: String,\r\n                color: { //地图的颜色范围\r\n                    type: Array,\r\n                    default: ['#0eb93d', '#00f4b3'], //深到浅\r\n                },\r\n                name: String,//标题名字\r\n                download: { //是否显示下载按钮\r\n                    type: Boolean,\r\n                    default: false\r\n                },\r\n                params: {\r\n                    type: String,\r\n                    default:'',\r\n                }\r\n            }\r\n        },\r\n        data() {\r\n            return {\r\n                data: [],\r\n                max: 1500,\r\n                param: this.Data.params,//传过来的业务类型参数\r\n                color: this.Data.color,//传递过来的颜色\r\n                name: this.Data.name,//图标题\r\n                download: this.Data.download,//是否下载按钮\r\n            }\r\n        },\r\n        mounted() {\r\n            this.getData();\r\n        },\r\n        methods: {\r\n            //获取数据\r\n            getData(){\r\n                let that = this;\r\n                this.$$request({\r\n                    url: this.Data.url,\r\n                    data: {\r\n                        mapType: this.param,\r\n                    }\r\n                }).then(function (res) {\r\n                    let list = res.info.one.data;\r\n                    for (let i = 0; i < list.length; i++) {\r\n                        let obj = {\r\n                            name:'',\r\n                            value:'',\r\n                        }\r\n                        obj.name = list[i].name;\r\n                        obj.value = list[i].value;\r\n                        that.data.push(obj);\r\n                    }\r\n                    that.max = res.info.one.maxCount;\r\n                    that.$emit(\"sendData\", res.info.two);\r\n                }).then(function () {\r\n                    that.drawLine();\r\n                })\r\n            },\r\n            //绘制图表\r\n            drawLine() {\r\n                // 基于准备好的dom，初始化echarts实例\r\n                let id = \"echartBar\" + Math.random() * 1000;\r\n                this.$el.setAttribute(\"id\", id);\r\n                let myChartContainer = document.getElementById(id);\r\n                let myChartChina = echarts.init(myChartContainer);\r\n                // 绘制图表\r\n                let optionMap = { //地图配置项\r\n                    tooltip: {},//鼠标悬停提示是否显示\r\n                    title: {\r\n                        text: this.name,\r\n                        left: 'center',\r\n                        top: [10],\r\n                    },\r\n                    toolbox: {\r\n                        show: this.download,\r\n                        top: [5],\r\n                        right: [20],\r\n                        feature: {\r\n                            saveAsImage: {}\r\n                        }\r\n                    },\r\n                    // legend: {   //定位\r\n                    //     orient: 'vertical',\r\n                    //     left: 'left',\r\n                    //     data: ['']\r\n                    // },\r\n                    visualMap: {\r\n                        min: 0,\r\n                        max: this.max,\r\n                        left: '5%',\r\n                        top: '50%',\r\n                        text: ['高', '低'],\r\n                        calculable: true,\r\n                        color: this.color,\r\n                        itemWidth: [10],\r\n                        itemHeight: [100],\r\n                    },\r\n                    selectedMode: 'single',\r\n                    series: [\r\n                        {\r\n                            name: '',\r\n                            type:'map',\r\n                            // type: 'scatter',\r\n                            mapType: 'china',\r\n                            itemStyle: {\r\n                                normal: {\r\n                                    borderColor: 'rgba(0, 0, 0, 0.2)'\r\n                                },\r\n                                emphasis: {\r\n                                    shadowOffsetX: 10,\r\n                                    shadowOffsetY: 10,\r\n                                    shadowBlur: 20,\r\n                                    borderWidth: 0,\r\n                                    shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n                                }\r\n                            },\r\n                            showLegendSymbol: true,\r\n                            label: {\r\n                                position: [4, 5],\r\n                                show: true,\r\n                                fontSize: 8,\r\n                                color: '#888888',\r\n                                align: 'center'\r\n                            },\r\n                            data: this.data,//展示的地图数据\r\n                        }\r\n                    ]\r\n                };\r\n                myChartChina.setOption(optionMap);\r\n                window.onresize = function () {\r\n                    myChartChina.resize();\r\n                }\r\n            },\r\n        },\r\n        watch: {\r\n            'Data.params':function (val) {\r\n                alert(val);\r\n                this.param = val;\r\n                this.getData();\r\n            }\r\n        },\r\n    }\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n    .chart_map {\r\n        width: 100%;\r\n        height: 100%;\r\n        margin: 0 auto;\r\n    }\r\n</style>\r\n"],"sourceRoot":"src/components/echarts"}]}