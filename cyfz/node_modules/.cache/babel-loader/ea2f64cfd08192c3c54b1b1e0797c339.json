{"remainingRequest":"D:\\vueWorkspace\\cyfz\\node_modules\\babel-loader\\lib\\index.js!D:\\vueWorkspace\\cyfz\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\vueWorkspace\\cyfz\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\vueWorkspace\\cyfz\\src\\components\\cropper\\cropper.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\vueWorkspace\\cyfz\\src\\components\\cropper\\cropper.vue","mtime":1569207614556},{"path":"D:\\vueWorkspace\\cyfz\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\vueWorkspace\\cyfz\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\vueWorkspace\\cyfz\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\vueWorkspace\\cyfz\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Vue from 'vue';\nimport VueCropper from 'vue-cropper';\nVue.use(VueCropper);\nexport default {\n  name: \"cropper\",\n  props: {\n    initList: {\n      type: Array,\n      default: []\n    },\n    type: {\n      type: String,\n      default: \"base64\"\n    },\n    outputType: {\n      type: String,\n      default: \"png\"\n    },\n    aspectRatio: {\n      default: function _default() {\n        return [1, 1];\n      },\n      type: Array\n    },\n    limit: {\n      type: Number,\n      default: 1\n    }\n  },\n  data: function data() {\n    return {\n      previewVisible: false,\n      imageUrl: '',\n      previewUrl: \"\",\n      // 裁剪组件的基础配置option\n      defaultOptions: {\n        url: '',\n        img: '',\n        // 裁剪图片的地址\n        info: true,\n        // 裁剪框的大小信息\n        outputSize: 0.8,\n        // 裁剪生成图片的质量\n        outputType: 'png',\n        // 裁剪生成图片的格式\n        canScale: false,\n        // 图片是否允许滚轮缩放\n        autoCrop: true,\n        // 是否默认生成截图框\n        // autoCropWidth: 300, // 默认生成截图框宽度\n        // autoCropHeight: 200, // 默认生成截图框高度\n        fixedBox: false,\n        // 固定截图框大小 不允许改变\n        fixed: true,\n        // 是否开启截图框宽高固定比例\n        fixedNumber: [1, 1],\n        // 截图框的宽高比例\n        full: true,\n        // 是否输出原图比例的截图\n        canMove: true,\n        canMoveBox: true,\n        // 截图框能否拖动\n        original: false,\n        // 上传图片按照原始比例渲染\n        centerBox: false,\n        // 截图框是否被限制在图片里面\n        infoTrue: true // true 为展示真实输出图片宽高 false 展示看到的截图框宽高\n\n      },\n      fileList: [],\n      tempList: [],\n      currentFile: {},\n      currentFileName: \"\",\n      $preview: \"\",\n      // 防止重复提交\n      loading: false,\n      dialogVisible: false\n    };\n  },\n  created: function created() {\n    var _that = this;\n\n    this.defaultOptions.fixedNumber = this.aspectRatio;\n    this.defaultOptions.outputType = this.outputType;\n    this.tempList = this.initList || [];\n    this.initList.forEach(function (item, index) {\n      item.url = _that.$api.upload.reqUrl + _that.$api.upload.downloadByMd5Path + \"?md5Path=\" + item.md5Path + \"&access_token=\" + localStorage.getItem(\"access_token\");\n    });\n  },\n  mounted: function mounted() {\n    this.$preview = $(this.$el.querySelector('.preview'));\n  },\n  watch: {\n    'tempList': function tempList() {\n      this.$emit(\"uploadList\", this.tempList);\n    }\n  },\n  methods: {\n    // 上传按钮   限制图片大小\n    changeUpload: function changeUpload(file, fileList) {\n      if (this.tempList.length >= this.limit) {\n        return;\n      }\n\n      var isLt5M = file.size / 1024 / 1024 < 5;\n\n      if (!isLt5M) {\n        this.$message.error('上传文件大小不能超过 5MB!');\n        return false;\n      }\n\n      this.imageUrl = file.url;\n      this.currentFile = file;\n      this.currentFileName = file.name;\n      this.defaultOptions.img = file.url;\n      this.dialogVisible = true;\n    },\n    // 点击裁剪，这一步是可以拿到处理后的地址\n    finish: function finish() {\n      var _that = this;\n\n      if (this.type === 'blob') {\n        this.$refs.cropper.getCropBlob(function (data) {\n          var file = _that.$$blobToFile(data, _that.currentFileName);\n\n          var modelSrc = window.URL.createObjectURL(data);\n\n          _that.uploadFile(file, modelSrc);\n        });\n      } else {\n        //base64\n        this.$refs.cropper.getCropData(function (data) {\n          var file = _that.$$blobToFile(_that.$$base64toBlob(data), _that.currentFileName);\n\n          var modelSrc = data;\n\n          _that.uploadFile(file, modelSrc);\n        });\n      }\n    },\n    uploadFile: function uploadFile(file, modelSrc) {\n      var _that = this;\n\n      _that.loading = true;\n\n      _that.$$md5ByFile({\n        file: file\n      }).then(function (res) {\n        _that.$$md5CheckByFile({\n          md5: res.md5,\n          file: file\n        }).then(function (checkRes) {\n          if (checkRes && checkRes.msg === \"正常上传\") {\n            _that.$$uploadFile({\n              md5: res.md5,\n              file: file\n            }).then(function (response) {\n              var url = _that.$api.upload.reqUrl + _that.$api.upload.downloadByMd5Path + \"?md5Path=\" + response.info.md5Path + \"&access_token=\" + localStorage.getItem(\"access_token\");\n              _that.currentFile.modelSrc = modelSrc;\n              _that.currentFile.url = url;\n              _that.currentFile.md5Path = response.info.md5Path;\n              _that.currentFile.raw = file;\n\n              _that.tempList.push(_that.currentFile);\n\n              _that.loading = false;\n              _that.dialogVisible = false;\n            }).catch(function () {\n              _that.loading = false;\n              _that.dialogVisible = false;\n            });\n          } else if (checkRes && checkRes.msg === \"已上传\") {\n            var md5Path = checkRes.info.md5Path;\n            var url = _that.$api.upload.reqUrl + _that.$api.upload.downloadByMd5Path + \"?md5Path=\" + md5Path + \"&access_token=\" + localStorage.getItem(\"access_token\");\n            _that.currentFile.modelSrc = modelSrc;\n            _that.currentFile.md5Path = md5Path;\n            _that.currentFile.url = url;\n            _that.currentFile.raw = file;\n\n            _that.tempList.push(_that.currentFile);\n\n            _that.loading = false;\n            _that.dialogVisible = false;\n          } else {\n            _that.loading = false;\n            _that.dialogVisible = false;\n          }\n        }).catch(function (error) {\n          _that.loading = false;\n          _that.dialogVisible = false;\n        });\n      }).catch(function (error) {\n        _that.loading = false;\n        _that.dialogVisible = false;\n      });\n    },\n    imgMouseOver: function imgMouseOver(index) {\n      var _that = this;\n\n      var $div = $(\"<div class='hoverImg'></div>\");\n      this.$preview.find('.imgWrap').eq(index).append($div);\n      $div.append(\"<span class='imgzoomin'><i class=\\\"el-icon-zoom-in\\\"></i></span><span class='imgdownload'><i class=\\\"el-icon-download\\\"></i></span><span class='imgdelete'><i class=\\\"el-icon-delete\\\"></i></span>\");\n      $div.find('.imgdownload').on('click', function () {\n        var src = $(this).closest(\".imgWrap\").find('img').attr(\"src\");\n\n        _that.downLoad(src);\n      });\n      $div.find('.imgzoomin').on('click', function () {\n        _that.previewUrl = _that.tempList[index].url || _that.tempList[index].modelSrc;\n        _that.previewVisible = true;\n      });\n      $div.find('.imgdelete').on('click', function () {\n        _that.tempList.splice(index, 1);\n      });\n    },\n    imgMouseLeave: function imgMouseLeave(index) {\n      this.$preview.find('.imgWrap').eq(index).find('.hoverImg').remove();\n    },\n    downLoad: function downLoad(src) {\n      console.info(src);\n      var aLink = document.createElement('a');\n      aLink.download = 'demo';\n      aLink.href = src;\n      aLink.click(); // if (this.type === 'blob') {\n      //     this.$refs.cropper.getCropBlob((data) => {\n      //         aLink.href = window.URL.createObjectURL(data)\n      //         aLink.click()\n      //     })\n      // } else {\n      //     this.$refs.cropper.getCropData((data) => {\n      //         aLink.href = data\n      //         aLink.click()\n      //     })\n      // }\n    }\n  }\n};",{"version":3,"sources":["cropper.vue"],"names":[],"mappings":"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","sourcesContent":["<!--\r\nnpm install vue-cropper\r\nimport VueCropper from 'vue-cropper'\r\nVue.use(VueCropper)\r\n\r\nuploadList:Array 已选择的图片列表，其中modelSrc存放图片内容\r\ntype:base64/blob\r\naspectRatio:宽高比 [3,2]\r\noutputType：输出图片格式，默认png\r\nlimit: 上传数量\r\ninitList: 初始化数组\r\n-->\r\n<template>\r\n    <div class=\"cropper-wrap\">\r\n        <!-- element 上传图片按钮 -->\r\n        <div class=\"upload\">\r\n            <el-upload :file-list=\"fileList\" multiple class=\"upload-demo\" action=\"\" drag  list-type=\"picture\"\r\n                       :auto-upload=\"false\" :show-file-list=\"false\"\r\n                       :on-change='changeUpload' accept=\"image/png, image/jpeg, image/gif, image/jpg\">\r\n                <!--                <i class=\"el-icon-upload\"></i>-->\r\n                <el-button slot=\"trigger\" size=\"small\" type=\"primary\">选择图片</el-button>\r\n                <!--                <div class=\"el-upload__text\">选择图片</div>-->\r\n                <!--                <div class=\"el-upload__tip\">支持绝大多数图片格式，单张图片最大支持5MB</div>-->\r\n            </el-upload>\r\n\r\n        </div>\r\n        <div class=\"preview\">\r\n            <div class=\"imgWrap\" v-for=\"(item,index) in tempList\" :key=\"item.uid\"  @mouseenter=\"imgMouseOver(index)\" @mouseleave=\"imgMouseLeave(index)\">\r\n                <img v-if=\"item.url\" :src=\"item.url\" />\r\n                <img v-else :src=\"item.modelSrc\" />\r\n            </div>\r\n        </div>\r\n        <!-- vueCropper 剪裁图片实现-->\r\n        <el-dialog title=\"图片剪裁\" :visible.sync=\"dialogVisible\">\r\n            <div class=\"cropper-content\">\r\n                <div class=\"cropper\" style=\"text-align:center\">\r\n                    <vueCropper\r\n                            ref=\"cropper\"\r\n                            :img=\"defaultOptions.img\"\r\n                            :outputSize=\"defaultOptions.size\"\r\n                            :outputType=\"defaultOptions.outputType\"\r\n                            :info=\"true\"\r\n                            :full=\"defaultOptions.full\"\r\n                            :canMove=\"defaultOptions.canMove\"\r\n                            :canMoveBox=\"defaultOptions.canMoveBox\"\r\n                            :original=\"defaultOptions.original\"\r\n                            :autoCrop=\"defaultOptions.autoCrop\"\r\n                            :fixed=\"defaultOptions.fixed\"\r\n                            :fixedNumber=\"defaultOptions.fixedNumber\"\r\n                            :centerBox=\"defaultOptions.centerBox\"\r\n                            :infoTrue=\"defaultOptions.infoTrue\"\r\n                            :fixedBox=\"defaultOptions.fixedBox\"\r\n                    ></vueCropper>\r\n                </div>\r\n            </div>\r\n            <div slot=\"footer\" class=\"dialog-footer\">\r\n                <el-button @click=\"dialogVisible = false\">取 消</el-button>\r\n                <el-button type=\"primary\" @click=\"finish\" :loading=\"loading\">确认</el-button>\r\n            </div>\r\n        </el-dialog>\r\n        <el-dialog title=\"图片预览\" :visible.sync=\"previewVisible\">\r\n            <div class=\"previewImg\">\r\n                <img :src=\"previewUrl\">\r\n            </div>\r\n        </el-dialog>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import Vue from 'vue'\r\n    import VueCropper from 'vue-cropper'\r\n    Vue.use(VueCropper)\r\n    export default {\r\n        name: \"cropper\",\r\n        props:{\r\n            initList:{\r\n                type: Array,\r\n                default: []\r\n            },\r\n            type:{\r\n                type:String,\r\n                default:\"base64\"\r\n            },\r\n            outputType:{\r\n                type:String,\r\n                default:\"png\"\r\n            },\r\n            aspectRatio:{\r\n                default: function () {\r\n                    return [1,1]\r\n                },\r\n                type: Array\r\n            },\r\n            limit:{\r\n                type: Number,\r\n                default: 1\r\n            }\r\n        },\r\n        data() {\r\n            return {\r\n                previewVisible: false,\r\n                imageUrl: '',\r\n                previewUrl:\"\",\r\n                // 裁剪组件的基础配置option\r\n                defaultOptions: {\r\n                    url:'',\r\n                    img: '', // 裁剪图片的地址\r\n                    info: true, // 裁剪框的大小信息\r\n                    outputSize: 0.8, // 裁剪生成图片的质量\r\n                    outputType: 'png', // 裁剪生成图片的格式\r\n                    canScale: false, // 图片是否允许滚轮缩放\r\n                    autoCrop: true, // 是否默认生成截图框\r\n                    // autoCropWidth: 300, // 默认生成截图框宽度\r\n                    // autoCropHeight: 200, // 默认生成截图框高度\r\n                    fixedBox: false, // 固定截图框大小 不允许改变\r\n                    fixed: true, // 是否开启截图框宽高固定比例\r\n                    fixedNumber: [1, 1], // 截图框的宽高比例\r\n                    full: true, // 是否输出原图比例的截图\r\n                    canMove: true,\r\n                    canMoveBox: true, // 截图框能否拖动\r\n                    original: false, // 上传图片按照原始比例渲染\r\n                    centerBox: false, // 截图框是否被限制在图片里面\r\n                    infoTrue: true // true 为展示真实输出图片宽高 false 展示看到的截图框宽高\r\n                },\r\n                fileList:[],\r\n                tempList:[],\r\n                currentFile:{},\r\n                currentFileName:\"\",\r\n                $preview:\"\",\r\n                // 防止重复提交\r\n                loading: false,\r\n                dialogVisible:false\r\n            }\r\n        },\r\n        created(){\r\n            let _that = this\r\n            this.defaultOptions.fixedNumber = this.aspectRatio\r\n            this.defaultOptions.outputType = this.outputType\r\n            this.tempList = this.initList || []\r\n            this.initList.forEach((item,index)=>{\r\n                item.url = _that.$api.upload.reqUrl+ _that.$api.upload.downloadByMd5Path+\"?md5Path=\"+item.md5Path+ \"&access_token=\"+localStorage.getItem(\"access_token\")\r\n            })\r\n        },\r\n        mounted(){\r\n            this.$preview = $(this.$el.querySelector('.preview'))\r\n        },\r\n        watch:{\r\n            'tempList'(){\r\n                this.$emit(\"uploadList\",this.tempList);\r\n            }\r\n        },\r\n        methods: {\r\n            // 上传按钮   限制图片大小\r\n            changeUpload(file, fileList) {\r\n                if(this.tempList.length>=this.limit){\r\n                    return;\r\n                }\r\n                const isLt5M = file.size / 1024 / 1024 < 5\r\n                if (!isLt5M) {\r\n                    this.$message.error('上传文件大小不能超过 5MB!')\r\n                    return false\r\n                }\r\n                this.imageUrl = file.url\r\n                this.currentFile = file;\r\n                this.currentFileName=file.name\r\n                this.defaultOptions.img = file.url\r\n                this.dialogVisible = true\r\n            },\r\n            // 点击裁剪，这一步是可以拿到处理后的地址\r\n            finish() {\r\n                const _that = this;\r\n                if (this.type === 'blob') {\r\n                    this.$refs.cropper.getCropBlob((data) => {\r\n                        let file = _that.$$blobToFile(data,_that.currentFileName)\r\n                        let modelSrc = window.URL.createObjectURL(data);\r\n                        _that.uploadFile(file,modelSrc)\r\n                    })\r\n                } else {//base64\r\n                    this.$refs.cropper.getCropData((data) => {\r\n                        let file = _that.$$blobToFile(_that.$$base64toBlob(data),_that.currentFileName)\r\n                        let modelSrc = data\r\n                        _that.uploadFile(file,modelSrc)\r\n                    })\r\n                }\r\n            },\r\n\r\n            uploadFile(file,modelSrc){\r\n                const _that = this;\r\n                _that.loading = true\r\n                _that.$$md5ByFile({file:file}).then((res)=>{\r\n                    _that.$$md5CheckByFile({md5:res.md5,file:file}).then((checkRes)=>{\r\n                        if(checkRes && checkRes.msg === \"正常上传\"){\r\n                            _that.$$uploadFile({md5:res.md5,file:file}).then(function(response){\r\n                                let url = _that.$api.upload.reqUrl+ _that.$api.upload.downloadByMd5Path+\"?md5Path=\"+response.info.md5Path+ \"&access_token=\"+localStorage.getItem(\"access_token\")\r\n                                _that.currentFile.modelSrc = modelSrc\r\n                                _that.currentFile.url = url\r\n                                _that.currentFile.md5Path = response.info.md5Path\r\n                                _that.currentFile.raw = file\r\n                                _that.tempList.push(_that.currentFile)\r\n\r\n                                _that.loading = false\r\n                                _that.dialogVisible = false\r\n                            }).catch(()=>{\r\n                                _that.loading = false\r\n                                _that.dialogVisible = false\r\n                            })\r\n                        }else if (checkRes && checkRes.msg === \"已上传\"){\r\n                            let md5Path = checkRes.info.md5Path\r\n                            let url = _that.$api.upload.reqUrl+ _that.$api.upload.downloadByMd5Path+\"?md5Path=\"+md5Path+ \"&access_token=\"+localStorage.getItem(\"access_token\")\r\n                            _that.currentFile.modelSrc = modelSrc\r\n                            _that.currentFile.md5Path = md5Path\r\n                            _that.currentFile.url = url\r\n                            _that.currentFile.raw = file\r\n                            _that.tempList.push(_that.currentFile)\r\n                            _that.loading = false\r\n                            _that.dialogVisible = false\r\n\r\n                        }else{\r\n                            _that.loading = false\r\n                            _that.dialogVisible = false\r\n                        }\r\n                    }).catch(function (error) {\r\n                        _that.loading = false\r\n                        _that.dialogVisible = false\r\n                    })\r\n                }).catch(function (error) {\r\n                    _that.loading = false\r\n                    _that.dialogVisible = false\r\n                })\r\n            },\r\n            imgMouseOver(index){\r\n                const _that = this;\r\n                var $div = $(\"<div class='hoverImg'></div>\");\r\n                this.$preview.find('.imgWrap').eq(index).append($div)\r\n                $div.append(\"<span class='imgzoomin'><i class=\\\"el-icon-zoom-in\\\"></i></span><span class='imgdownload'><i class=\\\"el-icon-download\\\"></i></span><span class='imgdelete'><i class=\\\"el-icon-delete\\\"></i></span>\")\r\n                $div.find('.imgdownload').on('click',function () {\r\n                    var src = $(this).closest(\".imgWrap\").find('img').attr(\"src\")\r\n                    _that.downLoad(src)\r\n                })\r\n                $div.find('.imgzoomin').on('click',function () {\r\n                    _that.previewUrl = _that.tempList[index].url || _that.tempList[index].modelSrc\r\n                    _that.previewVisible=true\r\n\r\n                })\r\n                $div.find('.imgdelete').on('click',function () {\r\n                    _that.tempList.splice(index,1)\r\n                })\r\n            },\r\n            imgMouseLeave(index){\r\n                this.$preview.find('.imgWrap').eq(index).find('.hoverImg').remove()\r\n            },\r\n            downLoad(src){\r\n                console.info(src)\r\n                var aLink = document.createElement('a')\r\n                aLink.download = 'demo'\r\n                aLink.href=src\r\n                aLink.click()\r\n\r\n                // if (this.type === 'blob') {\r\n                //     this.$refs.cropper.getCropBlob((data) => {\r\n                //         aLink.href = window.URL.createObjectURL(data)\r\n                //         aLink.click()\r\n                //     })\r\n                // } else {\r\n                //     this.$refs.cropper.getCropData((data) => {\r\n                //         aLink.href = data\r\n                //         aLink.click()\r\n                //     })\r\n                // }\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style lang=\"less\">\r\n    .cropper-wrap{\r\n        .upload{\r\n            display: inline-block;\r\n        }\r\n\r\n        .upload-demo .el-upload-dragger {\r\n            width: auto;\r\n            height: auto;\r\n        }\r\n\r\n        .cropper-content .cropper {\r\n            width: auto;\r\n            height: 300px;\r\n        }\r\n\r\n        .previewImg {\r\n            width: 50%;\r\n            margin: 0 auto;\r\n            text-align: center;\r\n        }\r\n\r\n        .previewImg img {\r\n            width: 100%;\r\n        }\r\n\r\n        .preview {\r\n            display: inline-block;\r\n        }\r\n\r\n        .preview .imgWrap {\r\n            width: 150px;\r\n            height: 180px;\r\n            overflow: hidden;\r\n            position: relative;\r\n            box-shadow: 0 2px 4px rgba(0, 0, 0, .12), 0 0 6px rgba(0, 0, 0, .04);\r\n            position: relative;\r\n            margin-left: 10px;\r\n            display: inline-block;\r\n        }\r\n\r\n        .imgWrap img {\r\n            width: 100%;\r\n        }\r\n\r\n        .imgWrap .hoverImg {\r\n            position: absolute;\r\n            left: 0;\r\n            top: 0;\r\n            right: 0;\r\n            bottom: 0;\r\n            padding-top: 20%;\r\n            cursor: default;\r\n            text-align: center;\r\n            color: #fff;\r\n            /*opacity: 0.5;*/\r\n            font-size: 20px;\r\n            background-color: rgba(0, 0, 0, .5);\r\n            transition: opacity .3s;\r\n        }\r\n\r\n        .imgzoomin, .imgdownload, .imgdelete {\r\n            cursor: pointer;\r\n        }\r\n\r\n        .imgdownload, .imgdelete {\r\n            margin-left: 5px;\r\n        }\r\n    }\r\n</style>\r\n"],"sourceRoot":"src/components/cropper"}]}