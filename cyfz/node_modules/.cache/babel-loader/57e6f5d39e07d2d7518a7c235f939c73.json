{"remainingRequest":"D:\\vueWorkspace\\cyfz\\node_modules\\babel-loader\\lib\\index.js!D:\\vueWorkspace\\cyfz\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\vueWorkspace\\cyfz\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\vueWorkspace\\cyfz\\src\\views\\xtgl\\myToolbar\\tzggCreOperation.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\vueWorkspace\\cyfz\\src\\views\\xtgl\\myToolbar\\tzggCreOperation.vue","mtime":1571637100621},{"path":"D:\\vueWorkspace\\cyfz\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\vueWorkspace\\cyfz\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\vueWorkspace\\cyfz\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\vueWorkspace\\cyfz\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport rich from '@/components/richTextEditor/myRichTextEditor';\nimport fullScreenEditing from \"./fullScreenEditing\";\nimport cyUpload from '@/components/upAndDown/cyUpload';\nexport default {\n  name: \"tzggCreOperation\",\n  components: {\n    cyUpload: cyUpload,\n    rich: rich,\n    fullScreenEditing: fullScreenEditing\n  },\n  props: {\n    dialogData: {\n      type: Object\n    },\n    taVisible: {\n      type: Boolean\n    }\n  },\n  data: function data() {\n    return {\n      //暂存表单数据\n      tempData: {\n        uuid: '',\n        //保存完提交时传递全局变量\n        tempFile: [] //暂存附件\n\n      },\n      //上传\n      showTip: this.dialogData.showTip,\n      //上传提示\n      allowUpload: this.dialogData.allowUpload,\n      //是否上传判断\n      fileNum: 100,\n      //最大上传数\n      relatedId: this.dialogData.uuid,\n      //附件关联ID\n      //全屏富文本编辑\n      smallEditerContent: {},\n      //富文本内容（用于回传全屏富文本）\n      fullDialogOpen: false,\n      //全屏富文本弹窗控制\n      dialogVisible: this.taVisible,\n      //编辑页弹窗控制\n      //编辑页表单数据\n      proclamationForm: {\n        uuid: this.dialogData.uuid ? this.dialogData.uuid : \"\",\n        proclamationDm: this.dialogData.fromType,\n        title: this.dialogData.title ? this.dialogData.title : \"\",\n        isTop: this.dialogData.isTop ? this.dialogData.isTop : \"1\",\n        content: this.dialogData.content ? this.dialogData.content : \"\",\n        approvalDm: this.dialogData.spType,\n        tableid: this.dialogData.uuid ? this.dialogData.uuid : \"\"\n      },\n      setContent: '',\n      //富文本内容获取\n      rules: {\n        title: [{\n          required: true,\n          message: '请输入标题!'\n        }, {\n          max: 100,\n          message: '请输入不超过100字！'\n        }],\n        content: [{\n          required: true,\n          message: '请输入内容!'\n        }, {\n          max: 10000,\n          message: '请输入不超过10000字！',\n          trigger: 'blur'\n        }]\n      },\n      //文本编辑\n      uploadUrl: '',\n      //图片上传地址\n      editorOption: {\n        // 配置信息\n        placeholder: \"请输入内容...\",\n        modules: {\n          toolbar: [['bold', 'italic', 'underline', 'strike'], ['blockquote', 'code-block'], [{\n            'header': 1\n          }, {\n            'header': 2\n          }], [{\n            'list': 'ordered'\n          }, {\n            'list': 'bullet'\n          }], [{\n            'script': 'sub'\n          }, {\n            'script': 'super'\n          }], [{\n            'indent': '-1'\n          }, {\n            'indent': '+1'\n          }], [{\n            'direction': 'rtl'\n          }], [{\n            'size': ['small', false, 'large', 'huge']\n          }], [{\n            'header': [1, 2, 3, 4, 5, 6, false]\n          }], [{\n            'font': []\n          }], [{\n            'color': []\n          }, {\n            'background': []\n          }], [{\n            'align': []\n          }], ['clean'], ['link', 'image', 'video']],\n          imageDrop: true,\n          imageResize: {\n            displayStyles: {\n              backgroundColor: 'black',\n              border: 'none',\n              color: 'white'\n            },\n            modules: ['Resize', 'DisplaySize', 'Toolbar']\n          }\n        }\n      },\n      currentFileData: {},\n      //当前文本内容\n      fileList: this.defultFileList\n    };\n  },\n  created: function created() {\n    //获取全屏富文本信息\n    this.setContent = this.proclamationForm.content; //打开弹窗时获取到已上传附件\n\n    this.fileCheck();\n  },\n  watch: {},\n  methods: {\n    //打开弹窗时获取到已上传附件\n    fileCheck: function fileCheck() {\n      var that = this;\n\n      if (this.dialogData.uuid !== '' && this.dialogData.uuid) {\n        this.$$request({\n          method: 'post',\n          url: this.$api.upload.queryFileList,\n          data: {\n            relatedid: this.dialogData.uuid\n          }\n        }).then(function (res) {\n          if (res.info.length > 0) {\n            res.info.forEach(function (item) {\n              that.tempData.tempFile.push(item);\n            });\n          }\n        });\n      }\n    },\n    //打开全屏富文本编辑\n    openFullEditer: function openFullEditer() {\n      var that = this;\n      that.smallEditerContent = this.getContent;\n      this.fullDialogOpen = true;\n    },\n    //全屏富文本编辑返回数据\n    fullEditerContent: function fullEditerContent(fullContent) {\n      this.fullDialogOpen = false;\n\n      if (fullContent == false) {\n        this.fullDialogOpen = false;\n      } else {\n        this.setContent = fullContent;\n        this.fullDialogOpen = false;\n      }\n    },\n    //弹窗关闭\n    handleClose: function handleClose() {\n      this.tempData = '';\n      this.content = '';\n      this.dialogVisible = false;\n      this.allowUplaod = false;\n      this.$emit(\"refreshTable\", true);\n    },\n    //提交之前进行保存加载tableid\n    loadData: function loadData() {\n      this.$emit(\"refreshTable\", false);\n    },\n    //富文本回调\n    onEditorReady: function onEditorReady(quill) {},\n    //富文本回传\n    onEditorChange: function onEditorChange(_ref) {\n      var quill = _ref.quill,\n          html = _ref.html,\n          text = _ref.text;\n      this.getContent = html;\n      this.setContent = html;\n    },\n    //旧保存方法（好使）\n    saveForm: function saveForm(proclamationForm) {\n      var that = this; //弹窗不关闭暂存uuid，用于控制重复提交\n\n      var tempId = this.tempData.uuid;\n\n      if (tempId) {\n        this.proclamationForm.uuid = tempId;\n      } //获取富文本编辑框内容赋给表单\n\n\n      this.proclamationForm.content = this.getContent;\n\n      if (that.proclamationForm.uuid == null || that.proclamationForm.uuid == '') {\n        that.$refs[proclamationForm].validate(function (valid) {\n          if (valid) {\n            //保存\n            that.$axios({\n              method: 'post',\n              url: that.$api.xtglApi.xtglTzggSave,\n              data: that.proclamationForm\n            }).then(function (res) {\n              that.relatedId = res.info.uuid;\n\n              if (res.result === 1) {\n                that.tempData.uuid = res.info.uuid; //暂存uuid\n\n                var fileList = that.$refs.upload.fileList; //判断是否有附件，有则上传\n\n                if (fileList.length > 0) {\n                  var MD5Paths = [],\n                      fileNames = [];\n                  fileList.forEach(function (item) {\n                    MD5Paths.push(item.url);\n                    fileNames.push(item.name);\n                  });\n                  var param = {\n                    \"relatedid\": res.info.uuid,\n                    \"MD5Path\": MD5Paths.join(','),\n                    \"fileName\": fileNames.join(',')\n                  };\n                  that.fileList = that.$refs.upload.fileList;\n                  that.$$insertFileInfoBatch(param).then(function (resdata) {\n                    that.$message({\n                      message: '操作成功',\n                      type: 'success'\n                    });\n                    that.tempData.tempFile = that.$refs.upload.fileList; //暂存新上传附件\n                    //that.dialogFormVisible = false; //保存成功不关闭弹窗\n                  }).catch(function (err) {\n                    that.$message({\n                      message: '关联附件列表失败',\n                      type: 'warning'\n                    }); //that.dialogFormVisible = false; //保存成功不关闭弹窗\n                  });\n                } else {\n                  that.$message({\n                    message: res.msg,\n                    type: 'success'\n                  }); //that.dialogFormVisible = false; //保存成功不关闭弹窗\n                }\n              } //保存完成后弹窗不关闭\n              //that.handleClose()\n              //that.proclamationForm = ''\n\n            });\n          } else {\n            return false;\n          }\n        });\n      } else {\n        //更新\n        this.relatedId = that.proclamationForm.uuid;\n        that.$axios({\n          method: 'post',\n          url: that.$api.xtglApi.xtglTzggUpdate,\n          data: that.proclamationForm\n        }).then(function (res) {\n          if (res.result === 1) {\n            var fileList = that.$refs.upload.fileList; //所有文件列表\n            //如果有文件则进行新旧文件判断\n\n            if (fileList.length > 0) {\n              var allFile = []; //提取的所有文件信息\n\n              var uploadFile = []; //过滤完准备上传文件\n\n              var oldFileList = that.tempData.tempFile; //旧文件列表\n              //获取所有文件信息用于比较md5值过滤\n\n              that.$$request({\n                method: 'post',\n                url: that.$api.upload.queryFileList,\n                data: {\n                  relatedid: res.info.uuid\n                }\n              }).then(function (res) {\n                allFile = res.info;\n              }); //过滤旧文件\n\n              allFile.forEach(function (item) {\n                var _iteratorNormalCompletion = true;\n                var _didIteratorError = false;\n                var _iteratorError = undefined;\n\n                try {\n                  for (var _iterator = oldFileList[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                    var oldFile = _step.value;\n\n                    if (oldFile.md5path !== item.md5path) {\n                      uploadFile.push(oldFile);\n                    }\n                  }\n                } catch (err) {\n                  _didIteratorError = true;\n                  _iteratorError = err;\n                } finally {\n                  try {\n                    if (!_iteratorNormalCompletion && _iterator.return != null) {\n                      _iterator.return();\n                    }\n                  } finally {\n                    if (_didIteratorError) {\n                      throw _iteratorError;\n                    }\n                  }\n                }\n              }); //如果有新文件则进行上传处理\n\n              if (uploadFile.length > 0) {\n                //开始上传\n                var MD5Paths = [],\n                    fileNames = [];\n                uploadFile.forEach(function (item) {\n                  MD5Paths.push(item.url);\n                  fileNames.push(item.name);\n                });\n                var param = {\n                  \"relatedid\": res.info.uuid,\n                  \"MD5Path\": MD5Paths.join(','),\n                  \"fileName\": fileNames.join(',')\n                };\n                that.$$insertFileInfoBatch(param).then(function (resdata) {\n                  that.$message({\n                    message: '操作成功',\n                    type: 'success'\n                  });\n                  that.tempData.tempFile = that.$refs.upload.fileList; //暂存新上传文件\n                  //that.dialogFormVisible = false; //弹窗不关闭\n                }).catch(function (err) {\n                  that.$message({\n                    message: '关联附件列表失败',\n                    type: 'warning'\n                  }); //that.dialogFormVisible = false; //弹窗不关闭\n                });\n              } else {\n                that.$message({\n                  message: res.msg,\n                  type: 'success'\n                });\n              }\n            } else {\n              that.$message({\n                message: res.msg,\n                type: 'success'\n              });\n            }\n\n            that.$message({\n              message: res.msg,\n              type: 'success'\n            });\n          } else {\n            that.$message({\n              message: res.msg,\n              type: 'error'\n            });\n          }\n        });\n        /*弹窗不关闭*/\n        //that.handleClose()\n        //that.proclamationForm = ''\n        //that.content = ''\n      }\n    },\n    //旧提交\n    releaseForm: function releaseForm(proclamationForm) {\n      var _this = this;\n\n      var that = this; //弹窗不关闭暂存uuid，用于控制重复提交\n\n      var tempId = this.tempData.uuid;\n\n      if (tempId) {\n        this.proclamationForm.uuid = tempId;\n      }\n\n      this.proclamationForm.content = this.getContent; //获取富文本内容\n\n      if (this.proclamationForm.uuid === null || this.proclamationForm.uuid === \"\") {\n        this.$refs[proclamationForm].validate(function (valid) {\n          if (valid) {\n            //判空校验\n            //先保存后提交\n            _this.$axios({\n              method: 'post',\n              url: _this.$api.xtglApi.xtglTzggSave,\n              data: _this.proclamationForm\n            }).then(function (res) {\n              if (res.result === 1) {\n                return res.info.uuid;\n              }\n            }).then(function (id) {\n              var fileList = that.$refs.upload.fileList; //有则上传附件\n\n              if (fileList.length > 0) {\n                var MD5Paths = [],\n                    fileNames = [];\n                fileList.forEach(function (item) {\n                  MD5Paths.push(item.url);\n                  fileNames.push(item.name);\n                });\n                var param = {\n                  \"relatedid\": id,\n                  \"MD5Path\": MD5Paths.join(','),\n                  \"fileName\": fileNames.join(',')\n                };\n                that.$$insertFileInfoBatch(param).then(function (resdata) {\n                  //附件上传成功则提交（注意参数）\n                  that.proclamationForm.tableid = id;\n                  that.proclamationForm.uuid = '';\n                  that.$axios({\n                    method: 'post',\n                    url: that.$api.xtglApi.xtglTzggSubmit,\n                    data: that.proclamationForm\n                  }).then(function (res) {\n                    if (res.result === 1) {\n                      that.$message({\n                        message: res.msg,\n                        type: 'success'\n                      });\n                    }\n\n                    that.handleClose();\n                    that.proclamationForm = '';\n                  }).catch(function (err) {\n                    that.$alert(err, \"系统异常，请联系管理员！\", {});\n                  });\n                });\n              } else {\n                //无附件则直接提交\n                that.proclamationForm.tableid = id;\n                that.$axios({\n                  method: 'post',\n                  url: that.$api.xtglApi.xtglTzggSubmit,\n                  data: that.proclamationForm\n                }).then(function (res) {\n                  if (res.result === 1) {\n                    that.$message({\n                      message: res.msg,\n                      type: 'success'\n                    });\n                  }\n\n                  that.handleClose();\n                  that.proclamationForm = '';\n                }).catch(function (err) {\n                  that.$alert(err, \"系统异常，请联系管理员！\", {});\n                });\n              }\n            }).catch(function (err) {\n              that.$alert(err, \"系统异常，请联系管理员！\", {});\n            });\n          } else {\n            return false;\n          }\n        });\n      } else {\n        //更新提交\n        this.$axios({\n          method: 'post',\n          url: this.$api.xtglApi.xtglTzggUpdate,\n          data: this.proclamationForm\n        }).then(function (res) {\n          if (res.result == 1) {\n            return res.info.uuid;\n          }\n        }).then(function (id) {\n          var fileList = that.$refs.upload.fileList; //有则上传附件\n\n          if (fileList.length > 0) {\n            var MD5Paths = [],\n                fileNames = [];\n            fileList.forEach(function (item) {\n              MD5Paths.push(item.url);\n              fileNames.push(item.name);\n            });\n            var param = {\n              \"relatedid\": id,\n              \"MD5Path\": MD5Paths.join(','),\n              \"fileName\": fileNames.join(',')\n            };\n            that.$$insertFileInfoBatch(param).then(function (resdata) {\n              that.proclamationForm.tableid = id;\n              that.proclamationForm.uuid = '';\n              that.$axios({\n                method: 'post',\n                url: that.$api.xtglApi.xtglTzggSubmit,\n                data: that.proclamationForm\n              }).then(function (res) {\n                if (res.result === 1) {\n                  that.$message({\n                    message: res.msg,\n                    type: 'success'\n                  });\n                }\n\n                that.handleClose();\n                that.proclamationForm = '';\n              }).catch(function (err) {\n                that.$alert(err, \"系统异常，请联系管理员！\", {});\n              });\n            });\n          } else {\n            //无附件则直接提交\n            that.proclamationForm.tableid = id;\n            that.proclamationForm.uuid = '';\n            that.$axios({\n              method: 'post',\n              url: that.$api.xtglApi.xtglTzggSubmit,\n              data: that.proclamationForm\n            }).then(function (res) {\n              if (res.result === 1) {\n                that.$message({\n                  message: res.msg,\n                  type: 'success'\n                });\n              }\n\n              that.handleClose();\n              that.proclamationForm = '';\n            }).catch(function (err) {\n              that.$alert(err, \"系统异常，请联系管理员！\", {});\n            });\n          }\n        }).catch(function (err) {\n          that.$alert(err, \"系统异常，请联系管理员！\", {});\n        });\n      }\n    },\n\n    /*=================后续优化===============*/\n    //保存\n    saveFunc: function saveFunc(proclamationForm) {\n      var _this2 = this;\n\n      var that = this;\n      var tempId = this.tempData.uuid;\n\n      if (tempId) {\n        this.proclamationForm.uuid = tempId;\n      }\n\n      this.proclamationForm.content = this.getContent;\n\n      if (that.proclamationForm.uuid == null || that.proclamationForm.uuid == '') {\n        that.$refs[proclamationForm].validate(function (valid) {\n          if (valid) {\n            _this2.asyncSaveForm().then(function (resdata) {\n              if (resdata.result === 1) {\n                var fileList = that.$refs.upload.fileList;\n\n                if (fileList.length > 0) {\n                  var saveForm = that.proclamationForm;\n                  saveForm.uuid = resdata.info.uuid;\n\n                  _this2.asyncUploadFile(saveForm).then(function (res) {\n                    that.$message({\n                      message: resdata.msg,\n                      type: 'success'\n                    });\n                    that.tempData.uuid = resdata.info.uuid; //暂存表单不关闭时的uuid\n\n                    that.tempFileList = that.$refs.upload.fileList; //暂存新上传附件\n                  });\n                } else {\n                  that.$message({\n                    message: resdata.msg,\n                    type: 'success'\n                  });\n                }\n              } else {\n                that.$message({\n                  message: resdata.msg,\n                  type: 'error'\n                });\n              }\n            }).catch(function (err) {\n              that.$alert(err, \"系统异常，请联系管理员！\", {});\n            });\n          } else {\n            return false;\n          }\n        });\n      } else {\n        //this.relatedId = that.proclamationForm.uuid\n        this.asyncUpdateForm(that.proclamationForm).then(function (resdata) {\n          if (resdata.result === 1) {\n            var fileList = that.$refs.upload.fileList;\n\n            if (fileList.length > 0) {\n              var saveForm = that.proclamationForm;\n              saveForm.uuid = resdata.info.uuid;\n\n              _this2.asyncUploadFile(saveForm).then(function (res) {\n                that.$message({\n                  message: resdata.msg,\n                  type: 'success'\n                });\n                that.tempData.uuid = resdata.info.uuid; //暂存表单不关闭时的uuid\n\n                that.tempFileList = that.$refs.upload.fileList;\n              });\n            }\n          } else {\n            that.$message({\n              message: resdata.msg,\n              type: 'error'\n            });\n          }\n        }).catch(function (err) {\n          that.$alert(err, \"系统异常，请联系管理员！\", {});\n        });\n      }\n    },\n    //提交\n    releaseFunc: function releaseFunc(proclamationForm) {\n      var _this3 = this;\n\n      var that = this;\n      var tempId = this.tempData.uuid;\n\n      if (tempId) {\n        this.proclamationForm.uuid = tempId;\n      }\n\n      this.proclamationForm.content = this.getContent;\n\n      if (this.proclamationForm.uuid === null || this.proclamationForm.uuid === \"\") {\n        this.$refs[proclamationForm].validate(function (valid) {\n          if (valid) {\n            _this3.asyncSaveForm().then(function (res) {\n              that.relatedId = res.info.uuid;\n              that.proclamationForm.tableid = res.info.uuid;\n              that.proclamationForm.uuid = '';\n\n              if (res.result === 1) {\n                _this3.asyncInsertFile(that.relatedId, that.proclamationForm).then(function (res, submitForm) {\n                  _this3.asyncSubmit(submitForm).then(function (res) {\n                    if (res.result === 1) {\n                      return true;\n                    } else {\n                      that.$message({\n                        message: '操作失败',\n                        type: 'error'\n                      });\n                      return false;\n                    }\n                  });\n                }).catch(function (err) {\n                  that.$alert(err, \"系统异常，请联系管理员！\", {});\n                });\n\n                that.$message({\n                  message: res.msg,\n                  type: 'success'\n                });\n                that.handleClose();\n                that.proclamationForm = '';\n              } else {\n                that.$message({\n                  message: res.msg,\n                  type: 'error'\n                });\n              }\n            }).catch(function (err) {\n              that.$alert(err, \"系统异常，请联系管理员！\", {});\n            });\n          } else {\n            return false;\n          }\n        });\n      } else {\n        this.$refs[proclamationForm].validate(function (valid) {\n          if (valid) {\n            _this3.asyncUpdateForm(that.proclamationForm).then(function (res) {\n              that.relatedId = res.info.uuid;\n              that.proclamationForm.tableid = res.info.uuid;\n              that.proclamationForm.uuid = '';\n\n              if (res.result === 1) {\n                _this3.asyncInsertFile(that.relatedId, that.proclamationForm).then(res, function (submitForm) {\n                  _this3.asyncSubmit(submitForm).then(function (res) {\n                    if (res.result === 1) {\n                      return true;\n                    } else {\n                      that.$message({\n                        message: '操作失败',\n                        type: 'error'\n                      });\n                      return false;\n                    }\n                  });\n                }).catch(function (err) {\n                  that.$alert(err, \"系统异常，请联系管理员！\", {});\n                });\n\n                that.$message({\n                  message: res.msg,\n                  type: 'success'\n                });\n                that.handleClose();\n                that.proclamationForm = '';\n              } else {\n                that.$message({\n                  message: res.msg,\n                  type: 'error'\n                });\n              }\n            }).catch(function (err) {\n              that.$alert(err, \"系统异常，请联系管理员！\", {});\n            });\n          }\n        });\n      }\n    },\n\n    /*异步保存*/\n    asyncSaveForm: function asyncSaveForm() {\n      var that = this;\n      var promise = new Promise(function (resolve, reject) {\n        that.$axios({\n          method: 'post',\n          url: that.$api.xtglApi.xtglTzggSave,\n          data: that.proclamationForm\n        }).then(function (res) {\n          resolve(res);\n        }).catch(function (err) {\n          reject(err);\n        });\n      });\n      return promise;\n    },\n\n    /*异步更新*/\n    asyncUpdateForm: function asyncUpdateForm(proclamationForm) {\n      var that = this;\n      var promise = new Promise(function (resolve, reject) {\n        that.$axios({\n          method: 'post',\n          url: that.$api.xtglApi.xtglTzggUpdate,\n          data: proclamationForm\n        }).then(function (res) {\n          resolve(res);\n        }).catch(function (err) {\n          reject(err);\n        });\n      });\n      return promise;\n    },\n\n    /*关联附件列表*/\n    asyncInsertFile: function asyncInsertFile(uuid, submitForm) {\n      var that = this;\n      var promise = new Promise(function (resolve, reject) {\n        var fileList = that.$refs.upload.fileList;\n\n        if (fileList.length > 0) {\n          var MD5Paths = [],\n              fileNames = [];\n          fileList.forEach(function (item) {\n            MD5Paths.push(item.url);\n            fileNames.push(item.name);\n          });\n          var param = {\n            \"relatedid\": uuid,\n            \"MD5Path\": MD5Paths.join(','),\n            \"fileName\": fileNames.join(',')\n          };\n          that.$axios({\n            method: 'post',\n            url: that.$api.upload.insertFileInfoBatch,\n            data: param\n          }).then(function (res) {\n            resolve(res, submitForm);\n          }).catch(function (err) {\n            reject(err);\n          });\n        } else {\n          alert(\"上传没进！\");\n        }\n      });\n      return promise;\n    },\n    //上传附件\n    asyncUploadFile: function asyncUploadFile(saveForm) {\n      var that = this;\n      var promise = new Promise(function (resolve, reject) {\n        var param = {}; //上传参数\n\n        var MD5Paths = [],\n            fileNames = []; //附件参数\n\n        var oldFileList = that.tempFileList; //本条数据已有附件\n\n        var newFileList = that.$refs.upload.fileList; //更新时上传新附件\n        //只上传新文件\n\n        if (oldFileList && newFileList.length > 0) {\n          var isNewFile = true;\n          newFileList.forEach(function (newFile) {\n            for (var i = 0; i < oldFileList.length; i++) {\n              var oldFile = oldFileList[i];\n\n              if (newFile.url !== oldFile.url && newFile.name !== newFile.name) {\n                isNewFile = false;\n                break;\n              }\n            }\n\n            if (isNewFile) {\n              // 不要重复添加\n              if (MD5Paths.indexOf(newFile.url) == -1) {\n                MD5Paths.push(newFile.url);\n                fileNames.push(newFile.name);\n              }\n            }\n\n            param = {\n              \"relatedid\": saveForm.uuid,\n              \"MD5Path\": MD5Paths.join(','),\n              \"fileName\": fileNames.join(',')\n            };\n            that.$refs.upload.fileList.push(param);\n          });\n        } else {\n          newFileList.forEach(function (item) {\n            MD5Paths.push(item.url);\n            fileNames.push(item.name);\n          });\n          param = {\n            \"relatedid\": saveForm.uuid,\n            \"MD5Path\": MD5Paths.join(','),\n            \"fileName\": fileNames.join(',')\n          };\n          that.$refs.upload.fileList.push(param);\n        }\n\n        that.$axios({\n          method: 'post',\n          url: that.$api.upload.insertFileInfoBatch,\n          data: param\n        }).then(function (res) {\n          resolve(res);\n        }).catch(function (err) {\n          reject(err);\n        });\n        return promise;\n      });\n    },\n    // 检测是否有新附件需要上传\n    UploadFileCheck: function UploadFileCheck(res) {\n      var that = this;\n      var param = {};\n      var MD5Paths = [],\n          fileNames = [];\n      var newFileList = that.$refs.upload.fileList;\n\n      if (newFileList.length > 0) {\n        newFileList.forEach(function (outerItem) {\n          var flag = true;\n\n          for (var i = 0; i < that.fileList.length; i++) {\n            var innerItem = that.fileList[i];\n\n            if (outerItem.url == innerItem.url && outerItem.name == innerItem.name) {\n              flag = false;\n              break;\n            }\n          } // 如果是新文件\n\n\n          if (flag) {\n            // 判断是否包含\n            if (MD5Paths.indexOf(outerItem.url) == -1) {\n              MD5Paths.push(outerItem.url);\n              fileNames.push(outerItem.name);\n            }\n          }\n        });\n        param = {\n          \"relatedid\": res.info.uuid,\n          \"MD5Path\": MD5Paths.join(','),\n          \"fileName\": fileNames.join(',')\n        };\n      } else {\n        that.$message({\n          message: '新增成功',\n          type: 'success'\n        });\n      }\n\n      return param;\n    },\n\n    /* asyncInsertFile(uuid,submitForm)\n     {\n         let that = this;\n         const promise = new Promise((resolve, reject) => {\n             let fileList = that.$refs.upload.fileList;\n             if (fileList.length > 0) {\n                 let MD5Paths = [],\n                     fileNames = [];\n                 fileList.forEach((item) => {\n                     MD5Paths.push(item.url);\n                     fileNames.push(item.name);\n                 })\n                 let param = {\n                     \"relatedid\": uuid,\n                     \"MD5Path\": MD5Paths.join(','),\n                     \"fileName\": fileNames.join(',')\n                 }\n                 that.$$insertFileInfoBatch(param).then((res) => {\n                     resolve(res,submitForm)\n                 }).catch((err) => {\n                     reject(err)\n                 })\n             } else {\n                 resolve()\n             }\n         })\n         return promise;\n     },*/\n\n    /*异步提交*/\n    asyncSubmit: function asyncSubmit(submitForm) {\n      var that = this;\n      var promise = new Promise(function (resolve, reject) {\n        that.$axios({\n          method: 'post',\n          url: that.$api.xtglApi.xtglTzggSubmit,\n          data: submitForm\n        }).then(function (res) {\n          resolve(res);\n        }).catch(function (err) {\n          reject(err);\n        });\n      });\n      return promise;\n    }\n  }\n};",{"version":3,"sources":["tzggCreOperation.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div class=\"tzggStyle\">\r\n        <!--富文本全屏-->\r\n        <full-screen-editing key=\"fullEditer\" v-if=\"fullDialogOpen\" :fullDialogControl=\"fullDialogOpen\"\r\n                             :smallEditerContent=\"smallEditerContent\"\r\n                             @fullEditerContent=\"fullEditerContent($event)\"></full-screen-editing>\r\n        <!--弹窗内容-->\r\n        <el-dialog\r\n                :close-on-click-modal=\"false\"\r\n                title=\"新建\"\r\n                :visible.sync=\"dialogVisible\"\r\n                width=\"80%\"\r\n                height=\"900px\"\r\n                :modal=\"true\"\r\n                :lock-scroll=\"true\"\r\n                v-dialogDrag\r\n                @close=\"handleClose\">\r\n            <div class=\"el-dialog-div\">\r\n                <el-form :model=\"proclamationForm\" :rules=\"rules\" ref=\"proclamationForm\" label-width=\"90px\"\r\n                         class=\"demo-ruleForm\">\r\n                    <el-form-item label=\"标题\" prop=\"title\">\r\n                        <el-input v-model=\"proclamationForm.title\"></el-input>\r\n                    </el-form-item>\r\n                    <el-form-item label=\"是否置顶\" prop=\"isTop\">\r\n                        <el-switch v-model=\"proclamationForm.isTop\" active-value=\"1\" inactive-value=\"0\"></el-switch>\r\n                    </el-form-item>\r\n                    <!--富文本编辑-->\r\n                    <el-form-item label=\"内容\" prop=\"content\">\r\n                        <rich\r\n                                :setContent=\"setContent\"\r\n                                :editorOption=\"editorOption\"\r\n                                @onEditorChange=\"onEditorChange($event)\"\r\n                                @onEditorReady=\"onEditorReady($event)\"\r\n                                :uploadUrl=\"uploadUrl\"\r\n                        >\r\n                        </rich>\r\n                        <!--富文本全屏-->\r\n                        <el-form-item style=\"padding-left: 85%;padding-top: 5px\">\r\n                            全屏：\r\n                            <el-button type=\"info\" icon=\"el-icon-full-screen\" circle\r\n                                       @click=\"openFullEditer\"></el-button>\r\n                        </el-form-item>\r\n                    </el-form-item>\r\n                    <!--<el-form-item label=\"附件\" prop=\"fj\">\r\n                        <p key=\"myTip\" v-if=\"showTip\" style=\"font-size: 10px\"><i class=\"el-icon-warning\"></i>请先保存后再上传附件\r\n                        </p>\r\n                        <cy-upload key=\"upload\" v-if=\"allowUpload\" :file-num=\"fileNum\" :auto-up=\"true\"\r\n                                   :relatedId=\"relatedId\">\r\n                        </cy-upload>\r\n                    </el-form-item>-->\r\n                    <el-form-item label=\"附件\" prop=\"cyUpload\">\r\n                        <cyUpload ref=\"upload\" :file-num=\"fileNum\" :auto-up=\"true\" :relatedId=\"relatedId\"></cyUpload>\r\n                    </el-form-item>\r\n                    <el-form-item style=\"padding-left: 35%\">\r\n                        <el-button type=\"primary\" @click=\"saveForm('proclamationForm')\">保存</el-button>\r\n                        <el-button @click=\"releaseForm('proclamationForm')\">提交</el-button>\r\n                    </el-form-item>\r\n                </el-form>\r\n            </div>\r\n        </el-dialog>\r\n    </div>\r\n</template>\r\n<script>\r\n    import rich from '@/components/richTextEditor/myRichTextEditor'\r\n    import fullScreenEditing from \"./fullScreenEditing\";\r\n    import cyUpload from '@/components/upAndDown/cyUpload';\r\n\r\n    export default {\r\n        name: \"tzggCreOperation\",\r\n        components: {\r\n            cyUpload,\r\n            rich,\r\n            fullScreenEditing,\r\n        },\r\n        props: {\r\n            dialogData: {\r\n                type: Object,\r\n            },\r\n            taVisible: {\r\n                type: Boolean,\r\n            },\r\n        },\r\n        data() {\r\n            return {\r\n                //暂存表单数据\r\n                tempData: {\r\n                    uuid: '', //保存完提交时传递全局变量\r\n                    tempFile: [], //暂存附件\r\n                },\r\n                //上传\r\n                showTip: this.dialogData.showTip, //上传提示\r\n                allowUpload: this.dialogData.allowUpload,  //是否上传判断\r\n                fileNum: 100,  //最大上传数\r\n                relatedId: this.dialogData.uuid,  //附件关联ID\r\n                //全屏富文本编辑\r\n                smallEditerContent: {},  //富文本内容（用于回传全屏富文本）\r\n                fullDialogOpen: false,  //全屏富文本弹窗控制\r\n                dialogVisible: this.taVisible, //编辑页弹窗控制\r\n                //编辑页表单数据\r\n                proclamationForm: {\r\n                    uuid: this.dialogData.uuid ? this.dialogData.uuid : \"\",\r\n                    proclamationDm: this.dialogData.fromType,\r\n                    title: this.dialogData.title ? this.dialogData.title : \"\",\r\n                    isTop: this.dialogData.isTop ? this.dialogData.isTop : \"1\",\r\n                    content: this.dialogData.content ? this.dialogData.content : \"\",\r\n                    approvalDm: this.dialogData.spType,\r\n                    tableid: this.dialogData.uuid ? this.dialogData.uuid : \"\",\r\n                },\r\n                setContent: '', //富文本内容获取\r\n                rules: {\r\n                    title: [\r\n                        {required: true, message: '请输入标题!'},\r\n                        {max: 100, message: '请输入不超过100字！'}\r\n                    ],\r\n                    content: [\r\n                        {required: true, message: '请输入内容!'},\r\n                        {max: 10000, message: '请输入不超过10000字！', trigger: 'blur'}\r\n                    ],\r\n                },\r\n                //文本编辑\r\n                uploadUrl: '', //图片上传地址\r\n                editorOption: { // 配置信息\r\n                    placeholder: \"请输入内容...\",\r\n                    modules: {\r\n                        toolbar: [\r\n                            ['bold', 'italic', 'underline', 'strike'],\r\n                            ['blockquote', 'code-block'],\r\n                            [{'header': 1}, {'header': 2}],\r\n                            [{'list': 'ordered'}, {'list': 'bullet'}],\r\n                            [{'script': 'sub'}, {'script': 'super'}],\r\n                            [{'indent': '-1'}, {'indent': '+1'}],\r\n                            [{'direction': 'rtl'}],\r\n                            [{'size': ['small', false, 'large', 'huge']}],\r\n                            [{'header': [1, 2, 3, 4, 5, 6, false]}],\r\n                            [{'font': []}],\r\n                            [{'color': []}, {'background': []}],\r\n                            [{'align': []}],\r\n                            ['clean'],\r\n                            ['link', 'image', 'video'],\r\n                        ]\r\n                        ,\r\n                        imageDrop: true,\r\n                        imageResize: {\r\n                            displayStyles: {\r\n                                backgroundColor: 'black',\r\n                                border: 'none',\r\n                                color: 'white'\r\n                            },\r\n                            modules: ['Resize', 'DisplaySize', 'Toolbar']\r\n                        }\r\n                    }\r\n                },\r\n                currentFileData: {},  //当前文本内容\r\n                fileList: this.defultFileList\r\n            }\r\n        },\r\n        created() {\r\n            //获取全屏富文本信息\r\n            this.setContent = this.proclamationForm.content\r\n            //打开弹窗时获取到已上传附件\r\n            this.fileCheck()\r\n        },\r\n        watch: {},\r\n        methods: {\r\n            //打开弹窗时获取到已上传附件\r\n            fileCheck() {\r\n                const that = this\r\n                if (this.dialogData.uuid !== '' && this.dialogData.uuid) {\r\n                    this.$$request({\r\n                        method: 'post',\r\n                        url: this.$api.upload.queryFileList,\r\n                        data: {\r\n                            relatedid: this.dialogData.uuid\r\n                        }\r\n                    }).then((res) => {\r\n                        if (res.info.length > 0) {\r\n                            res.info.forEach((item) => {\r\n                                that.tempData.tempFile.push(item)\r\n                            })\r\n                        }\r\n                    })\r\n                }\r\n            },\r\n            //打开全屏富文本编辑\r\n            openFullEditer() {\r\n                const that = this\r\n                that.smallEditerContent = this.getContent\r\n                this.fullDialogOpen = true\r\n            },\r\n            //全屏富文本编辑返回数据\r\n            fullEditerContent(fullContent) {\r\n                this.fullDialogOpen = false\r\n                if (fullContent == false) {\r\n                    this.fullDialogOpen = false\r\n                } else {\r\n                    this.setContent = fullContent\r\n                    this.fullDialogOpen = false\r\n                }\r\n            },\r\n            //弹窗关闭\r\n            handleClose() {\r\n                this.tempData = ''\r\n                this.content = ''\r\n                this.dialogVisible = false;\r\n                this.allowUplaod = false;\r\n                this.$emit(\"refreshTable\", true)\r\n            },\r\n            //提交之前进行保存加载tableid\r\n            loadData() {\r\n                this.$emit(\"refreshTable\", false)\r\n            },\r\n            //富文本回调\r\n            onEditorReady(quill) {\r\n            },\r\n            //富文本回传\r\n            onEditorChange({quill, html, text}) {\r\n                this.getContent = html\r\n                this.setContent = html\r\n            },\r\n            //旧保存方法（好使）\r\n            saveForm(proclamationForm) {\r\n                const that = this;\r\n                //弹窗不关闭暂存uuid，用于控制重复提交\r\n                const tempId = this.tempData.uuid\r\n                if (tempId) {\r\n                    this.proclamationForm.uuid = tempId;\r\n                }\r\n                //获取富文本编辑框内容赋给表单\r\n                this.proclamationForm.content = this.getContent\r\n                if (that.proclamationForm.uuid == null || that.proclamationForm.uuid == '') {\r\n                    that.$refs[proclamationForm].validate((valid) => {\r\n                        if (valid) {\r\n                            //保存\r\n                            that.$axios({\r\n                                method: 'post',\r\n                                url: that.$api.xtglApi.xtglTzggSave,\r\n                                data: that.proclamationForm\r\n                            }).then(function (res) {\r\n                                that.relatedId = res.info.uuid;\r\n                                if (res.result === 1) {\r\n                                    that.tempData.uuid = res.info.uuid  //暂存uuid\r\n                                    let fileList = that.$refs.upload.fileList; //判断是否有附件，有则上传\r\n                                    if (fileList.length > 0) {\r\n                                        let MD5Paths = [],\r\n                                            fileNames = [];\r\n                                        fileList.forEach((item) => {\r\n                                            MD5Paths.push(item.url);\r\n                                            fileNames.push(item.name);\r\n                                        })\r\n                                        let param = {\r\n                                            \"relatedid\": res.info.uuid,\r\n                                            \"MD5Path\": MD5Paths.join(','),\r\n                                            \"fileName\": fileNames.join(',')\r\n                                        }\r\n                                        that.fileList = that.$refs.upload.fileList\r\n                                        that.$$insertFileInfoBatch(param).then((resdata) => {\r\n                                            that.$message({\r\n                                                message: '操作成功',\r\n                                                type: 'success'\r\n                                            });\r\n                                            that.tempData.tempFile = that.$refs.upload.fileList;  //暂存新上传附件\r\n                                            //that.dialogFormVisible = false; //保存成功不关闭弹窗\r\n                                        }).catch(function (err) {\r\n                                            that.$message({\r\n                                                message: '关联附件列表失败',\r\n                                                type: 'warning'\r\n                                            });\r\n                                            //that.dialogFormVisible = false; //保存成功不关闭弹窗\r\n                                        })\r\n                                    } else {\r\n                                        that.$message({\r\n                                            message: res.msg,\r\n                                            type: 'success'\r\n                                        });\r\n                                        //that.dialogFormVisible = false; //保存成功不关闭弹窗\r\n                                    }\r\n                                }\r\n                                //保存完成后弹窗不关闭\r\n                                //that.handleClose()\r\n                                //that.proclamationForm = ''\r\n                            })\r\n                        } else {\r\n                            return false;\r\n                        }\r\n                    });\r\n                } else {\r\n                    //更新\r\n                    this.relatedId = that.proclamationForm.uuid\r\n                    that.$axios({\r\n                        method: 'post',\r\n                        url: that.$api.xtglApi.xtglTzggUpdate,\r\n                        data: that.proclamationForm\r\n                    }).then(function (res) {\r\n                        if (res.result === 1) {\r\n                            let fileList = that.$refs.upload.fileList //所有文件列表\r\n                            //如果有文件则进行新旧文件判断\r\n                            if (fileList.length > 0) {\r\n                                let allFile = []  //提取的所有文件信息\r\n                                let uploadFile = [] //过滤完准备上传文件\r\n                                let oldFileList = that.tempData.tempFile //旧文件列表\r\n                                //获取所有文件信息用于比较md5值过滤\r\n                                that.$$request({\r\n                                    method: 'post',\r\n                                    url: that.$api.upload.queryFileList,\r\n                                    data: {\r\n                                        relatedid: res.info.uuid\r\n                                    }\r\n                                }).then((res) => {\r\n                                    allFile = res.info\r\n                                })\r\n                                //过滤旧文件\r\n                                allFile.forEach((item) => {\r\n                                    for (let oldFile of oldFileList) {\r\n                                        if (oldFile.md5path !== item.md5path) {\r\n                                            uploadFile.push(oldFile)\r\n                                        }\r\n                                    }\r\n                                })\r\n                                //如果有新文件则进行上传处理\r\n                                if (uploadFile.length > 0) {\r\n                                    //开始上传\r\n                                    let MD5Paths = [],\r\n                                        fileNames = [];\r\n                                    uploadFile.forEach((item) => {\r\n                                        MD5Paths.push(item.url);\r\n                                        fileNames.push(item.name);\r\n                                    })\r\n                                    let param = {\r\n                                        \"relatedid\": res.info.uuid,\r\n                                        \"MD5Path\": MD5Paths.join(','),\r\n                                        \"fileName\": fileNames.join(',')\r\n                                    }\r\n                                    that.$$insertFileInfoBatch(param).then((resdata) => {\r\n                                        that.$message({\r\n                                            message: '操作成功',\r\n                                            type: 'success'\r\n                                        });\r\n                                        that.tempData.tempFile = that.$refs.upload.fileList;  //暂存新上传文件\r\n                                        //that.dialogFormVisible = false; //弹窗不关闭\r\n                                    }).catch(function (err) {\r\n                                        that.$message({\r\n                                            message: '关联附件列表失败',\r\n                                            type: 'warning'\r\n                                        });\r\n                                        //that.dialogFormVisible = false; //弹窗不关闭\r\n                                    })\r\n                                } else {\r\n                                    that.$message({\r\n                                        message: res.msg,\r\n                                        type: 'success'\r\n                                    });\r\n                                }\r\n                            } else {\r\n                                that.$message({\r\n                                    message: res.msg,\r\n                                    type: 'success'\r\n                                });\r\n                            }\r\n                            that.$message({\r\n                                message: res.msg,\r\n                                type: 'success'\r\n                            });\r\n                        } else {\r\n                            that.$message({\r\n                                message: res.msg,\r\n                                type: 'error'\r\n                            });\r\n                        }\r\n\r\n                    })\r\n                    /*弹窗不关闭*/\r\n                    //that.handleClose()\r\n                    //that.proclamationForm = ''\r\n                    //that.content = ''\r\n                }\r\n            },\r\n            //旧提交\r\n            releaseForm(proclamationForm) {\r\n                const that = this;\r\n                //弹窗不关闭暂存uuid，用于控制重复提交\r\n                const tempId = this.tempData.uuid\r\n                if (tempId) {\r\n                    this.proclamationForm.uuid = tempId;\r\n                }\r\n                this.proclamationForm.content = this.getContent //获取富文本内容\r\n                if (this.proclamationForm.uuid === null || this.proclamationForm.uuid === \"\") {\r\n                    this.$refs[proclamationForm].validate((valid) => {\r\n                        if (valid) {   //判空校验\r\n                            //先保存后提交\r\n                            this.$axios({\r\n                                method: 'post',\r\n                                url: this.$api.xtglApi.xtglTzggSave,\r\n                                data: this.proclamationForm\r\n                            }).then(function (res) {\r\n                                if (res.result === 1) {\r\n                                    return res.info.uuid\r\n                                }\r\n                            }).then((id) => {\r\n                                let fileList = that.$refs.upload.fileList;\r\n                                //有则上传附件\r\n                                if (fileList.length > 0) {\r\n                                    let MD5Paths = [],\r\n                                        fileNames = [];\r\n                                    fileList.forEach((item) => {\r\n                                        MD5Paths.push(item.url);\r\n                                        fileNames.push(item.name);\r\n                                    })\r\n                                    let param = {\r\n                                        \"relatedid\": id,\r\n                                        \"MD5Path\": MD5Paths.join(','),\r\n                                        \"fileName\": fileNames.join(',')\r\n                                    }\r\n                                    that.$$insertFileInfoBatch(param).then((resdata) => {\r\n                                        //附件上传成功则提交（注意参数）\r\n                                        that.proclamationForm.tableid = id;\r\n                                        that.proclamationForm.uuid = '';\r\n                                        that.$axios({\r\n                                            method: 'post',\r\n                                            url: that.$api.xtglApi.xtglTzggSubmit,\r\n                                            data: that.proclamationForm\r\n                                        }).then(function (res) {\r\n                                            if (res.result === 1) {\r\n                                                that.$message({\r\n                                                    message: res.msg,\r\n                                                    type: 'success'\r\n                                                });\r\n                                            }\r\n                                            that.handleClose()\r\n                                            that.proclamationForm = ''\r\n                                        }).catch(function (err) {\r\n                                            that.$alert(err, \"系统异常，请联系管理员！\", {});\r\n                                        })\r\n                                    })\r\n                                } else {\r\n                                    //无附件则直接提交\r\n                                    that.proclamationForm.tableid = id;\r\n                                    that.$axios({\r\n                                        method: 'post',\r\n                                        url: that.$api.xtglApi.xtglTzggSubmit,\r\n                                        data: that.proclamationForm\r\n                                    }).then(function (res) {\r\n                                        if (res.result === 1) {\r\n                                            that.$message({\r\n                                                message: res.msg,\r\n                                                type: 'success'\r\n                                            });\r\n                                        }\r\n                                        that.handleClose()\r\n                                        that.proclamationForm = ''\r\n                                    }).catch(function (err) {\r\n                                        that.$alert(err, \"系统异常，请联系管理员！\", {});\r\n                                    })\r\n                                }\r\n                            }).catch(function (err) {\r\n                                that.$alert(err, \"系统异常，请联系管理员！\", {});\r\n                            })\r\n                        } else {\r\n                            return false;\r\n                        }\r\n                    });\r\n                } else {\r\n                    //更新提交\r\n                    this.$axios({\r\n                        method: 'post',\r\n                        url: this.$api.xtglApi.xtglTzggUpdate,\r\n                        data: this.proclamationForm\r\n                    }).then(function (res) {\r\n                        if (res.result == 1) {\r\n                            return res.info.uuid\r\n                        }\r\n                    }).then((id) => {\r\n                        let fileList = that.$refs.upload.fileList;\r\n                        //有则上传附件\r\n                        if (fileList.length > 0) {\r\n                            let MD5Paths = [],\r\n                                fileNames = [];\r\n                            fileList.forEach((item) => {\r\n                                MD5Paths.push(item.url);\r\n                                fileNames.push(item.name);\r\n                            })\r\n                            let param = {\r\n                                \"relatedid\": id,\r\n                                \"MD5Path\": MD5Paths.join(','),\r\n                                \"fileName\": fileNames.join(',')\r\n                            }\r\n                            that.$$insertFileInfoBatch(param).then((resdata) => {\r\n                                that.proclamationForm.tableid = id;\r\n                                that.proclamationForm.uuid = '';\r\n                                that.$axios({\r\n                                    method: 'post',\r\n                                    url: that.$api.xtglApi.xtglTzggSubmit,\r\n                                    data: that.proclamationForm\r\n                                }).then(function (res) {\r\n                                    if (res.result === 1) {\r\n                                        that.$message({\r\n                                            message: res.msg,\r\n                                            type: 'success'\r\n                                        });\r\n                                    }\r\n                                    that.handleClose()\r\n                                    that.proclamationForm = ''\r\n                                }).catch(function (err) {\r\n                                    that.$alert(err, \"系统异常，请联系管理员！\", {});\r\n                                })\r\n                            })\r\n                        } else {\r\n                            //无附件则直接提交\r\n                            that.proclamationForm.tableid = id;\r\n                            that.proclamationForm.uuid = '';\r\n                            that.$axios({\r\n                                method: 'post',\r\n                                url: that.$api.xtglApi.xtglTzggSubmit,\r\n                                data: that.proclamationForm\r\n                            }).then(function (res) {\r\n                                if (res.result === 1) {\r\n                                    that.$message({\r\n                                        message: res.msg,\r\n                                        type: 'success'\r\n                                    });\r\n                                }\r\n                                that.handleClose()\r\n                                that.proclamationForm = ''\r\n                            }).catch(function (err) {\r\n                                that.$alert(err, \"系统异常，请联系管理员！\", {});\r\n                            })\r\n                        }\r\n                    }).catch(function (err) {\r\n                        that.$alert(err, \"系统异常，请联系管理员！\", {});\r\n                    })\r\n                }\r\n            },\r\n\r\n            /*=================后续优化===============*/\r\n            //保存\r\n            saveFunc(proclamationForm) {\r\n                const that = this;\r\n                const tempId = this.tempData.uuid\r\n                if (tempId) {\r\n                    this.proclamationForm.uuid = tempId;\r\n                }\r\n                this.proclamationForm.content = this.getContent\r\n                if (that.proclamationForm.uuid == null || that.proclamationForm.uuid == '') {\r\n                    that.$refs[proclamationForm].validate((valid) => {\r\n                        if (valid) {\r\n                            this.asyncSaveForm().then(resdata => {\r\n                                if (resdata.result === 1) {\r\n                                    let fileList = that.$refs.upload.fileList;\r\n                                    if (fileList.length > 0) {\r\n                                        const saveForm = that.proclamationForm\r\n                                        saveForm.uuid = resdata.info.uuid;\r\n                                        this.asyncUploadFile(saveForm).then(res => {\r\n                                            that.$message({\r\n                                                message: resdata.msg,\r\n                                                type: 'success'\r\n                                            });\r\n                                            that.tempData.uuid = resdata.info.uuid;//暂存表单不关闭时的uuid\r\n                                            that.tempFileList = that.$refs.upload.fileList;  //暂存新上传附件\r\n                                        })\r\n                                    } else {\r\n                                        that.$message({\r\n                                            message: resdata.msg,\r\n                                            type: 'success'\r\n                                        });\r\n                                    }\r\n                                } else {\r\n                                    that.$message({\r\n                                        message: resdata.msg,\r\n                                        type: 'error'\r\n                                    });\r\n                                }\r\n                            }).catch(function (err) {\r\n                                that.$alert(err, \"系统异常，请联系管理员！\", {});\r\n                            })\r\n                        } else {\r\n                            return false;\r\n                        }\r\n                    })\r\n                } else {\r\n                    //this.relatedId = that.proclamationForm.uuid\r\n                    this.asyncUpdateForm(that.proclamationForm).then(resdata => {\r\n                        if (resdata.result === 1) {\r\n                            let fileList = that.$refs.upload.fileList;\r\n                            if (fileList.length > 0) {\r\n                                const saveForm = that.proclamationForm\r\n                                saveForm.uuid = resdata.info.uuid;\r\n                                this.asyncUploadFile(saveForm).then(res => {\r\n                                    that.$message({\r\n                                        message: resdata.msg,\r\n                                        type: 'success'\r\n                                    });\r\n                                    that.tempData.uuid = resdata.info.uuid;//暂存表单不关闭时的uuid\r\n                                    that.tempFileList = that.$refs.upload.fileList\r\n                                })\r\n                            }\r\n                        } else {\r\n                            that.$message({\r\n                                message: resdata.msg,\r\n                                type: 'error'\r\n                            });\r\n                        }\r\n                    }).catch(function (err) {\r\n                        that.$alert(err, \"系统异常，请联系管理员！\", {});\r\n                    })\r\n                }\r\n            },\r\n            //提交\r\n            releaseFunc(proclamationForm) {\r\n                const that = this;\r\n                const tempId = this.tempData.uuid\r\n                if (tempId) {\r\n                    this.proclamationForm.uuid = tempId;\r\n                }\r\n                this.proclamationForm.content = this.getContent\r\n                if (this.proclamationForm.uuid === null || this.proclamationForm.uuid === \"\") {\r\n                    this.$refs[proclamationForm].validate((valid) => {\r\n                        if (valid) {\r\n                            this.asyncSaveForm().then(res => {\r\n                                that.relatedId = res.info.uuid\r\n                                that.proclamationForm.tableid = res.info.uuid\r\n                                that.proclamationForm.uuid = ''\r\n                                if (res.result === 1) {\r\n                                    this.asyncInsertFile(that.relatedId, that.proclamationForm).then((res, submitForm) => {\r\n                                        this.asyncSubmit(submitForm).then(res => {\r\n                                            if (res.result === 1) {\r\n                                                return true\r\n                                            } else {\r\n                                                that.$message({\r\n                                                    message: '操作失败',\r\n                                                    type: 'error'\r\n                                                });\r\n                                                return false\r\n                                            }\r\n                                        })\r\n                                    }).catch(function (err) {\r\n                                        that.$alert(err, \"系统异常，请联系管理员！\", {});\r\n                                    })\r\n                                    that.$message({\r\n                                        message: res.msg,\r\n                                        type: 'success'\r\n                                    });\r\n                                    that.handleClose()\r\n                                    that.proclamationForm = ''\r\n                                } else {\r\n                                    that.$message({\r\n                                        message: res.msg,\r\n                                        type: 'error'\r\n                                    });\r\n                                }\r\n                            }).catch(function (err) {\r\n                                that.$alert(err, \"系统异常，请联系管理员！\", {});\r\n                            })\r\n                        } else {\r\n                            return false\r\n                        }\r\n                    })\r\n                } else {\r\n                    this.$refs[proclamationForm].validate((valid) => {\r\n                        if (valid) {\r\n                            this.asyncUpdateForm(that.proclamationForm).then(res => {\r\n                                that.relatedId = res.info.uuid;\r\n                                that.proclamationForm.tableid = res.info.uuid\r\n                                that.proclamationForm.uuid = ''\r\n                                if (res.result === 1) {\r\n                                    this.asyncInsertFile(that.relatedId, that.proclamationForm).then(res, submitForm => {\r\n                                        this.asyncSubmit(submitForm).then(res => {\r\n                                            if (res.result === 1) {\r\n                                                return true\r\n                                            } else {\r\n                                                that.$message({\r\n                                                    message: '操作失败',\r\n                                                    type: 'error'\r\n                                                });\r\n                                                return false\r\n                                            }\r\n                                        })\r\n                                    }).catch(function (err) {\r\n                                        that.$alert(err, \"系统异常，请联系管理员！\", {});\r\n                                    })\r\n                                    that.$message({\r\n                                        message: res.msg,\r\n                                        type: 'success'\r\n                                    });\r\n                                    that.handleClose()\r\n                                    that.proclamationForm = ''\r\n                                } else {\r\n                                    that.$message({\r\n                                        message: res.msg,\r\n                                        type: 'error'\r\n                                    });\r\n                                }\r\n                            }).catch(function (err) {\r\n                                that.$alert(err, \"系统异常，请联系管理员！\", {});\r\n                            })\r\n                        }\r\n                    })\r\n                }\r\n            },\r\n            /*异步保存*/\r\n            asyncSaveForm() {\r\n                let that = this;\r\n                const promise = new Promise((resolve, reject) => {\r\n                    that.$axios({\r\n                        method: 'post',\r\n                        url: that.$api.xtglApi.xtglTzggSave,\r\n                        data: that.proclamationForm\r\n                    }).then((res) => {\r\n                        resolve(res)\r\n                    }).catch((err) => {\r\n                        reject(err)\r\n                    })\r\n                })\r\n                return promise;\r\n            },\r\n            /*异步更新*/\r\n            asyncUpdateForm(proclamationForm) {\r\n                let that = this;\r\n                const promise = new Promise((resolve, reject) => {\r\n                    that.$axios({\r\n                        method: 'post',\r\n                        url: that.$api.xtglApi.xtglTzggUpdate,\r\n                        data: proclamationForm\r\n                    }).then((res) => {\r\n                        resolve(res)\r\n                    }).catch((err) => {\r\n                        reject(err)\r\n                    })\r\n                })\r\n                return promise;\r\n            },\r\n            /*关联附件列表*/\r\n            asyncInsertFile(uuid, submitForm) {\r\n                let that = this;\r\n                const promise = new Promise((resolve, reject) => {\r\n                    let fileList = that.$refs.upload.fileList;\r\n                    if (fileList.length > 0) {\r\n                        let MD5Paths = [],\r\n                            fileNames = [];\r\n                        fileList.forEach((item) => {\r\n                            MD5Paths.push(item.url);\r\n                            fileNames.push(item.name);\r\n                        })\r\n                        let param = {\r\n                            \"relatedid\": uuid,\r\n                            \"MD5Path\": MD5Paths.join(','),\r\n                            \"fileName\": fileNames.join(',')\r\n                        }\r\n                        that.$axios({\r\n                            method: 'post',\r\n                            url: that.$api.upload.insertFileInfoBatch,\r\n                            data: param\r\n                        }).then((res) => {\r\n                            resolve(res, submitForm)\r\n                        }).catch((err) => {\r\n                            reject(err)\r\n                        })\r\n                    } else {\r\n                        alert(\"上传没进！\")\r\n                    }\r\n                })\r\n                return promise;\r\n            },\r\n            //上传附件\r\n            asyncUploadFile(saveForm) {\r\n                let that = this;\r\n                const promise = new Promise((resolve, reject) => {\r\n                    let param = {} //上传参数\r\n                    let MD5Paths = [], fileNames = []  //附件参数\r\n                    let oldFileList = that.tempFileList  //本条数据已有附件\r\n                    let newFileList = that.$refs.upload.fileList //更新时上传新附件\r\n                    //只上传新文件\r\n                    if ((oldFileList) && newFileList.length > 0) {\r\n                        let isNewFile = true\r\n                        newFileList.forEach((newFile) => {\r\n                            for (let i = 0; i < oldFileList.length; i++) {\r\n                                let oldFile = oldFileList[i]\r\n                                if (newFile.url !== oldFile.url && newFile.name !== newFile.name) {\r\n                                    isNewFile = false\r\n                                    break\r\n                                }\r\n                            }\r\n                            if (isNewFile) {\r\n                                // 不要重复添加\r\n                                if (MD5Paths.indexOf(newFile.url) == -1) {\r\n                                    MD5Paths.push(newFile.url)\r\n                                    fileNames.push(newFile.name)\r\n                                }\r\n                            }\r\n                            param = {\r\n                                \"relatedid\": saveForm.uuid,\r\n                                \"MD5Path\": MD5Paths.join(','),\r\n                                \"fileName\": fileNames.join(',')\r\n                            }\r\n                            that.$refs.upload.fileList.push(param);\r\n                        })\r\n                    } else {\r\n                        newFileList.forEach((item) => {\r\n                            MD5Paths.push(item.url);\r\n                            fileNames.push(item.name);\r\n                        })\r\n                        param = {\r\n                            \"relatedid\": saveForm.uuid,\r\n                            \"MD5Path\": MD5Paths.join(','),\r\n                            \"fileName\": fileNames.join(',')\r\n                        }\r\n                        that.$refs.upload.fileList.push(param);\r\n                    }\r\n                    that.$axios({\r\n                        method: 'post',\r\n                        url: that.$api.upload.insertFileInfoBatch,\r\n                        data: param\r\n                    }).then((res) => {\r\n                        resolve(res)\r\n                    }).catch((err) => {\r\n                        reject(err)\r\n                    })\r\n                    return promise;\r\n                })\r\n            },\r\n            // 检测是否有新附件需要上传\r\n            UploadFileCheck(res) {\r\n                const that = this\r\n                let param = {}\r\n                let MD5Paths = [], fileNames = []\r\n                let newFileList = that.$refs.upload.fileList\r\n                if (newFileList.length > 0) {\r\n                    newFileList.forEach((outerItem) => {\r\n                        let flag = true\r\n                        for (let i = 0; i < that.fileList.length; i++) {\r\n                            let innerItem = that.fileList[i]\r\n                            if (outerItem.url == innerItem.url && outerItem.name == innerItem.name) {\r\n                                flag = false\r\n                                break\r\n                            }\r\n                        }\r\n                        // 如果是新文件\r\n                        if (flag) {\r\n                            // 判断是否包含\r\n                            if (MD5Paths.indexOf(outerItem.url) == -1) {\r\n                                MD5Paths.push(outerItem.url)\r\n                                fileNames.push(outerItem.name)\r\n                            }\r\n                        }\r\n                    })\r\n                    param = {\r\n                        \"relatedid\": res.info.uuid,\r\n                        \"MD5Path\": MD5Paths.join(','),\r\n                        \"fileName\": fileNames.join(',')\r\n                    }\r\n                } else {\r\n                    that.$message({\r\n                        message: '新增成功',\r\n                        type: 'success'\r\n                    })\r\n                }\r\n                return param\r\n            },\r\n            /* asyncInsertFile(uuid,submitForm)\r\n             {\r\n                 let that = this;\r\n                 const promise = new Promise((resolve, reject) => {\r\n                     let fileList = that.$refs.upload.fileList;\r\n                     if (fileList.length > 0) {\r\n                         let MD5Paths = [],\r\n                             fileNames = [];\r\n                         fileList.forEach((item) => {\r\n                             MD5Paths.push(item.url);\r\n                             fileNames.push(item.name);\r\n                         })\r\n                         let param = {\r\n                             \"relatedid\": uuid,\r\n                             \"MD5Path\": MD5Paths.join(','),\r\n                             \"fileName\": fileNames.join(',')\r\n                         }\r\n                         that.$$insertFileInfoBatch(param).then((res) => {\r\n                             resolve(res,submitForm)\r\n                         }).catch((err) => {\r\n                             reject(err)\r\n                         })\r\n                     } else {\r\n                         resolve()\r\n                     }\r\n                 })\r\n                 return promise;\r\n             },*/\r\n            /*异步提交*/\r\n            asyncSubmit(submitForm) {\r\n                let that = this;\r\n                const promise = new Promise((resolve, reject) => {\r\n                    that.$axios({\r\n                        method: 'post',\r\n                        url: that.$api.xtglApi.xtglTzggSubmit,\r\n                        data: submitForm\r\n                    }).then((res) => {\r\n                        resolve(res)\r\n                    }).catch((err) => {\r\n                        reject(err)\r\n                    })\r\n                })\r\n                return promise;\r\n            },\r\n            /*=================后续优化===============*/\r\n\r\n        },\r\n    }\r\n</script>\r\n<style scoped>\r\n    #formPage {\r\n        margin: 10px auto;\r\n        width: 80%;\r\n        padding: 0px 22px;\r\n        box-sizing: border-box;\r\n        background-color: #fff\r\n    }\r\n\r\n</style>\r\n<style lang=\"less\">\r\n    .el-select__caret el-input__icon el-icon-arrow-up {\r\n        width: 5px\r\n    }\r\n</style>\r\n<style scoped lang=\"less\">\r\n    /*调*/\r\n    .tzggStyle /deep/ .ql-bubble .ql-picker {\r\n        height: 40px\r\n    }\r\n\r\n    #formPage {\r\n        margin: 10px auto;\r\n        width: 80%;\r\n        padding: 0px 22px;\r\n        box-sizing: border-box;\r\n        background-color: #fff\r\n    }\r\n\r\n    .tzggStyle /deep/ .el-select__caret el-input__icon el-icon-arrow-up {\r\n        width: 5px\r\n    }\r\n\r\n    .tzggStyle /deep/ .el-dialog {\r\n        display: flex;\r\n        flex-direction: column;\r\n        margin: 0 !important;\r\n        position: absolute;\r\n        top: 50%;\r\n        left: 50%;\r\n        transform: translate(-50%, -50%);\r\n        /*height:600px;*/\r\n        max-height: calc(100% - 30px);\r\n        max-width: calc(100% - 30px);\r\n    }\r\n\r\n    .tzggStyle /deep/ .el-dialog .el-dialog__body {\r\n        flex: 1;\r\n        overflow: auto;\r\n    }\r\n\r\n    .tzggStyle /deep/ .ql-container.ql-snow {\r\n        min-height: 200px;\r\n    }\r\n\r\n    .el-dialog-div {\r\n        overflow: auto;\r\n    }\r\n\r\n    .tzggStyle /deep/ .el-dialog__body::-webkit-scrollbar {\r\n        width: 2px;\r\n        height: 100%;\r\n    }\r\n\r\n    .myupload .el-dialog__body {\r\n        padding: 10px 20px;\r\n        font-size: 16px;\r\n    }\r\n\r\n    .myupload .el-dialog__body-myi {\r\n        color: #EED46F;\r\n        margin-right: 20px;\r\n    }\r\n\r\n    .mytip {\r\n        font-size: 12px;\r\n        color: #909399;\r\n        margin: 3px;\r\n    }\r\n\r\n    .tzggStyle /deep/ .editor {\r\n        line-height: normal !important;\r\n        height: 500px;\r\n    }\r\n\r\n    .ql-snow .ql-tooltip[data-mode=link]::before {\r\n        content: \"请输入链接地址:\";\r\n    }\r\n\r\n    .ql-snow .ql-tooltip.ql-editing a.ql-action::after {\r\n        border-right: 0px;\r\n        content: '保存';\r\n        padding-right: 0px;\r\n    }\r\n\r\n    .ql-snow .ql-tooltip[data-mode=video]::before {\r\n        content: \"请输入视频地址:\";\r\n    }\r\n\r\n    .ql-snow .ql-picker.ql-size .ql-picker-label::before,\r\n    .ql-snow .ql-picker.ql-size .ql-picker-item::before {\r\n        content: '14px';\r\n    }\r\n\r\n    .ql-snow .ql-picker.ql-size .ql-picker-label[data-value=small]::before,\r\n    .ql-snow .ql-picker.ql-size .ql-picker-item[data-value=small]::before {\r\n        content: '10px';\r\n    }\r\n\r\n    .ql-snow .ql-picker.ql-size .ql-picker-label[data-value=large]::before,\r\n    .ql-snow .ql-picker.ql-size .ql-picker-item[data-value=large]::before {\r\n        content: '18px';\r\n    }\r\n\r\n    .ql-snow .ql-picker.ql-size .ql-picker-label[data-value=huge]::before,\r\n    .ql-snow .ql-picker.ql-size .ql-picker-item[data-value=huge]::before {\r\n        content: '32px';\r\n    }\r\n\r\n    .ql-snow .ql-picker.ql-size .ql-picker-label::before, .ql-snow .ql-picker.ql-size .ql-picker-item::before {\r\n        content: '文本';\r\n    }\r\n\r\n    .ql-snow .ql-picker.ql-header .ql-picker-label[data-value=\"1\"]::before,\r\n    .ql-snow .ql-picker.ql-header .ql-picker-item[data-value=\"1\"]::before {\r\n        content: '标题1';\r\n    }\r\n\r\n    .ql-snow .ql-picker.ql-header .ql-picker-label[data-value=\"2\"]::before,\r\n    .ql-snow .ql-picker.ql-header .ql-picker-item[data-value=\"2\"]::before {\r\n        content: '标题2';\r\n    }\r\n\r\n    .ql-snow .ql-picker.ql-header .ql-picker-label[data-value=\"3\"]::before,\r\n    .ql-snow .ql-picker.ql-header .ql-picker-item[data-value=\"3\"]::before {\r\n        content: '标题3';\r\n    }\r\n\r\n    .ql-snow .ql-picker.ql-header .ql-picker-label[data-value=\"4\"]::before,\r\n    .ql-snow .ql-picker.ql-header .ql-picker-item[data-value=\"4\"]::before {\r\n        content: '标题4';\r\n    }\r\n</style>\r\n"],"sourceRoot":"src/views/xtgl/myToolbar"}]}