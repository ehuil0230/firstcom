{"remainingRequest":"D:\\vueWorkspace\\cyfz\\node_modules\\babel-loader\\lib\\index.js!D:\\vueWorkspace\\cyfz\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\vueWorkspace\\cyfz\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\vueWorkspace\\cyfz\\src\\components\\richTextEditor\\myRichTextEditor.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\vueWorkspace\\cyfz\\src\\components\\richTextEditor\\myRichTextEditor.vue","mtime":1571206624389},{"path":"D:\\vueWorkspace\\cyfz\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\vueWorkspace\\cyfz\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\vueWorkspace\\cyfz\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\vueWorkspace\\cyfz\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"D:\\\\vueWorkspace\\\\cyfz\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.regexp.constructor\";\nimport \"core-js/modules/es6.regexp.replace\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport BMF from \"browser-md5-file\";\nimport axios from 'axios';\nimport 'quill/dist/quill.core.css';\nimport 'quill/dist/quill.snow.css';\nimport 'quill/dist/quill.bubble.css';\nimport VueQuillEditor, { Quill } from 'vue-quill-editor';\nimport { ImageDrop } from 'quill-image-drop-module'; // 图片可拖拽上传。\n\nimport ImageResize from 'quill-image-resize-module'; // 调整图片大小。\n\nimport { addQuillTitle } from '@/lib/quill-title.js';\nQuill.register('modules/imageDrop', ImageDrop);\nQuill.register('modules/imageResize', ImageResize);\nvar bmf = new BMF();\nexport default {\n  name: \"richTextEditor\",\n  props: {\n    setContent: {\n      String: String\n    },\n    editorOption: {\n      default: {\n        modules: {\n          placeholder: \"请输入...\",\n          toolbar: [['bold', 'italic', 'underline', 'strike'], // 加粗 斜体 下划线 删除线\n          ['blockquote', 'code-block'], // 引用  代码块\n          [{\n            'header': 1\n          }, {\n            'header': 2\n          }], // 1、2 级标题\n          [{\n            'list': 'ordered'\n          }, {\n            'list': 'bullet'\n          }], // 有序、无序列表\n          [{\n            'script': 'sub'\n          }, {\n            'script': 'super'\n          }], // 上标/下标\n          [{\n            'indent': '-1'\n          }, {\n            'indent': '+1'\n          }], // 缩进\n          [{\n            'direction': 'rtl'\n          }], // 文本方向\n          [{\n            'size': ['small', false, 'large', 'huge']\n          }], // 字体大小\n          [{\n            'header': [1, 2, 3, 4, 5, 6, false]\n          }], // 标题\n          [{\n            'font': []\n          }], // 字体种类\n          [{\n            'color': []\n          }, {\n            'background': []\n          }], // 字体颜色、字体背景颜色\n          [{\n            'align': []\n          }], ['clean'], // 字体种类\n          ['link', 'image', 'video'] // 链接、图片、视频\n          ],\n          imageDrop: true,\n          imageResize: {\n            displayStyles: {\n              backgroundColor: 'black',\n              border: 'none',\n              color: 'white'\n            },\n            modules: ['Resize', 'DisplaySize', 'Toolbar']\n          }\n        }\n      },\n      type: Object\n    },\n    uploadUrl: {\n      default: '',\n      type: String\n    }\n  },\n  data: function data() {\n    return {\n      content: '',\n      uniqueId: 'editUpload',\n      upLoadParams: {\n        type: Object,\n        default: {\n          //上传需要的其他参数\n          userId: \"222222\",\n          moduleName: \"CheckForFrontEnd\"\n        }\n      },\n      md5CheckParams: {\n        type: Object,\n        default: {\n          //md5校验需要的参数\n          userId: \"222222\",\n          moduleName: \"CheckForFrontEnd\"\n        }\n      }\n    };\n  },\n  watch: {\n    setContent: function setContent(val) {\n      this.content = val;\n      var startIndex = this.content.indexOf('access_token=');\n\n      if (startIndex != -1) {\n        var endIndex = this.content.indexOf('\">');\n        var token = this.content.substr(startIndex + 13, endIndex - startIndex - 13);\n        this.content = this.content.replace(new RegExp(token, 'g'), localStorage.getItem(\"access_token\"));\n      }\n    }\n  },\n  mounted: function mounted() {\n    this.content = this.setContent;\n    var startIndex = this.content.indexOf('access_token=');\n\n    if (startIndex != -1) {\n      var endIndex = this.content.indexOf('\">');\n      var token = this.content.substr(startIndex + 13, endIndex - startIndex - 13);\n      this.content = this.content.replace(new RegExp(token, 'g'), localStorage.getItem(\"access_token\"));\n    }\n\n    var _this = this;\n\n    var imgHandler =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(image) {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.addImgRange = _this.$refs.myQuillEditor.quill.getSelection();\n\n                if (image) {\n                  document.getElementById(_this.uniqueId).click(); //隐藏的file文本ID\n                }\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function imgHandler(_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    this.$refs.myQuillEditor.quill.getModule(\"toolbar\").addHandler(\"image\", imgHandler);\n    addQuillTitle();\n  },\n  methods: {\n    // @blur=\"onEditorBlur($event)\"\n    onEditorBlur: function onEditorBlur(quill) {\n      console.log('editor blur!', quill);\n    },\n    onEditorFocus: function onEditorFocus(quill) {\n      this.$emit(\"onEditorFocus\", quill);\n    },\n    onEditorReady: function onEditorReady(quill) {\n      this.$emit(\"onEditorReady\", quill);\n    },\n    onEditorChange: function onEditorChange(_ref2) {\n      var quill = _ref2.quill,\n          html = _ref2.html,\n          text = _ref2.text;\n      this.$emit(\"onEditorChange\", {\n        quill: quill,\n        html: html,\n        text: text\n      });\n    },\n    uploadImg: function uploadImg() {\n      var _this = this;\n\n      var fileInput = document.getElementById(this.uniqueId); //隐藏的file文本ID\n\n      if (fileInput.files != null && fileInput.files[0] != null) {\n        var file = fileInput.files[0];\n        bmf.md5(file, function (err, md5) {\n          if (err) {\n            _this.$message.warning(\"图片增加失败\");\n          } else if (md5) {\n            var defaultParam = {\n              file: file,\n              md5: md5\n            };\n\n            _this.$$md5CheckByFile(defaultParam).then(function (checkRes) {\n              if (checkRes && checkRes.message === \"正常上传\") {\n                _this.$$uploadFile(defaultParam).then(function (response) {\n                  var url = _this.$api.upload.reqUrl + _this.$api.upload.download + \"?md5Path=\" + response.url;\n                  _this.addImgRange = _this.$refs.myQuillEditor.quill.getSelection();\n                  url = url.indexOf('http') != -1 ? url : 'http:' + url;\n\n                  _this.$refs.myQuillEditor.quill.insertEmbed(_this.addImgRange != null ? _this.addImgRange.index : 0, 'image', url, Quill.sources.USER);\n                }).catch(function (err) {\n                  _this.$message.warning(\"图片增加失败\");\n                });\n              } else {\n                var url = _this.$api.upload.reqUrl + _this.$api.upload.download + \"?md5Path=\" + checkRes.url; //let url = \"http://10.2.57.123:9110/file/downloadByMd5Path?md5Path=076e3caed758a1c18c91a0e9cae3368f@879394&access_token=\"+localStorage.getItem(\"access_token\")\n\n                _this.addImgRange = _this.$refs.myQuillEditor.quill.getSelection();\n                url = url.indexOf('http') != -1 ? url : 'http:' + url;\n\n                _this.$refs.myQuillEditor.quill.insertEmbed(_this.addImgRange != null ? _this.addImgRange.index : 0, 'image', url, Quill.sources.USER);\n              }\n            }).catch(function (error) {\n              _this.$message.warning(\"图片增加失败\");\n            });\n            /*this.$axios({\n                method: \"post\",\n                //url: '/fastdfs-center/file/md5CheckForFrontEnd',\n                url: _this.$api.upload.md5CheckForFrontEnd,\n                data: {\n                    fileSrcName: file.name,\n                    md5: md5,\n                    fileSize: file.size,\n                    userId: \"222222\",\n                    moduleName: \"CheckForFrontEnd\"\n                }\n            }).then(function(response) {\n                return response\n            }).then(data => {\n                if (data.msg === \"正常上传\") {\n                    //校验通过，附件上传\n                    let formData = new FormData();\n                    if (_this.upLoadParams.userId) {\n                        formData.append(\"userId\", this.upLoadParams.userId);\n                    }\n                    formData.append(\"md5\", md5);\n                    if (_this.upLoadParams.moduleName) {\n                        formData.append(\"moduleName\", this.upLoadParams.moduleName);\n                    }\n                    formData.append(\"file\", file);\n                    // console.log(formData.get('md5'))\n                    let config = {\n                        headers: {\n                            \"Content-type\": \"multipart/form-data\"\n                        },\n                        onUploadProgress: progressEvent => {\n                            let percent =((progressEvent.loaded / progressEvent.total) * 100) | 0;\n                             console.info(percent)\n                        }\n                    };\n                    //\"/fastdfs-center/file/uploadDfs\"\n                    axios.post(_this.$api.upload.uploadDfs, formData, config).then(function(response) {\n                        let url = _this.$api.upload.reqUrl+ _this.$api.upload.downloadByMd5Path+\"?md5Path=\"+response.info.md5Path+ \"&access_token=\"+localStorage.getItem(\"access_token\")\n                        _this.addImgRange = _this.$refs.myQuillEditor.quill.getSelection()\n                        url = url.indexOf('http') != -1 ? url : 'http:' + url\n                        _this.$refs.myQuillEditor.quill.insertEmbed(_this.addImgRange != null?_this.addImgRange.index:0, 'image', url, Quill.sources.USER)\n                    }).catch(function(error) {\n                        _this.$message.warning(\"图片增加失败\")\n                    })\n                }if (data.msg === \"已上传\"){\n                    let url = _this.$api.upload.reqUrl+ _this.$api.upload.downloadByMd5Path+\"?md5Path=\"+data.info.md5Path+ \"&access_token=\"+localStorage.getItem(\"access_token\")\n                    //let url = \"http://10.2.57.123:9110/file/downloadByMd5Path?md5Path=076e3caed758a1c18c91a0e9cae3368f@879394&access_token=\"+localStorage.getItem(\"access_token\")\n                    _this.addImgRange = _this.$refs.myQuillEditor.quill.getSelection()\n                    url = url.indexOf('http') != -1 ? url : 'http:' + url\n                    _this.$refs.myQuillEditor.quill.insertEmbed(_this.addImgRange != null?_this.addImgRange.index:0, 'image', url, Quill.sources.USER)\n                }\n            }).catch(function(error) {\n                _this.$message.warning(\"图片增加失败\")\n            })*/\n\n          }\n        });\n      }\n\n      fileInput.value = \"\";\n    }\n  }\n};",{"version":3,"sources":["myRichTextEditor.vue"],"names":[],"mappings":"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","sourcesContent":["/**\r\n*  富文本编辑器\r\n*  @params\r\n***\r\n*  需要安装依赖 \"vue-quill-editor\": \"^3.0.6\"   \"quill-image-drop-module\": \"^1.0.3\" \"quill-image-resize-module\": \"^3.0.0\"\r\n*  :setContent 初始化数据，用于数据回显\r\n*  @onEditorChange 内容改变事件,参数{ quill, html, text }\r\n*  @onEditorReady 加载完成事件，参数quill\r\n*  @onEditorFocus 获得焦点事件，参数quill\r\n*  注意富文本内容回显的时候，父级加ql-editor样式，例如：<!-- <div class=\"ql-editor\">-->\r\n**/\r\n<template>\r\n    <div>\r\n        <quill-editor v-model=\"content\"\r\n                      ref=\"myQuillEditor\"\r\n                      :options=\"editorOption\"\r\n                      @focus=\"onEditorFocus($event)\"\r\n                      @change=\"onEditorChange($event)\"\r\n                      @ready=\"onEditorReady($event)\">\r\n        </quill-editor>\r\n        <input style=\"display: none\" :id=\"uniqueId\" type=\"file\" name=\"avator\" multiple accept=\"image/jpg,image/jpeg,image/png,image/gif\" @change=\"uploadImg('uploadFormMulti')\"><!--style=\"display: none\"-->\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import BMF from \"browser-md5-file\";\r\n    import axios from 'axios'\r\n    import 'quill/dist/quill.core.css'\r\n    import 'quill/dist/quill.snow.css'\r\n    import 'quill/dist/quill.bubble.css'\r\n    import VueQuillEditor, { Quill } from 'vue-quill-editor'\r\n    import { ImageDrop } from 'quill-image-drop-module'// 图片可拖拽上传。\r\n    import ImageResize from 'quill-image-resize-module'// 调整图片大小。\r\n    import { addQuillTitle } from '@/lib/quill-title.js'\r\n    Quill.register('modules/imageDrop', ImageDrop)\r\n    Quill.register('modules/imageResize', ImageResize)\r\n    const bmf = new BMF();\r\n    export default {\r\n        name: \"richTextEditor\",\r\n        props: {\r\n            setContent:{String},\r\n            editorOption: {\r\n                default: {\r\n                    modules: {\r\n                        placeholder: \"请输入...\",\r\n                        toolbar: [\r\n                            ['bold', 'italic', 'underline', 'strike'], // 加粗 斜体 下划线 删除线\r\n                            ['blockquote', 'code-block'], // 引用  代码块\r\n                            [{ 'header': 1 }, { 'header': 2 }], // 1、2 级标题\r\n                            [{ 'list': 'ordered' }, { 'list': 'bullet' }], // 有序、无序列表\r\n                            [{ 'script': 'sub' }, { 'script': 'super' }], // 上标/下标\r\n                            [{ 'indent': '-1' }, { 'indent': '+1' }], // 缩进\r\n                            [{ 'direction': 'rtl' }], // 文本方向\r\n                            [{ 'size': ['small', false, 'large', 'huge'] }], // 字体大小\r\n                            [{ 'header': [1, 2, 3, 4, 5, 6, false] }], // 标题\r\n                            [{ 'font': [] }], // 字体种类\r\n                            [{ 'color': [] }, { 'background': [] }], // 字体颜色、字体背景颜色\r\n                            [{ 'align': [] }],\r\n                            ['clean'], // 字体种类\r\n                            ['link', 'image', 'video'] // 链接、图片、视频\r\n                        ],\r\n                        imageDrop: true,\r\n                        imageResize: {\r\n                            displayStyles: {\r\n                                backgroundColor: 'black',\r\n                                border: 'none',\r\n                                color: 'white'\r\n                            },\r\n                            modules: [ 'Resize', 'DisplaySize', 'Toolbar' ]\r\n                        }\r\n                    }\r\n                },\r\n                type: Object\r\n            },\r\n            uploadUrl:{\r\n                default:'',\r\n                type:String\r\n            }\r\n        },\r\n        data () {\r\n            return {\r\n                content: '',\r\n                uniqueId:'editUpload',\r\n                upLoadParams: {\r\n                    type: Object,\r\n                    default: {\r\n                        //上传需要的其他参数\r\n                        userId: \"222222\",\r\n                        moduleName: \"CheckForFrontEnd\"\r\n                    }\r\n                },\r\n                md5CheckParams: {\r\n                    type: Object,\r\n                    default: {\r\n                        //md5校验需要的参数\r\n                        userId: \"222222\",\r\n                        moduleName: \"CheckForFrontEnd\"\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        watch:{\r\n            setContent(val){\r\n                this.content = val;\r\n                let startIndex = this.content.indexOf('access_token=')\r\n                if(startIndex != -1){\r\n                    let endIndex = this.content.indexOf('\">')\r\n                    let token = this.content.substr(startIndex+13,endIndex-startIndex-13)\r\n                    this.content = this.content.replace(new RegExp(token,'g'),localStorage.getItem(\"access_token\"));\r\n                }\r\n            }\r\n        },\r\n        mounted(){\r\n            this.content=this.setContent\r\n            let startIndex = this.content.indexOf('access_token=')\r\n            if(startIndex != -1){\r\n                let endIndex = this.content.indexOf('\">')\r\n                let token = this.content.substr(startIndex+13,endIndex-startIndex-13)\r\n                this.content = this.content.replace(new RegExp(token,'g'),localStorage.getItem(\"access_token\"));\r\n            }\r\n            var _this =this\r\n            var imgHandler = async function(image) {\r\n                this.addImgRange = _this.$refs.myQuillEditor.quill.getSelection()\r\n                if (image) {\r\n                    document.getElementById(_this.uniqueId).click() //隐藏的file文本ID\r\n                }\r\n            }\r\n            this.$refs.myQuillEditor.quill.getModule(\"toolbar\").addHandler(\"image\",imgHandler)\r\n            addQuillTitle();\r\n        },\r\n        methods: {\r\n            // @blur=\"onEditorBlur($event)\"\r\n            onEditorBlur(quill) {\r\n                console.log('editor blur!', quill)\r\n            },\r\n            onEditorFocus(quill) {\r\n                this.$emit(\"onEditorFocus\",quill)\r\n            },\r\n            onEditorReady(quill) {\r\n                this.$emit(\"onEditorReady\",quill)\r\n            },\r\n            onEditorChange({ quill, html, text }) {\r\n                this.$emit(\"onEditorChange\",{ quill, html, text })\r\n            },\r\n            uploadImg:function(){\r\n                let _this = this\r\n                let fileInput = document.getElementById(this.uniqueId) //隐藏的file文本ID\r\n                if (fileInput.files != null && fileInput.files[0] != null) {\r\n                    let file = fileInput.files[0]\r\n                    bmf.md5(file, (err, md5) => {\r\n                        if (err) {\r\n                            _this.$message.warning(\"图片增加失败\")\r\n                        } else if (md5) {\r\n                            let defaultParam = {\r\n                                file: file,\r\n                                md5: md5\r\n                            };\r\n                            _this.$$md5CheckByFile(defaultParam).then((checkRes) => {\r\n                                if (checkRes && checkRes.message === \"正常上传\") {\r\n                                    _this.$$uploadFile(defaultParam).then(function (response) {\r\n                                        let url = _this.$api.upload.reqUrl+ _this.$api.upload.download+\"?md5Path=\"+response.url\r\n                                        _this.addImgRange = _this.$refs.myQuillEditor.quill.getSelection()\r\n                                        url = url.indexOf('http') != -1 ? url : 'http:' + url\r\n                                        _this.$refs.myQuillEditor.quill.insertEmbed(_this.addImgRange != null?_this.addImgRange.index:0, 'image', url, Quill.sources.USER)\r\n                                    }).catch(function (err) {\r\n                                        _this.$message.warning(\"图片增加失败\")\r\n                                    })\r\n                                } else {\r\n                                    let url = _this.$api.upload.reqUrl+ _this.$api.upload.download+\"?md5Path=\"+checkRes.url\r\n                                    //let url = \"http://10.2.57.123:9110/file/downloadByMd5Path?md5Path=076e3caed758a1c18c91a0e9cae3368f@879394&access_token=\"+localStorage.getItem(\"access_token\")\r\n                                    _this.addImgRange = _this.$refs.myQuillEditor.quill.getSelection()\r\n                                    url = url.indexOf('http') != -1 ? url : 'http:' + url\r\n                                    _this.$refs.myQuillEditor.quill.insertEmbed(_this.addImgRange != null?_this.addImgRange.index:0, 'image', url, Quill.sources.USER)\r\n                                }\r\n                            }).catch(function(error) {\r\n                                _this.$message.warning(\"图片增加失败\")\r\n                            })\r\n\r\n\r\n                            /*this.$axios({\r\n                                method: \"post\",\r\n                                //url: '/fastdfs-center/file/md5CheckForFrontEnd',\r\n                                url: _this.$api.upload.md5CheckForFrontEnd,\r\n                                data: {\r\n                                    fileSrcName: file.name,\r\n                                    md5: md5,\r\n                                    fileSize: file.size,\r\n                                    userId: \"222222\",\r\n                                    moduleName: \"CheckForFrontEnd\"\r\n                                }\r\n                            }).then(function(response) {\r\n                                return response\r\n                            }).then(data => {\r\n                                if (data.msg === \"正常上传\") {\r\n                                    //校验通过，附件上传\r\n                                    let formData = new FormData();\r\n                                    if (_this.upLoadParams.userId) {\r\n                                        formData.append(\"userId\", this.upLoadParams.userId);\r\n                                    }\r\n                                    formData.append(\"md5\", md5);\r\n                                    if (_this.upLoadParams.moduleName) {\r\n                                        formData.append(\"moduleName\", this.upLoadParams.moduleName);\r\n                                    }\r\n                                    formData.append(\"file\", file);\r\n                                    // console.log(formData.get('md5'))\r\n                                    let config = {\r\n                                        headers: {\r\n                                            \"Content-type\": \"multipart/form-data\"\r\n                                        },\r\n                                        onUploadProgress: progressEvent => {\r\n                                            let percent =((progressEvent.loaded / progressEvent.total) * 100) | 0;\r\n\r\n                                            console.info(percent)\r\n                                        }\r\n                                    };\r\n                                    //\"/fastdfs-center/file/uploadDfs\"\r\n                                    axios.post(_this.$api.upload.uploadDfs, formData, config).then(function(response) {\r\n                                        let url = _this.$api.upload.reqUrl+ _this.$api.upload.downloadByMd5Path+\"?md5Path=\"+response.info.md5Path+ \"&access_token=\"+localStorage.getItem(\"access_token\")\r\n                                        _this.addImgRange = _this.$refs.myQuillEditor.quill.getSelection()\r\n                                        url = url.indexOf('http') != -1 ? url : 'http:' + url\r\n                                        _this.$refs.myQuillEditor.quill.insertEmbed(_this.addImgRange != null?_this.addImgRange.index:0, 'image', url, Quill.sources.USER)\r\n                                    }).catch(function(error) {\r\n                                        _this.$message.warning(\"图片增加失败\")\r\n                                    })\r\n                                }if (data.msg === \"已上传\"){\r\n                                    let url = _this.$api.upload.reqUrl+ _this.$api.upload.downloadByMd5Path+\"?md5Path=\"+data.info.md5Path+ \"&access_token=\"+localStorage.getItem(\"access_token\")\r\n                                    //let url = \"http://10.2.57.123:9110/file/downloadByMd5Path?md5Path=076e3caed758a1c18c91a0e9cae3368f@879394&access_token=\"+localStorage.getItem(\"access_token\")\r\n                                    _this.addImgRange = _this.$refs.myQuillEditor.quill.getSelection()\r\n                                    url = url.indexOf('http') != -1 ? url : 'http:' + url\r\n                                    _this.$refs.myQuillEditor.quill.insertEmbed(_this.addImgRange != null?_this.addImgRange.index:0, 'image', url, Quill.sources.USER)\r\n                                }\r\n                            }).catch(function(error) {\r\n                                _this.$message.warning(\"图片增加失败\")\r\n                            })*/\r\n                        }\r\n                    })\r\n                }\r\n                fileInput.value = \"\"\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style>\r\n    .editor {\r\n        line-height: normal !important;\r\n        height: 500px;\r\n    }\r\n    .ql-snow .ql-tooltip[data-mode=link]::before {\r\n        content: \"请输入链接地址:\";\r\n    }\r\n    .ql-snow .ql-tooltip.ql-editing a.ql-action::after {\r\n        border-right: 0px;\r\n        content: '保存';\r\n        padding-right: 0px;\r\n    }\r\n\r\n    .ql-snow .ql-tooltip[data-mode=video]::before {\r\n        content: \"请输入视频地址:\";\r\n    }\r\n\r\n    .ql-snow .ql-picker.ql-size .ql-picker-label::before,\r\n    .ql-snow .ql-picker.ql-size .ql-picker-item::before {\r\n        content: '14px';\r\n    }\r\n    .ql-snow .ql-picker.ql-size .ql-picker-label[data-value=small]::before,\r\n    .ql-snow .ql-picker.ql-size .ql-picker-item[data-value=small]::before {\r\n        content: '10px';\r\n    }\r\n    .ql-snow .ql-picker.ql-size .ql-picker-label[data-value=large]::before,\r\n    .ql-snow .ql-picker.ql-size .ql-picker-item[data-value=large]::before {\r\n        content: '18px';\r\n    }\r\n    .ql-snow .ql-picker.ql-size .ql-picker-label[data-value=huge]::before,\r\n    .ql-snow .ql-picker.ql-size .ql-picker-item[data-value=huge]::before {\r\n        content: '32px';\r\n    }\r\n    .ql-snow .ql-picker.ql-size .ql-picker-label::before, .ql-snow .ql-picker.ql-size .ql-picker-item::before{\r\n        content: '文本';\r\n    }\r\n    .ql-snow .ql-picker.ql-header .ql-picker-label[data-value=\"1\"]::before,\r\n    .ql-snow .ql-picker.ql-header .ql-picker-item[data-value=\"1\"]::before {\r\n        content: '标题1';\r\n    }\r\n    .ql-snow .ql-picker.ql-header .ql-picker-label[data-value=\"2\"]::before,\r\n    .ql-snow .ql-picker.ql-header .ql-picker-item[data-value=\"2\"]::before {\r\n        content: '标题2';\r\n    }\r\n    .ql-snow .ql-picker.ql-header .ql-picker-label[data-value=\"3\"]::before,\r\n    .ql-snow .ql-picker.ql-header .ql-picker-item[data-value=\"3\"]::before {\r\n        content: '标题3';\r\n    }\r\n    .ql-snow .ql-picker.ql-header .ql-picker-label[data-value=\"4\"]::before,\r\n    .ql-snow .ql-picker.ql-header .ql-picker-item[data-value=\"4\"]::before {\r\n        content: '标题4';\r\n    }\r\n    .ql-snow .ql-picker.ql-header .ql-picker-label[data-value=\"5\"]::before,\r\n    .ql-snow .ql-picker.ql-header .ql-picker-item[data-value=\"5\"]::before {\r\n        content: '标题5';\r\n    }\r\n    .ql-snow .ql-picker.ql-header .ql-picker-label[data-value=\"6\"]::before,\r\n    .ql-snow .ql-picker.ql-header .ql-picker-item[data-value=\"6\"]::before {\r\n        content: '标题6';\r\n    }\r\n\r\n    .ql-snow .ql-picker.ql-font .ql-picker-label::before,\r\n    .ql-snow .ql-picker.ql-font .ql-picker-item::before {\r\n        content: '标准字体';\r\n    }\r\n    .ql-snow .ql-picker.ql-font .ql-picker-label[data-value=serif]::before,\r\n    .ql-snow .ql-picker.ql-font .ql-picker-item[data-value=serif]::before {\r\n        content: '衬线字体';\r\n    }\r\n    .ql-snow .ql-picker.ql-font .ql-picker-label[data-value=monospace]::before,\r\n    .ql-snow .ql-picker.ql-font .ql-picker-item[data-value=monospace]::before {\r\n        content: '等宽字体';\r\n    }\r\n</style>\r\n"],"sourceRoot":"src/components/richTextEditor"}]}