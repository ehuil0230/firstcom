{"remainingRequest":"D:\\vueWorkspace\\cyfz\\node_modules\\babel-loader\\lib\\index.js!D:\\vueWorkspace\\cyfz\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\vueWorkspace\\cyfz\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\vueWorkspace\\cyfz\\src\\views\\cyfx\\bzqkfx\\bzqkfx.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\vueWorkspace\\cyfz\\src\\views\\cyfx\\bzqkfx\\bzqkfx.vue","mtime":1570845560753},{"path":"D:\\vueWorkspace\\cyfz\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\vueWorkspace\\cyfz\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\vueWorkspace\\cyfz\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\vueWorkspace\\cyfz\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// 引入echarts\nimport echarts from 'echarts';\nimport Histogram from \"@/components/echarts/Histogram\";\nexport default {\n  name: \"bzqkfx\",\n  components: {\n    Histogram: Histogram\n  },\n  data: function data() {\n    //数据\n    return {\n      yearData: (new Date().getFullYear() - 1).toString(),\n      year: [],\n      //展示标准情况柱形图年份\n      showData: ['标准总量'],\n      histogramlistData: {\n        // 标准情况图接受数据\n        color: ['#6CACAf'],\n        showNumber: true,\n        // rotate: [60],\n        yName: '（数量）',\n        xName: '（地区）',\n        name: '标准数量',\n        data: []\n      },\n      bzqkobj: {\n        name: '标准总量',\n        type: 'bar',\n        data: []\n      }\n    };\n  },\n  mounted: function mounted() {\n    this.getBzqkData();\n    this.getHistogramData();\n  },\n  methods: {\n    getHistogramData: function getHistogramData() {\n      var that = this;\n      this.$$request({\n        url: this.$api.cyfxApi.queryStandardConditionGroupByProByYear,\n        data: {\n          givenYear: this.yearData\n        }\n      }).then(function (res) {\n        if (res.result === 1) {\n          that.histogramlistData.data = [];\n\n          for (var j = 0; j < res.info.data.length; j++) {\n            //4\n            var obj = {\n              name: '',\n              value: ''\n            };\n            obj.name = res.info.data[j].province;\n            obj.value = res.info.data[j].standardNum;\n\n            if (j < 10) {\n              that.histogramlistData.data.push(obj);\n            }\n          }\n        } else {\n          that.$alert(res.msg, \"系统异常，请联系管理员！\", {});\n          return false;\n        }\n      }).catch(function (error) {\n        that.$alert(error, \"系统异常，请联系管理员！\", {});\n      });\n    },\n    // 绘制项目申请图表\n    drawLinexiangmushenbao: function drawLinexiangmushenbao() {\n      // 基于准备好的dom，初始化echarts实例\n      var $id = document.getElementById('bzqk_echarts');\n\n      if (!!$id) {\n        var myChartmain_xiangmushenqing = echarts.init($id);\n        myChartmain_xiangmushenqing.setOption({\n          color: ['#70b8ff'],\n          tooltip: {\n            trigger: 'axis',\n            axisPointer: {\n              type: 'cross',\n              crossStyle: {\n                color: '#999'\n              }\n            }\n          },\n          toolbox: {\n            feature: {\n              magicType: {\n                show: true,\n                type: ['line', 'bar']\n              },\n              saveAsImage: {\n                show: true\n              }\n            }\n          },\n          legend: {\n            data: ['标准数量'] //标准数量接口图例数据\n\n          },\n          xAxis: [{\n            type: 'category',\n            data: this.year,\n            //['2015','2016','2017','2018','2019'],接口x轴数据\n            axisPointer: {\n              type: 'shadow'\n            }\n          }],\n          yAxis: [{\n            type: 'value',\n            name: '（数量）',\n            axisLabel: {\n              formatter: '{value} 个'\n            }\n          }, {\n            type: 'value',\n            name: '（所占比例）',\n            min: 0,\n            max: 100,\n            interval: 10,\n            axisLabel: {\n              formatter: '{value} %'\n            }\n          }],\n          series: this.bzqkobj\n        });\n      }\n    },\n    //获取第一个图数据\n    getBzqkData: function getBzqkData() {\n      var that = this; // 获取上面标准量柱状图数据\n\n      this.$$request({\n        url: this.$api.cyfxApi.queryStandardConditionGroupByYear,\n        data: {}\n      }).then(function (res) {\n        var obj = {\n          name: '标准总量',\n          type: 'bar',\n          data: [],\n          barWidth: 40\n        };\n\n        if (res.result === 1) {\n          for (var i = 0; i < res.info.data.length; i++) {\n            that.year.push(res.info.data[i].year);\n            obj.data.push(res.info.data[i].standardNum);\n          }\n\n          that.bzqkobj = obj;\n        } else {\n          that.$alert(res.msg, \"系统异常，请联系管理员！\", {});\n          return false;\n        }\n      }).then(function () {\n        that.drawLinexiangmushenbao();\n      }).catch(function (error) {\n        that.$alert(error, \"系统异常，请联系管理员！\", {});\n      });\n    }\n  },\n  watch: {\n    yearData: function yearData(val) {\n      this.yearData = val;\n      this.getHistogramData();\n    }\n  }\n};",{"version":3,"sources":["bzqkfx.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div id=\"zscqfx\">\r\n        <div class=\"zscqfx_sm\">\r\n            <div class=\"zdfxzb_title\">\r\n                <span></span>\r\n                <span>标准总量分析</span>\r\n            </div>\r\n            <div class=\"zdfxzb_charts\">\r\n                <div id=\"bzqk_echarts\" style=\"width: 100%;height:320px;\"></div>\r\n            </div>\r\n            <div class=\"zdfxzb_title\" style=\"width: 100%\">\r\n                <span></span>\r\n                <span>标准情况分析</span>\r\n            </div>\r\n            <div style=\"width: 100%;height: 35px;background-color: #fff\">\r\n                <div style=\"width: 150px;float: right;top: 50px\">\r\n                    <el-date-picker style=\"width: 150px\"\r\n                                    v-model=\"yearData\"\r\n                                    format=\"yyyy\"\r\n                                    value-format=\"yyyy\"\r\n                                    type=\"year\"\r\n                                    placeholder=\"选择年份\">\r\n                    </el-date-picker>\r\n                </div>\r\n            </div>\r\n            <div class=\"shenqing\" style=\"width: 100%\">\r\n                <div style=\"width: 100%;height:300px\">\r\n                    <Histogram style=\"width: 100%; height: 100%\" :HistogramData=\"histogramlistData\">\r\n                    </Histogram>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    // 引入echarts\r\n    import echarts from 'echarts'\r\n    import Histogram from \"@/components/echarts/Histogram\";\r\n\r\n    export default {\r\n        name: \"bzqkfx\",\r\n        components: {\r\n            Histogram\r\n        },\r\n\r\n        data() {//数据\r\n            return {\r\n                yearData: (new Date().getFullYear() - 1).toString(),\r\n                year: [],//展示标准情况柱形图年份\r\n                showData: ['标准总量'],\r\n                histogramlistData: {// 标准情况图接受数据\r\n                    color: ['#6CACAf'],\r\n                    showNumber: true,\r\n                    // rotate: [60],\r\n                    yName: '（数量）',\r\n                    xName: '（地区）',\r\n                    name: '标准数量',\r\n                    data: [],\r\n                },\r\n                bzqkobj: {\r\n                    name: '标准总量',\r\n                    type: 'bar',\r\n                    data: []\r\n                }\r\n            }\r\n        },\r\n        mounted() {\r\n            this.getBzqkData();\r\n            this.getHistogramData();\r\n        },\r\n        methods: {\r\n            getHistogramData() {\r\n                let that = this;\r\n                this.$$request({\r\n                    url: this.$api.cyfxApi.queryStandardConditionGroupByProByYear,\r\n                    data: {\r\n                        givenYear: this.yearData\r\n                    }\r\n                }).then(function (res) {\r\n                    if (res.result === 1) {\r\n                        that.histogramlistData.data = [];\r\n                        for (let j = 0; j < res.info.data.length; j++) { //4\r\n                            let obj = {\r\n                                name: '',\r\n                                value: '',\r\n                            }\r\n                            obj.name = res.info.data[j].province;\r\n                            obj.value = res.info.data[j].standardNum;\r\n                            if (j < 10) {\r\n                                that.histogramlistData.data.push(obj);\r\n                            }\r\n                        }\r\n                    } else {\r\n                        that.$alert(res.msg, \"系统异常，请联系管理员！\", {});\r\n                        return false;\r\n                    }\r\n                }).catch(function (error) {\r\n                    that.$alert(error, \"系统异常，请联系管理员！\", {});\r\n                })\r\n            },\r\n            // 绘制项目申请图表\r\n            drawLinexiangmushenbao() {\r\n                // 基于准备好的dom，初始化echarts实例\r\n                let $id = document.getElementById('bzqk_echarts');\r\n                if(!!$id){\r\n                    let myChartmain_xiangmushenqing = echarts.init($id);\r\n                    myChartmain_xiangmushenqing.setOption({\r\n                        color: ['#70b8ff'],\r\n                        tooltip: {\r\n                            trigger: 'axis',\r\n                            axisPointer: {\r\n                                type: 'cross',\r\n                                crossStyle: {\r\n                                    color: '#999'\r\n                                }\r\n                            }\r\n                        },\r\n                        toolbox: {\r\n                            feature: {\r\n                                magicType: {\r\n                                    show: true,\r\n                                    type: ['line', 'bar']\r\n                                },\r\n                                saveAsImage: {\r\n                                    show: true\r\n                                }\r\n                            }\r\n                        },\r\n                        legend: {\r\n                            data: ['标准数量']  //标准数量接口图例数据\r\n                        },\r\n                        xAxis: [{\r\n                            type: 'category',\r\n                            data: this.year, //['2015','2016','2017','2018','2019'],接口x轴数据\r\n                            axisPointer: {\r\n                                type: 'shadow'\r\n                            }\r\n                        }],\r\n                        yAxis: [{\r\n                            type: 'value',\r\n                            name: '（数量）',\r\n                            axisLabel: {\r\n                                formatter: '{value} 个'\r\n                            }\r\n                        },\r\n                            {\r\n                                type: 'value',\r\n                                name: '（所占比例）',\r\n                                min: 0,\r\n                                max: 100,\r\n                                interval: 10,\r\n                                axisLabel: {\r\n                                    formatter: '{value} %'\r\n                                }\r\n                            }],\r\n                        series: this.bzqkobj\r\n                    })\r\n                }\r\n            },\r\n            //获取第一个图数据\r\n            getBzqkData() {\r\n                let that = this;\r\n                // 获取上面标准量柱状图数据\r\n                this.$$request({\r\n                    url: this.$api.cyfxApi.queryStandardConditionGroupByYear,\r\n                    data: {}\r\n                }).then(function (res) {\r\n                    let obj = {\r\n                        name: '标准总量',\r\n                        type: 'bar',\r\n                        data: [],\r\n                        barWidth: 40\r\n                    }\r\n                    if (res.result === 1) {\r\n                        for (let i = 0; i < res.info.data.length; i++) {\r\n                            that.year.push(res.info.data[i].year);\r\n                            obj.data.push(res.info.data[i].standardNum);\r\n                        }\r\n                        that.bzqkobj = obj;\r\n                    } else {\r\n                        that.$alert(res.msg, \"系统异常，请联系管理员！\", {});\r\n                        return false;\r\n                    }\r\n                }).then(function () {\r\n                    that.drawLinexiangmushenbao();\r\n                }).catch(function (error) {\r\n                    that.$alert(error, \"系统异常，请联系管理员！\", {});\r\n                });\r\n            }\r\n        },\r\n\r\n        watch: {\r\n            yearData: function (val) {\r\n                this.yearData = val;\r\n                this.getHistogramData();\r\n            }\r\n        },\r\n    }\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n    #zscqfx {\r\n        width: 100%;\r\n        background-color: @bgGray;\r\n        overflow: hidden;\r\n    }\r\n\r\n    .zscqfx_sm {\r\n        width: 95%;\r\n        margin: 0 auto;\r\n    }\r\n\r\n    .zdfxzb_title {\r\n        width: 100%;\r\n        height: 30px;\r\n        text-align: left;\r\n        line-height: 30px;\r\n        border-bottom: 2px solid black;\r\n    }\r\n\r\n    .zdfxzb_charts {\r\n        width: 100%;\r\n        background-color: @bgWhite;\r\n        margin-bottom: 10px;\r\n        padding-top: 20px;\r\n    }\r\n\r\n    .shenqing {\r\n        width: 100%;\r\n        height: 320px;\r\n        background-color: @bgWhite;\r\n        border-radius: 5px;\r\n    }\r\n\r\n    span {\r\n        font-size: 16px;\r\n        font-weight: bold;\r\n    }\r\n</style>\r\n"],"sourceRoot":"src/views/cyfx/bzqkfx"}]}