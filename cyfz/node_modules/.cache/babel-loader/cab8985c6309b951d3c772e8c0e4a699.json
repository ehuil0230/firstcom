{"remainingRequest":"D:\\vueWorkspace\\cyfz\\node_modules\\babel-loader\\lib\\index.js!D:\\vueWorkspace\\cyfz\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\vueWorkspace\\cyfz\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\vueWorkspace\\cyfz\\src\\views\\hygl\\gzzlgl\\zlDialog.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\vueWorkspace\\cyfz\\src\\views\\hygl\\gzzlgl\\zlDialog.vue","mtime":1571715009206},{"path":"D:\\vueWorkspace\\cyfz\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\vueWorkspace\\cyfz\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\vueWorkspace\\cyfz\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\vueWorkspace\\cyfz\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport cyUpload from \"../../../components/upAndDown/cyUpload\";\nimport OrgTree from \"../../xtgl/myToolbar/OrgTree\";\nexport default {\n  name: \"zlDialog\",\n  components: {\n    cyUpload: cyUpload,\n    OrgTree: OrgTree\n  },\n  props: {\n    form: {\n      type: Object,\n      default: {\n        //站内信代码\n        MailDm: '002',\n        //接收人ID\n        recievers: [],\n        //接收人姓名\n        recieverNames: '',\n        //接收标题\n        title: '',\n        //接收内容\n        content: '',\n        //传入uuid以此区分新建还是修改\n        uuid: '',\n        type: 0\n      }\n    },\n    dialogFormVisible: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data: function data() {\n    return {\n      tempUser: [],\n      show2: false,\n      orgTreeObj: {\n        leftTreeProps: {\n          // 左侧树props\n          label: 'name',\n          children: 'children'\n        },\n        daixuanTreeProps: {\n          // 待选树props\n          label: 'realName'\n        },\n        orgTree: [],\n        daixuanData: [],\n        type: 'zl'\n      },\n      fileNum: 100,\n      reciverIdList: [],\n      reciverList: [],\n      fileList: [],\n      //验证表单\n      rules: {\n        recievers: [{\n          required: true,\n          message: '请选择接收人'\n        }],\n        title: [{\n          required: true,\n          message: '请输入标题'\n        }],\n        content: [{\n          required: true,\n          message: '请输入内容'\n        }]\n      }\n    };\n  },\n  methods: {\n    //树形式展示\n\n    /*checkChange(data, checked) {\n        let checkedObj = {\n            uuid: data.uuid,\n            realName: data.realName\n        };\n        if (checked) {\n            this.reciverList.push(checkedObj);\n        } else {\n            for (let i = 0; i < this.reciverList.length; i++) {\n                if (this.reciverList[i].uuid === checkedObj.uuid) {\n                    this.reciverList.splice(i, 1);\n                    break;\n                }\n            }\n        }\n        if (this.reciverList.length > 0) {\n            this.form.recieverNames = this.reciverList[0].realName\n            this.form.recievers = this.reciverList[0].uuid\n            for (let i = 1; i < this.reciverList.length; i++) {\n                this.form.recieverNames += ',' + this.reciverList[i].realName\n                this.form.recievers += ',' + this.reciverList[i].uuid\n            }\n        } else {\n            this.form.recieverNames = ''\n            this.form.recievers = ''\n        }\n    },*/\n    //选中人时展示\n    checkedChange: function checkedChange(data, isChecked) {\n      this.tempUser = data;\n\n      for (var i = 0; i < data.length; i++) {\n        this.reciverList.push(data[i]);\n      } //输入框展示人名\n\n\n      if (this.reciverList.length > 0) {\n        this.form.recieverNames = this.reciverList[0].realName;\n        this.form.recievers = this.reciverList[0].uuid;\n\n        for (var _i = 1; _i < this.reciverList.length; _i++) {\n          this.form.recieverNames += ',' + this.reciverList[_i].realName;\n          this.form.recievers += ',' + this.reciverList[_i].uuid;\n        }\n      } else {\n        this.form.recieverNames = '';\n        this.form.recievers = '';\n      }\n\n      this.reciverList = [];\n      this.tempUser = [];\n    },\n    checkedChange1: function checkedChange1(data, isChecked) {\n      var tempData = this.tempUser;\n\n      if (isChecked) {\n        //选中\n        var item = '';\n        var oldUser = '';\n\n        for (var i = 0; i < data.length; i++) {\n          item = data[i].uuid;\n\n          if (this.tempUser.length > 0) {\n            for (var j = 0; j < this.tempUser.length; j++) {\n              oldUser = this.tempUser[j]; //旧数据uuid\n\n              if (this.tempUser.indexOf(item) === -1) {\n                //未出现过\n                this.reciverList.push(data[i]);\n                tempData.push(item); //保存已有uuid\n              }\n            }\n          } else {\n            this.reciverList.push(data[i]);\n            tempData.push(item);\n          }\n        }\n\n        this.tempUser = tempData;\n      } else {\n        //取消选择\n        for (var _i2 = 0; _i2 < this.reciverList.length; _i2++) {\n          if (this.reciverList[_i2].uuid === checkedObj.uuid) {\n            this.reciverList.splice(_i2, 1);\n            break;\n          }\n        }\n      } //输入框展示人名\n\n\n      if (this.reciverList.length > 0) {\n        this.form.recieverNames = this.reciverList[0].realName;\n        this.form.recievers = this.reciverList[0].uuid;\n\n        for (var _i3 = 1; _i3 < this.reciverList.length; _i3++) {\n          this.form.recieverNames += ',' + this.reciverList[_i3].realName;\n          this.form.recievers += ',' + this.reciverList[_i3].uuid;\n        }\n      } else {\n        this.form.recieverNames = '';\n        this.form.recievers = '';\n      }\n    },\n    openOrg: function openOrg() {\n      this.show2 = !this.show2;\n      var that = this;\n      this.$$request({\n        url: this.$api.homeApi.getListAllOrgTree,\n        data: {}\n      }).then(function (res) {\n        if (res.result === 1) {\n          that.orgTreeObj.orgTree = res.info;\n        }\n      });\n    },\n    nodeClick: function nodeClick(data) {},\n    downl: function downl(data) {\n      console.log(data);\n      var that = this;\n      this.$$download(data).then(function () {\n        that.$message({\n          type: 'success',\n          message: '下载成功！'\n        });\n      }).catch(function (err) {\n        that.$message({\n          type: 'info',\n          message: '下载失败！'\n        });\n      });\n    },\n    beforeClose: function beforeClose(done) {\n      this.form = {\n        //站内信代码\n        MailDm: '002',\n        //接收人ID\n        recievers: [],\n        //接收人姓名\n        recieverNames: '',\n        //接收标题\n        title: '',\n        //接收内容\n        content: '',\n        type: 0\n      };\n      this.tempUser = [];\n      this.orgTreeObj.daixuanData = [];\n      this.$emit(\"afterNew\", this.form);\n      this.$emit('update:dialogFormVisible', false);\n      done();\n    },\n    cancel: function cancel() {\n      this.form = {\n        //站内信代码\n        MailDm: '002',\n        //接收人ID\n        recievers: [],\n        //接收人姓名\n        recieverNames: '',\n        //接收标题\n        title: '',\n        //接收内容\n        content: '',\n        type: 0\n      };\n      this.$emit(\"afterNew\", this.form);\n      this.$emit('update:dialogFormVisible', false);\n    },\n    //新建工作指令\n    submitForm: function submitForm(formName) {\n      var _this = this;\n\n      var that = this;\n      this.$refs[formName].validate(function (valid) {\n        if (valid) {\n          //添加接口\n          var req = that.form;\n\n          _this.$axios({\n            method: 'post',\n            url: _this.$api.hyglApi.saveMail,\n            data: req\n          }).then(function (res) {\n            console.log(res);\n\n            if (res.result === 1) {\n              var fileList = that.$refs.upload.fileList;\n\n              if (fileList.length > 0) {\n                /*保存成功，关联附件列表*/\n                console.log(that.$refs.upload.fileList);\n                var MD5Paths = [],\n                    fileNames = [];\n                fileList.forEach(function (item) {\n                  MD5Paths.push(item.url);\n                  fileNames.push(item.name);\n                });\n                var param = {\n                  \"relatedid\": res.info.uuid,\n                  \"MD5Path\": MD5Paths.join(','),\n                  \"fileName\": fileNames.join(',')\n                };\n                that.$$insertFileInfoBatch(param).then(function (resdata) {\n                  that.$message({\n                    message: '新增成功',\n                    type: 'success'\n                  });\n                  that.dialogFormVisible = false;\n                }).catch(function (err) {\n                  that.$message({\n                    message: '关联附件列表失败',\n                    type: 'warning'\n                  });\n                });\n              } else {\n                that.$message({\n                  message: '新增成功',\n                  type: 'success'\n                });\n              }\n\n              that.$emit(\"afterNew\", that.form);\n              that.$emit('update:dialogFormVisible', false);\n              that.dialogFormVisible = false;\n            }\n          });\n        } else {\n          console.log('error submit!!');\n          return false;\n        }\n      });\n    }\n  },\n  created: function created() {\n    var that = this;\n\n    if (this.form.uuid !== '') {\n      this.$$queryFileList({\n        \"relatedid\": this.form.uuid\n      }).then(function (res) {\n        return res.info;\n      }).then(function (data) {\n        if (data.length > 0) {\n          data.forEach(function (item) {\n            var obj = {\n              relatedid: item.relatedid,\n              uuid: item.uuid,\n              name: item.fileName,\n              url: item.md5path\n            };\n            that.fileList.push(obj);\n          });\n        }\n      }).catch(function (err) {});\n    }\n\n    if (this.form.uuid !== '' && this.form.type === 1) {\n      this.$$request({\n        url: this.$api.hyglApi.updateReadStateByUuid,\n        data: {\n          uuid: this.form.uuid\n        }\n      }).then().catch();\n    }\n  }\n};",{"version":3,"sources":["zlDialog.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div class=\" zlDialogStyle\">\r\n        <el-dialog\r\n                :close-on-click-modal=\"false\"\r\n                :visible.sync=\"dialogFormVisible\"\r\n                title=\"新建指令\"\r\n                v-dialogDrag\r\n                width=\"1050px\"\r\n                :before-close=\"beforeClose\"\r\n                :destroy-on-close=\"true\"\r\n        >\r\n            <div class=\"zlStyle\" style=\"width:100%;\">\r\n                <el-form :inline=\"true\" :model=\"form\" :rules=\"rules\" label-width=\"120px\" ref=\"form\" size=\"medium\">\r\n                    <el-form-item :label=\"form.type===1?'发送人':'接收人'\" prop=\"recievers\">\r\n                        <!--<el-select v-model=\"form.recievers\" multiple placeholder=\"请选择\" v-if=\"form.uuid==''\">\r\n                            <el-option\r\n                                    v-for=\"item in reciverList\"\r\n                                    :key=\"item.uuid\"\r\n                                    :label=\"item.realName\"\r\n                                    :value=\"item.uuid\">\r\n                            </el-option>\r\n                        </el-select>-->\r\n                        <!--选框空时-->\r\n                        <el-input :disabled=\"true\" class=\"rc\" type=\"text\" v-model=\"form.recieverNames\"\r\n                                  v-if=\"form.uuid==''\">\r\n                            <el-button slot=\"append\" icon=\"el-icon-folder-opened\"\r\n                                       @click=\"openOrg\"></el-button>\r\n                        </el-input>\r\n                        <!--有选人时-->\r\n                        <el-input :disabled=\"true\" class=\"rc\" type=\"text\" v-model=\"form.recieverNames\"\r\n                                  v-else></el-input>\r\n                        <transition name=\"el-zoom-in-top\">\r\n                            <div v-show=\"show2\" class=\"transition-box\">\r\n                                <org-tree @nodeClick=\"nodeClick\" @checkedChange=\"checkedChange\"\r\n                                          :org-tree-obj=\"orgTreeObj\"></org-tree>\r\n                            </div>\r\n                        </transition>\r\n                    </el-form-item>\r\n\r\n                    <el-form-item label=\"指令标题\" prop=\"title\">\r\n                        <el-input class=\"rc\" type=\"text\" v-model=\"form.title\" maxlength=\"30\" show-word-limit\r\n                                  :disabled=\"(form.uuid!='')\"></el-input>\r\n                    </el-form-item>\r\n                    <el-form-item label=\"指令内容\" prop=\"content\">\r\n                        <el-input :rows=\"5\" class=\"rc\" type=\"textarea\" v-model=\"form.content\" maxlength=\"1000\"\r\n                                  :disabled=\"(form.uuid!='')\"\r\n                                  show-word-limit></el-input>\r\n                    </el-form-item>\r\n                    <el-form-item label=\"附件\" prop=\"cyUpload\" v-if=\"form.uuid==''\">\r\n                        <cyUpload ref=\"upload\" :file-num=\"fileNum\" :auto-up=\"true\"></cyUpload>\r\n                    </el-form-item>\r\n                    <el-form-item label=\"附件\" v-else>\r\n                        <p class=\"fj_list\" v-for=\"item in fileList\" @click=\"downl(item)\"><i class=\"el-icon-tickets\"></i>{{item.name}}\r\n                        </p>\r\n                    </el-form-item>\r\n                    <el-form-item style=\"width: 100%;text-align: center\" v-if=\"form.uuid==''\">\r\n                        <el-button @click=\"submitForm('form')\" size=\"medium \" type=\"primary\">保存</el-button>\r\n                        <el-button @click=\"cancel\" size=\"medium \">取消</el-button>\r\n                    </el-form-item>\r\n                    <el-form-item style=\"width: 100%;text-align: center\" v-else>\r\n                        <el-button @click=\"cancel\" size=\"medium \">关闭</el-button>\r\n                    </el-form-item>\r\n                </el-form>\r\n            </div>\r\n        </el-dialog>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import cyUpload from \"../../../components/upAndDown/cyUpload\";\r\n    import OrgTree from \"../../xtgl/myToolbar/OrgTree\";\r\n\r\n    export default {\r\n        name: \"zlDialog\",\r\n        components: {\r\n            cyUpload,\r\n            OrgTree\r\n        },\r\n        props: {\r\n            form: {\r\n                type: Object,\r\n                default: {\r\n                    //站内信代码\r\n                    MailDm: '002',\r\n                    //接收人ID\r\n                    recievers: [],\r\n                    //接收人姓名\r\n                    recieverNames: '',\r\n                    //接收标题\r\n                    title: '',\r\n                    //接收内容\r\n                    content: '',\r\n                    //传入uuid以此区分新建还是修改\r\n                    uuid: '',\r\n                    type: 0\r\n                }\r\n            },\r\n            dialogFormVisible: {\r\n                type: Boolean,\r\n                default: false\r\n            }\r\n        },\r\n        data() {\r\n            return {\r\n                tempUser: [],\r\n                show2: false,\r\n                orgTreeObj: {\r\n                    leftTreeProps: {// 左侧树props\r\n                        label: 'name',\r\n                        children: 'children'\r\n                    },\r\n                    daixuanTreeProps: {// 待选树props\r\n                        label: 'realName'\r\n                    },\r\n                    orgTree: [],\r\n                    daixuanData: [],\r\n                    type: 'zl'\r\n                },\r\n                fileNum: 100,\r\n                reciverIdList: [],\r\n                reciverList: [],\r\n                fileList: [],\r\n                //验证表单\r\n                rules: {\r\n                    recievers: [\r\n                        {required: true, message: '请选择接收人'},\r\n                    ],\r\n                    title: [\r\n                        {required: true, message: '请输入标题'}\r\n                    ],\r\n                    content: [\r\n                        {required: true, message: '请输入内容'}\r\n                    ],\r\n                },\r\n            }\r\n        },\r\n        methods: {\r\n            //树形式展示\r\n            /*checkChange(data, checked) {\r\n                let checkedObj = {\r\n                    uuid: data.uuid,\r\n                    realName: data.realName\r\n                };\r\n                if (checked) {\r\n                    this.reciverList.push(checkedObj);\r\n                } else {\r\n                    for (let i = 0; i < this.reciverList.length; i++) {\r\n                        if (this.reciverList[i].uuid === checkedObj.uuid) {\r\n                            this.reciverList.splice(i, 1);\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                if (this.reciverList.length > 0) {\r\n                    this.form.recieverNames = this.reciverList[0].realName\r\n                    this.form.recievers = this.reciverList[0].uuid\r\n                    for (let i = 1; i < this.reciverList.length; i++) {\r\n                        this.form.recieverNames += ',' + this.reciverList[i].realName\r\n                        this.form.recievers += ',' + this.reciverList[i].uuid\r\n                    }\r\n                } else {\r\n                    this.form.recieverNames = ''\r\n                    this.form.recievers = ''\r\n                }\r\n            },*/\r\n            //选中人时展示\r\n            checkedChange(data, isChecked) {\r\n                this.tempUser = data\r\n                for (let i = 0; i < data.length; i++) {\r\n                    this.reciverList.push(data[i]);\r\n                }\r\n                //输入框展示人名\r\n                if (this.reciverList.length > 0) {\r\n                    this.form.recieverNames = this.reciverList[0].realName\r\n                    this.form.recievers = this.reciverList[0].uuid\r\n                    for (let i = 1; i < this.reciverList.length; i++) {\r\n                        this.form.recieverNames += ',' + this.reciverList[i].realName\r\n                        this.form.recievers += ',' + this.reciverList[i].uuid\r\n                    }\r\n                } else {\r\n                    this.form.recieverNames = ''\r\n                    this.form.recievers = ''\r\n\r\n                }\r\n                this.reciverList = []\r\n                this.tempUser = []\r\n            },\r\n            checkedChange1(data, isChecked) {\r\n                const tempData = this.tempUser;\r\n                if (isChecked) {  //选中\r\n                    let item = ''\r\n                    let oldUser = ''\r\n                    for (let i = 0; i < data.length; i++) {\r\n                        item = data[i].uuid\r\n                        if (this.tempUser.length > 0) {\r\n                            for (let j = 0; j < this.tempUser.length; j++) {\r\n                                oldUser = this.tempUser[j] //旧数据uuid\r\n                                if(this.tempUser.indexOf(item)===-1){ //未出现过\r\n                                    this.reciverList.push(data[i]);\r\n                                    tempData.push(item)  //保存已有uuid\r\n                                }\r\n                            }\r\n                        }else{\r\n                            this.reciverList.push(data[i]);\r\n                            tempData.push(item)\r\n                        }\r\n                    }\r\n                    this.tempUser = tempData;\r\n                } else {  //取消选择\r\n                    for (let i = 0; i < this.reciverList.length; i++) {\r\n                        if (this.reciverList[i].uuid === checkedObj.uuid) {\r\n                            this.reciverList.splice(i, 1);\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                //输入框展示人名\r\n                if (this.reciverList.length > 0) {\r\n                    this.form.recieverNames = this.reciverList[0].realName\r\n                    this.form.recievers = this.reciverList[0].uuid\r\n                    for (let i = 1; i < this.reciverList.length; i++) {\r\n                        this.form.recieverNames += ',' + this.reciverList[i].realName\r\n                        this.form.recievers += ',' + this.reciverList[i].uuid\r\n                    }\r\n                } else {\r\n                    this.form.recieverNames = ''\r\n                    this.form.recievers = ''\r\n                }\r\n            },\r\n            openOrg() {\r\n                this.show2 = !this.show2;\r\n                let that = this\r\n                this.$$request({\r\n                    url: this.$api.homeApi.getListAllOrgTree,\r\n                    data: {}\r\n                }).then(function (res) {\r\n                    if (res.result === 1) {\r\n                        that.orgTreeObj.orgTree = res.info\r\n                    }\r\n                })\r\n            },\r\n            nodeClick(data) {\r\n\r\n            },\r\n            downl(data) {\r\n                console.log(data);\r\n                let that = this;\r\n                this.$$download(data).then(() => {\r\n                    that.$message({\r\n                        type: 'success',\r\n                        message: '下载成功！'\r\n                    })\r\n                }).catch((err) => {\r\n                    that.$message({\r\n                        type: 'info',\r\n                        message: '下载失败！'\r\n                    })\r\n                })\r\n            },\r\n            beforeClose(done) {\r\n                this.form = {\r\n                    //站内信代码\r\n                    MailDm: '002',\r\n                    //接收人ID\r\n                    recievers: [],\r\n                    //接收人姓名\r\n                    recieverNames: '',\r\n                    //接收标题\r\n                    title: '',\r\n                    //接收内容\r\n                    content: '',\r\n                    type: 0\r\n                };\r\n                this.tempUser = []\r\n                this.orgTreeObj.daixuanData = []\r\n                this.$emit(\"afterNew\", this.form)\r\n                this.$emit('update:dialogFormVisible', false)\r\n                done()\r\n            },\r\n            cancel() {\r\n                this.form = {\r\n                    //站内信代码\r\n                    MailDm: '002',\r\n                    //接收人ID\r\n                    recievers: [],\r\n                    //接收人姓名\r\n                    recieverNames: '',\r\n                    //接收标题\r\n                    title: '',\r\n                    //接收内容\r\n                    content: '',\r\n                    type: 0\r\n                };\r\n                this.$emit(\"afterNew\", this.form)\r\n                this.$emit('update:dialogFormVisible', false)\r\n            },\r\n            //新建工作指令\r\n            submitForm(formName) {\r\n                let that = this;\r\n                this.$refs[formName].validate((valid) => {\r\n                    if (valid) {\r\n                        //添加接口\r\n                        let req = that.form;\r\n                        this.$axios({\r\n                            method: 'post',\r\n                            url: this.$api.hyglApi.saveMail,\r\n                            data: req\r\n                        }).then(function (res) {\r\n                            console.log(res)\r\n                            if (res.result === 1) {\r\n                                let fileList = that.$refs.upload.fileList;\r\n                                if (fileList.length > 0) {\r\n                                    /*保存成功，关联附件列表*/\r\n                                    console.log(that.$refs.upload.fileList);\r\n                                    let MD5Paths = [], fileNames = [];\r\n                                    fileList.forEach((item) => {\r\n                                        MD5Paths.push(item.url);\r\n                                        fileNames.push(item.name);\r\n                                    })\r\n                                    let param = {\r\n                                        \"relatedid\": res.info.uuid,\r\n                                        \"MD5Path\": MD5Paths.join(','),\r\n                                        \"fileName\": fileNames.join(',')\r\n                                    }\r\n                                    that.$$insertFileInfoBatch(param).then((resdata) => {\r\n                                        that.$message({\r\n                                            message: '新增成功',\r\n                                            type: 'success'\r\n                                        });\r\n                                        that.dialogFormVisible = false;\r\n                                    }).catch(function (err) {\r\n                                        that.$message({\r\n                                            message: '关联附件列表失败',\r\n                                            type: 'warning'\r\n                                        });\r\n                                    })\r\n                                } else {\r\n                                    that.$message({\r\n                                        message: '新增成功',\r\n                                        type: 'success'\r\n                                    });\r\n                                }\r\n                                that.$emit(\"afterNew\", that.form)\r\n                                that.$emit('update:dialogFormVisible', false)\r\n                                that.dialogFormVisible = false\r\n                            }\r\n                        })\r\n                    } else {\r\n                        console.log('error submit!!');\r\n                        return false;\r\n                    }\r\n                });\r\n\r\n            },\r\n        },\r\n        created() {\r\n            let that = this\r\n            if (this.form.uuid !== '') {\r\n                this.$$queryFileList({\r\n                    \"relatedid\": this.form.uuid\r\n                }).then((res) => {\r\n                    return res.info\r\n                }).then((data) => {\r\n                    if (data.length > 0) {\r\n                        data.forEach((item) => {\r\n                            let obj = {\r\n                                relatedid: item.relatedid,\r\n                                uuid: item.uuid,\r\n                                name: item.fileName,\r\n                                url: item.md5path,\r\n                            };\r\n                            that.fileList.push(obj);\r\n                        })\r\n                    }\r\n                }).catch(function (err) {\r\n\r\n                })\r\n            }\r\n            if (this.form.uuid !== '' && this.form.type === 1) {\r\n                this.$$request({\r\n                    url: this.$api.hyglApi.updateReadStateByUuid,\r\n                    data: {uuid: this.form.uuid}\r\n                }).then().catch()\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style lang=\"less\">\r\n    .zlDialogStyle /deep/ .el-dialog {\r\n        display: flex;\r\n        flex-direction: column;\r\n        margin: 0 !important;\r\n        position: absolute;\r\n        top: 50%;\r\n        left: 50%;\r\n        transform: translate(-50%, -50%);\r\n        /*height:600px;*/\r\n        max-height: calc(100% - 30px);\r\n        max-width: calc(100% - 30px);\r\n    }\r\n\r\n    .zlDialogStyle /deep/ .el-dialog .el-dialog__body {\r\n        flex: 1;\r\n        overflow: auto;\r\n    }\r\n    .zlDialogStyle /deep/ .el-dialog__body::-webkit-scrollbar {\r\n        width: 2px;\r\n        height: 100%;\r\n    }\r\n\r\n    .zlStyle /deep/ .el-form-item__content {\r\n        width: 846px;\r\n    }\r\n\r\n    .fj_list {\r\n        cursor: pointer;\r\n    }\r\n\r\n    .fj_list:hover {\r\n        color: #03A9F4;\r\n    }\r\n\r\n    .rc {\r\n        width: 820px;\r\n    }\r\n</style>\r\n"],"sourceRoot":"src/views/hygl/gzzlgl"}]}