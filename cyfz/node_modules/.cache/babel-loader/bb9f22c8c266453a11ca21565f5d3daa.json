{"remainingRequest":"D:\\vueWorkspace\\cyfz\\node_modules\\babel-loader\\lib\\index.js!D:\\vueWorkspace\\cyfz\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\vueWorkspace\\cyfz\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\vueWorkspace\\cyfz\\src\\views\\xtgl\\myToolbar\\fullScreenEditing.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\vueWorkspace\\cyfz\\src\\views\\xtgl\\myToolbar\\fullScreenEditing.vue","mtime":1571198119137},{"path":"D:\\vueWorkspace\\cyfz\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\vueWorkspace\\cyfz\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\vueWorkspace\\cyfz\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\vueWorkspace\\cyfz\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport rich from '@/components/richTextEditor/myRichTextEditor';\nexport default {\n  name: \"fullScreenEditing\",\n  components: {\n    rich: rich\n  },\n  props: {\n    //回传文本内容\n\n    /* fullEditerContent: {\n         type: Object,\n     },*/\n    //全屏富文本框显示控制(父组件控制)\n    fullDialogControl: {\n      type: Boolean\n    },\n    //传至此全屏富文本框的内容\n    smallEditerContent: {\n      type: Object\n    }\n  },\n  data: function data() {\n    return {\n      fullDialogVisible: this.fullDialogControl,\n      //fullContent: this.getContent(),\n      contentForm: this.fullEditerContent,\n      setContent: '',\n      uploadUrl: '',\n      //图片上传地址\n      editorOption: {\n        // 配置信息\n        placeholder: \"请输入内容...\",\n        modules: {\n          toolbar: [['bold', 'italic', 'underline', 'strike'], ['blockquote', 'code-block'], [{\n            'header': 1\n          }, {\n            'header': 2\n          }], [{\n            'list': 'ordered'\n          }, {\n            'list': 'bullet'\n          }], [{\n            'script': 'sub'\n          }, {\n            'script': 'super'\n          }], [{\n            'indent': '-1'\n          }, {\n            'indent': '+1'\n          }], [{\n            'direction': 'rtl'\n          }], [{\n            'size': ['small', false, 'large', 'huge']\n          }], [{\n            'header': [1, 2, 3, 4, 5, 6, false]\n          }], [{\n            'font': []\n          }], [{\n            'color': []\n          }, {\n            'background': []\n          }], [{\n            'align': []\n          }], ['clean'], ['link', 'image', 'video']],\n          imageDrop: true,\n          imageResize: {\n            displayStyles: {\n              backgroundColor: 'black',\n              border: 'none',\n              color: 'white'\n            },\n            modules: ['Resize', 'DisplaySize', 'Toolbar']\n          }\n        }\n      },\n      currentFileData: {},\n      fileList: this.defultFileList\n    };\n  },\n  created: function created() {\n    this.setContent = this.smallEditerContent;\n  },\n  watch: {},\n  methods: {\n    completeContent: function completeContent() {\n      this.fullEditerContent = this.getContent;\n      this.$emit(\"fullEditerContent\", this.fullEditerContent);\n    },\n    cancelContent: function cancelContent() {\n      this.fullDialogVisible = false;\n      this.$emit(\"fullEditerContent\", false);\n    },\n    onEditorReady: function onEditorReady(quill) {// console.log('editor ready!', quill)\n    },\n    onEditorChange: function onEditorChange(_ref) {\n      var quill = _ref.quill,\n          html = _ref.html,\n          text = _ref.text;\n      this.getContent = html;\n      console.log('editor change!', quill, html, text);\n    }\n  }\n};",{"version":3,"sources":["fullScreenEditing.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div class=\"fullEditerStyle\">\r\n        <el-form>\r\n                    <!--内层编辑框-->\r\n                    <el-dialog class=\"my-content\"\r\n                               width=\"30%\"\r\n                               title=\"编辑内容\"\r\n                               :visible.sync=\"fullDialogVisible\"\r\n                               fullscreen = 'true'\r\n                               @close=\"cancelContent\"\r\n                               append-to-body>\r\n                        <rich\r\n                                :setContent=\"setContent\"\r\n                                :editorOption=\"editorOption\"\r\n                                @onEditorChange=\"onEditorChange($event)\"\r\n                                @onEditorReady=\"onEditorReady($event)\"\r\n                                :uploadUrl=\"uploadUrl\"\r\n                        >\r\n                        </rich>\r\n                        <el-form-item style=\"padding-left: 45%;padding-top: 20px\">\r\n                            <el-button  type = \"primary\" @click=\"completeContent()\">完成</el-button>\r\n                            <el-button @click=\"cancelContent()\">取消</el-button>\r\n                        </el-form-item>\r\n                    </el-dialog>\r\n        </el-form>\r\n    </div>\r\n</template>\r\n<script>\r\n    import rich from '@/components/richTextEditor/myRichTextEditor'\r\n    export default {\r\n        name: \"fullScreenEditing\",\r\n        components: {\r\n            rich,\r\n        },\r\n        props: {\r\n            //回传文本内容\r\n           /* fullEditerContent: {\r\n                type: Object,\r\n            },*/\r\n            //全屏富文本框显示控制(父组件控制)\r\n            fullDialogControl: {\r\n                type: Boolean,\r\n            },\r\n            //传至此全屏富文本框的内容\r\n            smallEditerContent: {\r\n                type: Object,\r\n            },\r\n        },\r\n        data() {\r\n            return {\r\n                fullDialogVisible: this.fullDialogControl,\r\n                //fullContent: this.getContent(),\r\n                contentForm: this.fullEditerContent,\r\n                setContent: '',\r\n                uploadUrl: '', //图片上传地址\r\n                editorOption: { // 配置信息\r\n                    placeholder: \"请输入内容...\",\r\n                    modules: {\r\n                        toolbar: [\r\n                            ['bold', 'italic', 'underline', 'strike'],\r\n                            ['blockquote', 'code-block'],\r\n                            [{'header': 1}, {'header': 2}],\r\n                            [{'list': 'ordered'}, {'list': 'bullet'}],\r\n                            [{'script': 'sub'}, {'script': 'super'}],\r\n                            [{'indent': '-1'}, {'indent': '+1'}],\r\n                            [{'direction': 'rtl'}],\r\n                            [{'size': ['small', false, 'large', 'huge']}],\r\n                            [{'header': [1, 2, 3, 4, 5, 6, false]}],\r\n                            [{'font': []}],\r\n                            [{'color': []}, {'background': []}],\r\n                            [{'align': []}],\r\n                            ['clean'],\r\n                            ['link', 'image', 'video'],\r\n                        ]\r\n                        ,\r\n                        imageDrop: true,\r\n                        imageResize: {\r\n                            displayStyles: {\r\n                                backgroundColor: 'black',\r\n                                border: 'none',\r\n                                color: 'white'\r\n                            },\r\n                            modules: ['Resize', 'DisplaySize', 'Toolbar']\r\n                        }\r\n                    }\r\n                },\r\n                currentFileData: {},\r\n                fileList: this.defultFileList\r\n            }\r\n        },\r\n        created() {\r\n            this.setContent = this.smallEditerContent\r\n        },\r\n        watch: {},\r\n        methods: {\r\n            completeContent() {\r\n                this.fullEditerContent = this.getContent\r\n                this.$emit(\"fullEditerContent\", this.fullEditerContent)\r\n            },\r\n            cancelContent() {\r\n                this.fullDialogVisible = false;\r\n                this.$emit(\"fullEditerContent\", false)\r\n            },\r\n            onEditorReady(quill) {\r\n                // console.log('editor ready!', quill)\r\n            },\r\n            onEditorChange({quill, html, text}) {\r\n                this.getContent = html\r\n                console.log('editor change!', quill, html, text)\r\n            },\r\n        },\r\n    }\r\n\r\n</script>\r\n<style scoped lang=\"less\">\r\n    /*调*/\r\n    /*.fullEditerStyle /deep/ .el-dialog__header{\r\n        background-color:dimgray;\r\n    }\r\n    .fullEditerStyle /deep/ .ql-bubble .ql-picker{\r\n        height:40px\r\n    }\r\n    .fullEditerStyle /deep/ .ql-container.ql-snow {\r\n        min-height: 380px;\r\n    }*/\r\n\r\n    .fullEditerStyle /deep/ .ql-bubble .ql-picker{\r\n        height:40px\r\n    }\r\n    #formPage {\r\n        margin: 10px auto;\r\n        width: 80%;\r\n        padding: 0px 22px;\r\n        box-sizing: border-box;\r\n        background-color: #fff\r\n    }\r\n    .fullEditerStyle /deep/ .el-select__caret el-input__icon el-icon-arrow-up {\r\n        width: 5px\r\n    }\r\n    .fullEditerStyle /deep/ .el-dialog {\r\n        display: flex;\r\n        flex-direction: column;\r\n        margin: 0 !important;\r\n        position: absolute;\r\n        top: 50%;\r\n        left: 50%;\r\n        transform: translate(-50%, -50%);\r\n        /*height:600px;*/\r\n        max-height: calc(100% - 30px);\r\n        max-width: calc(100% - 30px);\r\n    }\r\n\r\n    .fullEditerStyle /deep/ .el-dialog .el-dialog__body {\r\n        flex: 1;\r\n        overflow: auto;\r\n    }\r\n\r\n    .my-content /deep/ .ql-container.ql-snow {\r\n        min-height: 400px;\r\n    }\r\n\r\n\r\n    .el-dialog-div {\r\n        overflow: auto;\r\n    }\r\n\r\n    .fullEditerStyle /deep/ .el-dialog__body::-webkit-scrollbar {\r\n        width:2px;\r\n        height:100%;\r\n    }\r\n\r\n    .myupload .el-dialog__body {\r\n        padding: 10px 20px;\r\n        font-size: 16px;\r\n    }\r\n\r\n    .myupload .el-dialog__body-myi {\r\n        color: #EED46F;\r\n        margin-right: 20px;\r\n    }\r\n\r\n    .mytip {\r\n        font-size: 12px;\r\n        color: #909399;\r\n        margin: 3px;\r\n    }\r\n\r\n    .fullEditerStyle /deep/ .editor {\r\n        line-height: normal !important;\r\n        height: 500px;\r\n    }\r\n\r\n    .ql-snow .ql-tooltip[data-mode=link]::before {\r\n        content: \"请输入链接地址:\";\r\n    }\r\n\r\n    .ql-snow .ql-tooltip.ql-editing a.ql-action::after {\r\n        border-right: 0px;\r\n        content: '保存';\r\n        padding-right: 0px;\r\n    }\r\n\r\n    .ql-snow .ql-tooltip[data-mode=video]::before {\r\n        content: \"请输入视频地址:\";\r\n    }\r\n\r\n    .ql-snow .ql-picker.ql-size .ql-picker-label::before,\r\n    .ql-snow .ql-picker.ql-size .ql-picker-item::before {\r\n        content: '14px';\r\n    }\r\n\r\n    .ql-snow .ql-picker.ql-size .ql-picker-label[data-value=small]::before,\r\n    .ql-snow .ql-picker.ql-size .ql-picker-item[data-value=small]::before {\r\n        content: '10px';\r\n    }\r\n\r\n    .ql-snow .ql-picker.ql-size .ql-picker-label[data-value=large]::before,\r\n    .ql-snow .ql-picker.ql-size .ql-picker-item[data-value=large]::before {\r\n        content: '18px';\r\n    }\r\n\r\n    .ql-snow .ql-picker.ql-size .ql-picker-label[data-value=huge]::before,\r\n    .ql-snow .ql-picker.ql-size .ql-picker-item[data-value=huge]::before {\r\n        content: '32px';\r\n    }\r\n\r\n    .ql-snow .ql-picker.ql-size .ql-picker-label::before, .ql-snow .ql-picker.ql-size .ql-picker-item::before {\r\n        content: '文本';\r\n    }\r\n\r\n    .ql-snow .ql-picker.ql-header .ql-picker-label[data-value=\"1\"]::before,\r\n    .ql-snow .ql-picker.ql-header .ql-picker-item[data-value=\"1\"]::before {\r\n        content: '标题1';\r\n    }\r\n\r\n    .ql-snow .ql-picker.ql-header .ql-picker-label[data-value=\"2\"]::before,\r\n    .ql-snow .ql-picker.ql-header .ql-picker-item[data-value=\"2\"]::before {\r\n        content: '标题2';\r\n    }\r\n\r\n    .ql-snow .ql-picker.ql-header .ql-picker-label[data-value=\"3\"]::before,\r\n    .ql-snow .ql-picker.ql-header .ql-picker-item[data-value=\"3\"]::before {\r\n        content: '标题3';\r\n    }\r\n\r\n    .ql-snow .ql-picker.ql-header .ql-picker-label[data-value=\"4\"]::before,\r\n    .ql-snow .ql-picker.ql-header .ql-picker-item[data-value=\"4\"]::before {\r\n        content: '标题4';\r\n    }\r\n</style>\r\n"],"sourceRoot":"src/views/xtgl/myToolbar"}]}