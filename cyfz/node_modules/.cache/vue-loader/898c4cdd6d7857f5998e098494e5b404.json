{"remainingRequest":"D:\\vueWorkspace\\cyfz\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\vueWorkspace\\cyfz\\src\\components\\upload\\upload.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\vueWorkspace\\cyfz\\src\\components\\upload\\upload.vue","mtime":1569635176325},{"path":"D:\\vueWorkspace\\cyfz\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\vueWorkspace\\cyfz\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\vueWorkspace\\cyfz\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\vueWorkspace\\cyfz\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport axios from 'axios'\nimport uploadList from \"./uploadList\";\n\nfunction noop() {\n}\n\nexport default {\n    name: 'upload',\n    props: {\n        autoUp: {//自动上传\n            type: Boolean,\n            default: false,\n        },\n        downAll: {//下载全部\n            type: Boolean,\n            default: false,\n        },\n        showFileList: {//是否使用elementUi自带的展示方式\n            type: Boolean,\n            default: true,\n        },\n        showTable: {//是否使用elementUi自带的展示方式\n            type: Boolean,\n            default: false,\n        },\n        downAndPreview: {//elementUi展示是否可以预览\n            type: Boolean,\n            default: false,\n        },\n        fileNum: {\n            type: Number,\n            default: 10000,\n        },\n        listType: {\n            type: String,\n            default: \"text\",\n        },\n        defaultFileList: {//初始化list数据\n            type: Array,\n            default: () => [],\n            required: false\n        },\n        columns: {//表格展示表头\n            type: Array\n        },\n        md5CheckParams: {\n            type: Object,\n            default: () => ({//md5校验需要的参数\n                userId: '222222',\n                moduleName: 'CheckForFrontEnd'\n            })\n        },\n        upLoadParams: {\n            type: Object,\n            default: () => ({//上传需要的其他参数\n                userId: '222222',\n                moduleName: 'CheckForFrontEnd'\n            })\n        },\n        downLoadOneParams: {\n            type: Object,\n            default: () => ({//下载需要的参数\n                isPreview: 1,\n                forceDocx: 1,\n                webOffice: 1,\n                wordWaterMark: 1,\n                isWpsSecure: 1,\n                caToken: 1,\n                waterMark: 1,\n            })\n        },\n        downLoadAllParams: {\n            type: Object,\n            default: () => ({//下载需要的参数\n                zipName: 'zipDownload',\n            })\n        },\n        getPdfPathParams: {\n            type: Object,\n            default: () => ({\n                isPreview: 1,\n                forceRefresh: 1,\n                xdocPdf: 1,\n            })\n        },\n        onUpSuccess: {\n            type: Function,\n            default: noop\n        },\n        onUpError: {\n            type: Function,\n            default: noop\n        },\n        onUpProgress: {\n            type: Function,\n            default: noop\n        },\n        onUpChange: {\n            type: Function,\n            default: noop\n        },\n        onUpRemove: {\n            type: Function,\n            default: noop\n        },\n        onUpDownloadOne: {\n            type: Function,\n            default: noop\n        },\n        onUpDownloadMany: {\n            type: Function,\n            default: noop\n        },\n    },\n    components: {\n        uploadList,\n    },\n    data() {\n        return {\n            dialogVisible: false,\n            fileList: this.defaultFileList,\n        }\n    },\n    created() {\n        this.defaultFileList.forEach((item, index) => {\n            console.log(item)\n        })\n    },\n    methods: {\n        submitUpload() {\n            this.$refs.upload.submit()\n        },\n        beforeUpload(file) {\n            // console.log(file)\n            /*if (this.listType === 'picture') {\n                const isJPG = file.type === 'image/jpeg';\n                const isLt2M = file.size / 1024 / 1024 < 2;\n\n                if (!isJPG) {\n                    this.$message.error('上传头像图片只能是 JPG 格式!');\n                }\n                if (!isLt2M) {\n                    this.$message.error('上传图片大小不能超过 2MB!');\n                }\n                return isJPG && isLt2M;\n            } else {\n                return true\n            }*/\n        },\n        toUpload(params) {\n            let that = this;\n            that.$$md5ByFile(params).then((res) => {\n                let defaultParam = {\n                    file: params.file,\n                    md5: res.md5\n                };\n                that.$$md5CheckByFile(Object.assign(defaultParam, that.md5CheckParams)).then((checkRes) => {\n                    if (checkRes && checkRes.message === \"正常上传\") {\n                        that.$$uploadFile(Object.assign(defaultParam, {progress:params.onProgress\n                        })).then(function (response) {\n                            console.log(response)\n                            let resObj = {\n                                fileExt: response.fileExt,\n                                secretKey: response.secretKey,\n                                fileSize: response.fileSize,\n                                name: response.fileSrcName,\n                                url: response.url,\n                                md5:response.md5,\n                            }\n                            /*上传成功，加入表格*/\n                            that.fileList.push(resObj)\n                            /*目前接口不是业务接口，只能采用假数据拼接*/\n                            /*that.fileList.push(Object.assign(resObj, {\n                                deptName: \"白昱\",\n                                date: that.getCurrentDateStr()\n                            }));*/\n                            //上传成功 调用onSuccess方法，否则没有完成图标\n                            //处理自己的逻辑\n                            params.onSuccess(Object.assign(resObj,response))\n                        }).catch(() => {\n                            that.$message({\n                                type: 'error',\n                                message: \"上传失败\"\n                            })\n                            //上传失败 调用onError方法\n                            //处理自己的逻辑\n                            params.onError(error)\n                        })\n                    } else if (checkRes && checkRes.message === \"0\") {\n                        console.log(checkRes);\n                        /*已上传，加入表格*/\n                        console.log(params)\n                        // this.fileList.push(checkRes.info);\n                        /*目前接口不是业务接口，只能采用假数据拼接*/\n                        let obj = {\n                            name: params.file.name,\n                            deptName: \"白昱\",\n                            date: that.getCurrentDateStr()\n                        }\n                        console.log(Object.assign(checkRes, obj))\n                        that.fileList.push(Object.assign(checkRes, obj))\n                        params.onSuccess(checkRes)\n                    } else {\n                        that.$message({\n                            type: 'error',\n                            message: \"上传失败\"\n                        })\n                    }\n                })\n            })\n        },\n        toUploadSuccess(response, file, fileList) {\n            this.onUpSuccess(response, file, fileList);\n        },\n        toUploadError(err, file, fileList) {\n            this.onUpError(err, file, fileList);\n        },\n        toUploadProgress(event, file, fileList) {\n            this.onUpProgress(event, file, fileList)\n        },\n        handleExceed() {\n            this.$message({\n                type: \"warning\",\n                message: \"文件个数不能超过\" + this.fileNum + \"个\"\n            })\n        },\n        handleChange(file, fileList) {\n            this.onUpChange(file, fileList)\n        },\n        beforeRemove(file, fileList) {\n            console.log(file);\n            console.log(fileList)\n            if (!!this.onUpRemove && this.onUpRemove.name != \"noop\") {\n                this.onUpRemove(file, fileList)\n                // this.onUpRemove(file, fileList).then(this.handleRemove(file, fileList));\n            } else {\n                let that = this;\n                if (file.status === 'success') {\n                    this.$confirm(`确定移除该文件？`, '提示', {\n                        confirmButtonText: '确定',\n                        cancelButtonText: '取消',\n                        type: 'warning'\n                    }).then(() => {\n\n                        that.$axios({\n                            method: 'post',\n                            url: this.$api.wjglApi.Zh001deleteFile,\n                            data: {\n                                id: file.response.id,\n                            }\n                        }).then(function (response) {\n                            if (response.msg) {\n                                that.handleRemove(file, fileList)\n                            }\n                            that.$message({\n                                type: 'success',\n                                message: '删除成功'\n                            });\n                        }).catch(function (error) {\n                            that.$message({\n                                type: 'error',\n                                message: '删除失败'\n                            })\n                        })\n                    }).catch(() => {\n                        that.$message({\n                            type: 'error',\n                            message: '删除失败'\n                        })\n                    })\n                } else {\n                    that.handleRemove(file, fileList)\n                }\n            }\n            return false\n        },\n        handleRemove(file, fileList) {\n            if (file.status === \"success\") {\n                for (let i = 0; i < fileList.length; i++) {\n                    if (fileList[i].response.id === file.response.id) {\n                        fileList.splice(i, 1);\n                        this.fileList = fileList\n                        console.log(this.fileList)\n                        break;\n                    }\n                }\n            } else {\n                for (let i = 0; i < fileList.length; i++) {\n                    if (fileList[i].uid === file.uid) {\n                        fileList.splice(i, 1);\n                        break;\n                    }\n                }\n            }\n        },\n\n        handlePreview(file) {\n            console.log(file)\n            if (file.hasOwnProperty('status') && file.status === 'success') {\n                this.currentFileData = file.response ? file.response : file;\n                this.dialogVisible = true\n            } else {\n                this.$message({\n                    type: 'warning',\n                    message: '请先上传，再对文件进行预览或下载'\n                })\n            }\n        },\n        preViewFile() {//文件预览\n            if (this.currentFileData.url) {\n                let name = this.currentFileData.name.split('.')[1];\n                let that = this;\n                console.log(name)\n                let url = that.$api.upload.reqUrl + that.$api.upload.preview + '?md5Path='\n                if (name === 'pdf') {\n                    window.open(url + this.currentFileData.url,'_blank')\n                } else {//非pdf文件获取pdf地址\n                    that.$message({\n                        type: 'info',\n                        message: '仅支持pdf预览，该文件需要先下载！'\n                    })\n                }\n                this.dialogVisible = false\n            } else {\n                this.$message({\n                    type: 'info',\n                    message: '预览失败，请检查文件路径！'\n                })\n            }\n        },\n        /*单文件下载*/\n        downloadFile() {\n            let that = this;\n            this.$$download(this.currentFileData).then(() => {\n                that.$message({\n                    type: 'success',\n                    message: '下载成功！'\n                })\n            }).catch((err) => {\n                that.$message({\n                    type: 'info',\n                    message: '下载失败！'\n                })\n            })\n            this.dialogVisible = false\n        },\n        dialogClose() {\n            this.currentFileData = {}\n        },\n        //批量下载\n        downloadAll() {\n            let that = this;\n            let md5Path = [];\n            this.fileList.forEach((item, index) => {\n                console.log(item)\n                md5Path.push(item.md5Path)\n            });\n            let Params = Object.assign({//拼接参数\n                md5Paths: md5Path,\n            }, this.downLoadAllParams);\n            this.$$downloadPackage(Params).then(() => {\n                that.$message({\n                    type: 'success',\n                    message: '下载成功！'\n                })\n            }).catch((err) => {\n                that.$message({\n                    type: 'info',\n                    message: '下载失败！'\n                })\n            })\n        },\n    }\n}\n",{"version":3,"sources":["upload.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkfile":"upload.vue","sourceRoot":"src/components/upload","sourcesContent":["<!---->\r\n/**\r\n*  附件上传组件\r\n*  @params\r\n***\r\n*  autoUp 是否开启自动上传\r\n*  downAll 是否可以批量下载\r\n*  show-file-list 是否采用elementUi默认展示方式？\r\n*  down-and-preview  show-file-list为true情况下是否可以预览和下载\r\n*  show-table 和 show-file-list 只能一个为true 或者都为false 自定义 success 回调的展示\r\n*  show-table  采用表格展示方式 false\r\n*  columns 采用表格展示，需要配置表头\r\n*  defaultFileList 初始化filelist数据\r\n**/\r\n<template>\r\n    <div class=\"myupload\">\r\n        <el-upload\r\n                class=\"upload-demo\"\r\n                ref=\"upload\"\r\n                action=\"#\"\r\n                :before-upload=\"beforeUpload\"\r\n                :on-change=\"handleChange\"\r\n                :http-request=\"toUpload\"\r\n                :on-progress=\"toUploadProgress\"\r\n                :on-success=\"toUploadSuccess\"\r\n                :on-error=\"toUploadError\"\r\n                :on-preview=\"handlePreview\"\r\n                :before-remove=\"beforeRemove\"\r\n                :on-remove=\"handleRemove\"\r\n                :on-exceed=\"handleExceed\"\r\n                :file-list=\"fileList\"\r\n                :auto-upload=\"autoUp\"\r\n                :show-file-list=\"showFileList\"\r\n                :limit=\"fileNum\">\r\n            <el-button slot=\"trigger\" size=\"small\" type=\"primary\" icon=\"el-icon-circle-plus\">选取文件</el-button>\r\n            <el-button v-if=\"!autoUp\" style=\"margin-left: 10px;\" size=\"small\" type=\"success\"\r\n                       @click=\"submitUpload\"\r\n                       icon=\"el-icon-upload\">\r\n                上传文件\r\n            </el-button>\r\n            <el-button v-if=\"downAll\" style=\"margin-left: 10px;\" size=\"small\" type=\"success\" @click=\"downloadAll\"\r\n                       icon=\"el-icon-download\">\r\n                批量下载\r\n            </el-button>\r\n            <div slot=\"tip\" class=\"mytip\">\r\n                <slot name=\"mytip\"></slot>\r\n            </div>\r\n        </el-upload>\r\n        <!--不使用默认展示方式，使用表格-->\r\n        <upload-list v-if=\"showTable\" :list-columns=\"columns\" :list-data=\"fileList\"\r\n                     :list-type=\"listType\"></upload-list>\r\n        <el-dialog v-if=\"downAndPreview\"\r\n                   title=\"提示\"\r\n                   :visible.sync=\"dialogVisible\"\r\n                   width=\"30%\"\r\n                   :close=\"dialogClose\">\r\n            <span><i class=\"el-icon-warning el-dialog__body-myi\"></i>对该文件进行预览或者下载？</span>\r\n            <span slot=\"footer\" class=\"dialog-footer\">\r\n         <el-button size='small' type=\"primary\" @click=\"preViewFile\">文件预览</el-button>\r\n         <el-button size='small' type=\"primary\" @click=\"downloadFile\">文件下载</el-button>\r\n         <el-button size='small' @click=\"dialogVisible = false\">取 消</el-button>\r\n        </span>\r\n        </el-dialog>\r\n    </div>\r\n</template>\r\n<script>\r\n    import axios from 'axios'\r\n    import uploadList from \"./uploadList\";\r\n\r\n    function noop() {\r\n    }\r\n\r\n    export default {\r\n        name: 'upload',\r\n        props: {\r\n            autoUp: {//自动上传\r\n                type: Boolean,\r\n                default: false,\r\n            },\r\n            downAll: {//下载全部\r\n                type: Boolean,\r\n                default: false,\r\n            },\r\n            showFileList: {//是否使用elementUi自带的展示方式\r\n                type: Boolean,\r\n                default: true,\r\n            },\r\n            showTable: {//是否使用elementUi自带的展示方式\r\n                type: Boolean,\r\n                default: false,\r\n            },\r\n            downAndPreview: {//elementUi展示是否可以预览\r\n                type: Boolean,\r\n                default: false,\r\n            },\r\n            fileNum: {\r\n                type: Number,\r\n                default: 10000,\r\n            },\r\n            listType: {\r\n                type: String,\r\n                default: \"text\",\r\n            },\r\n            defaultFileList: {//初始化list数据\r\n                type: Array,\r\n                default: () => [],\r\n                required: false\r\n            },\r\n            columns: {//表格展示表头\r\n                type: Array\r\n            },\r\n            md5CheckParams: {\r\n                type: Object,\r\n                default: () => ({//md5校验需要的参数\r\n                    userId: '222222',\r\n                    moduleName: 'CheckForFrontEnd'\r\n                })\r\n            },\r\n            upLoadParams: {\r\n                type: Object,\r\n                default: () => ({//上传需要的其他参数\r\n                    userId: '222222',\r\n                    moduleName: 'CheckForFrontEnd'\r\n                })\r\n            },\r\n            downLoadOneParams: {\r\n                type: Object,\r\n                default: () => ({//下载需要的参数\r\n                    isPreview: 1,\r\n                    forceDocx: 1,\r\n                    webOffice: 1,\r\n                    wordWaterMark: 1,\r\n                    isWpsSecure: 1,\r\n                    caToken: 1,\r\n                    waterMark: 1,\r\n                })\r\n            },\r\n            downLoadAllParams: {\r\n                type: Object,\r\n                default: () => ({//下载需要的参数\r\n                    zipName: 'zipDownload',\r\n                })\r\n            },\r\n            getPdfPathParams: {\r\n                type: Object,\r\n                default: () => ({\r\n                    isPreview: 1,\r\n                    forceRefresh: 1,\r\n                    xdocPdf: 1,\r\n                })\r\n            },\r\n            onUpSuccess: {\r\n                type: Function,\r\n                default: noop\r\n            },\r\n            onUpError: {\r\n                type: Function,\r\n                default: noop\r\n            },\r\n            onUpProgress: {\r\n                type: Function,\r\n                default: noop\r\n            },\r\n            onUpChange: {\r\n                type: Function,\r\n                default: noop\r\n            },\r\n            onUpRemove: {\r\n                type: Function,\r\n                default: noop\r\n            },\r\n            onUpDownloadOne: {\r\n                type: Function,\r\n                default: noop\r\n            },\r\n            onUpDownloadMany: {\r\n                type: Function,\r\n                default: noop\r\n            },\r\n        },\r\n        components: {\r\n            uploadList,\r\n        },\r\n        data() {\r\n            return {\r\n                dialogVisible: false,\r\n                fileList: this.defaultFileList,\r\n            }\r\n        },\r\n        created() {\r\n            this.defaultFileList.forEach((item, index) => {\r\n                console.log(item)\r\n            })\r\n        },\r\n        methods: {\r\n            submitUpload() {\r\n                this.$refs.upload.submit()\r\n            },\r\n            beforeUpload(file) {\r\n                // console.log(file)\r\n                /*if (this.listType === 'picture') {\r\n                    const isJPG = file.type === 'image/jpeg';\r\n                    const isLt2M = file.size / 1024 / 1024 < 2;\r\n\r\n                    if (!isJPG) {\r\n                        this.$message.error('上传头像图片只能是 JPG 格式!');\r\n                    }\r\n                    if (!isLt2M) {\r\n                        this.$message.error('上传图片大小不能超过 2MB!');\r\n                    }\r\n                    return isJPG && isLt2M;\r\n                } else {\r\n                    return true\r\n                }*/\r\n            },\r\n            toUpload(params) {\r\n                let that = this;\r\n                that.$$md5ByFile(params).then((res) => {\r\n                    let defaultParam = {\r\n                        file: params.file,\r\n                        md5: res.md5\r\n                    };\r\n                    that.$$md5CheckByFile(Object.assign(defaultParam, that.md5CheckParams)).then((checkRes) => {\r\n                        if (checkRes && checkRes.message === \"正常上传\") {\r\n                            that.$$uploadFile(Object.assign(defaultParam, {progress:params.onProgress\r\n                            })).then(function (response) {\r\n                                console.log(response)\r\n                                let resObj = {\r\n                                    fileExt: response.fileExt,\r\n                                    secretKey: response.secretKey,\r\n                                    fileSize: response.fileSize,\r\n                                    name: response.fileSrcName,\r\n                                    url: response.url,\r\n                                    md5:response.md5,\r\n                                }\r\n                                /*上传成功，加入表格*/\r\n                                that.fileList.push(resObj)\r\n                                /*目前接口不是业务接口，只能采用假数据拼接*/\r\n                                /*that.fileList.push(Object.assign(resObj, {\r\n                                    deptName: \"白昱\",\r\n                                    date: that.getCurrentDateStr()\r\n                                }));*/\r\n                                //上传成功 调用onSuccess方法，否则没有完成图标\r\n                                //处理自己的逻辑\r\n                                params.onSuccess(Object.assign(resObj,response))\r\n                            }).catch(() => {\r\n                                that.$message({\r\n                                    type: 'error',\r\n                                    message: \"上传失败\"\r\n                                })\r\n                                //上传失败 调用onError方法\r\n                                //处理自己的逻辑\r\n                                params.onError(error)\r\n                            })\r\n                        } else if (checkRes && checkRes.message === \"0\") {\r\n                            console.log(checkRes);\r\n                            /*已上传，加入表格*/\r\n                            console.log(params)\r\n                            // this.fileList.push(checkRes.info);\r\n                            /*目前接口不是业务接口，只能采用假数据拼接*/\r\n                            let obj = {\r\n                                name: params.file.name,\r\n                                deptName: \"白昱\",\r\n                                date: that.getCurrentDateStr()\r\n                            }\r\n                            console.log(Object.assign(checkRes, obj))\r\n                            that.fileList.push(Object.assign(checkRes, obj))\r\n                            params.onSuccess(checkRes)\r\n                        } else {\r\n                            that.$message({\r\n                                type: 'error',\r\n                                message: \"上传失败\"\r\n                            })\r\n                        }\r\n                    })\r\n                })\r\n            },\r\n            toUploadSuccess(response, file, fileList) {\r\n                this.onUpSuccess(response, file, fileList);\r\n            },\r\n            toUploadError(err, file, fileList) {\r\n                this.onUpError(err, file, fileList);\r\n            },\r\n            toUploadProgress(event, file, fileList) {\r\n                this.onUpProgress(event, file, fileList)\r\n            },\r\n            handleExceed() {\r\n                this.$message({\r\n                    type: \"warning\",\r\n                    message: \"文件个数不能超过\" + this.fileNum + \"个\"\r\n                })\r\n            },\r\n            handleChange(file, fileList) {\r\n                this.onUpChange(file, fileList)\r\n            },\r\n            beforeRemove(file, fileList) {\r\n                console.log(file);\r\n                console.log(fileList)\r\n                if (!!this.onUpRemove && this.onUpRemove.name != \"noop\") {\r\n                    this.onUpRemove(file, fileList)\r\n                    // this.onUpRemove(file, fileList).then(this.handleRemove(file, fileList));\r\n                } else {\r\n                    let that = this;\r\n                    if (file.status === 'success') {\r\n                        this.$confirm(`确定移除该文件？`, '提示', {\r\n                            confirmButtonText: '确定',\r\n                            cancelButtonText: '取消',\r\n                            type: 'warning'\r\n                        }).then(() => {\r\n\r\n                            that.$axios({\r\n                                method: 'post',\r\n                                url: this.$api.wjglApi.Zh001deleteFile,\r\n                                data: {\r\n                                    id: file.response.id,\r\n                                }\r\n                            }).then(function (response) {\r\n                                if (response.msg) {\r\n                                    that.handleRemove(file, fileList)\r\n                                }\r\n                                that.$message({\r\n                                    type: 'success',\r\n                                    message: '删除成功'\r\n                                });\r\n                            }).catch(function (error) {\r\n                                that.$message({\r\n                                    type: 'error',\r\n                                    message: '删除失败'\r\n                                })\r\n                            })\r\n                        }).catch(() => {\r\n                            that.$message({\r\n                                type: 'error',\r\n                                message: '删除失败'\r\n                            })\r\n                        })\r\n                    } else {\r\n                        that.handleRemove(file, fileList)\r\n                    }\r\n                }\r\n                return false\r\n            },\r\n            handleRemove(file, fileList) {\r\n                if (file.status === \"success\") {\r\n                    for (let i = 0; i < fileList.length; i++) {\r\n                        if (fileList[i].response.id === file.response.id) {\r\n                            fileList.splice(i, 1);\r\n                            this.fileList = fileList\r\n                            console.log(this.fileList)\r\n                            break;\r\n                        }\r\n                    }\r\n                } else {\r\n                    for (let i = 0; i < fileList.length; i++) {\r\n                        if (fileList[i].uid === file.uid) {\r\n                            fileList.splice(i, 1);\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n\r\n            handlePreview(file) {\r\n                console.log(file)\r\n                if (file.hasOwnProperty('status') && file.status === 'success') {\r\n                    this.currentFileData = file.response ? file.response : file;\r\n                    this.dialogVisible = true\r\n                } else {\r\n                    this.$message({\r\n                        type: 'warning',\r\n                        message: '请先上传，再对文件进行预览或下载'\r\n                    })\r\n                }\r\n            },\r\n            preViewFile() {//文件预览\r\n                if (this.currentFileData.url) {\r\n                    let name = this.currentFileData.name.split('.')[1];\r\n                    let that = this;\r\n                    console.log(name)\r\n                    let url = that.$api.upload.reqUrl + that.$api.upload.preview + '?md5Path='\r\n                    if (name === 'pdf') {\r\n                        window.open(url + this.currentFileData.url,'_blank')\r\n                    } else {//非pdf文件获取pdf地址\r\n                        that.$message({\r\n                            type: 'info',\r\n                            message: '仅支持pdf预览，该文件需要先下载！'\r\n                        })\r\n                    }\r\n                    this.dialogVisible = false\r\n                } else {\r\n                    this.$message({\r\n                        type: 'info',\r\n                        message: '预览失败，请检查文件路径！'\r\n                    })\r\n                }\r\n            },\r\n            /*单文件下载*/\r\n            downloadFile() {\r\n                let that = this;\r\n                this.$$download(this.currentFileData).then(() => {\r\n                    that.$message({\r\n                        type: 'success',\r\n                        message: '下载成功！'\r\n                    })\r\n                }).catch((err) => {\r\n                    that.$message({\r\n                        type: 'info',\r\n                        message: '下载失败！'\r\n                    })\r\n                })\r\n                this.dialogVisible = false\r\n            },\r\n            dialogClose() {\r\n                this.currentFileData = {}\r\n            },\r\n            //批量下载\r\n            downloadAll() {\r\n                let that = this;\r\n                let md5Path = [];\r\n                this.fileList.forEach((item, index) => {\r\n                    console.log(item)\r\n                    md5Path.push(item.md5Path)\r\n                });\r\n                let Params = Object.assign({//拼接参数\r\n                    md5Paths: md5Path,\r\n                }, this.downLoadAllParams);\r\n                this.$$downloadPackage(Params).then(() => {\r\n                    that.$message({\r\n                        type: 'success',\r\n                        message: '下载成功！'\r\n                    })\r\n                }).catch((err) => {\r\n                    that.$message({\r\n                        type: 'info',\r\n                        message: '下载失败！'\r\n                    })\r\n                })\r\n            },\r\n        }\r\n    }\r\n</script>\r\n\r\n<style>\r\n    .myupload .el-dialog__body {\r\n        padding: 10px 20px;\r\n        font-size: 16px;\r\n    }\r\n\r\n    .myupload .el-dialog__body-myi {\r\n        color: #EED46F;\r\n        margin-right: 20px;\r\n    }\r\n\r\n    .mytip {\r\n        font-size: 12px;\r\n        color: #909399;\r\n        margin: 3px;\r\n    }\r\n\r\n</style>\r\n"]}]}