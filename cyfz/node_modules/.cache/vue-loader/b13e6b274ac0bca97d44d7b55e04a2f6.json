{"remainingRequest":"D:\\vueWorkspace\\cyfz\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\vueWorkspace\\cyfz\\src\\views\\hygl\\gzzlgl\\zlDialog.vue?vue&type=style&index=0&lang=less&","dependencies":[{"path":"D:\\vueWorkspace\\cyfz\\src\\views\\hygl\\gzzlgl\\zlDialog.vue","mtime":1571715009206},{"path":"D:\\vueWorkspace\\cyfz\\node_modules\\@vue\\cli-service\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"D:\\vueWorkspace\\cyfz\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\vueWorkspace\\cyfz\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\vueWorkspace\\cyfz\\node_modules\\less-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\vueWorkspace\\cyfz\\node_modules\\style-resources-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\vueWorkspace\\cyfz\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\vueWorkspace\\cyfz\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.zlDialogStyle /deep/ .el-dialog {\n    display: flex;\n    flex-direction: column;\n    margin: 0 !important;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    /*height:600px;*/\n    max-height: calc(100% - 30px);\n    max-width: calc(100% - 30px);\n}\n\n.zlDialogStyle /deep/ .el-dialog .el-dialog__body {\n    flex: 1;\n    overflow: auto;\n}\n.zlDialogStyle /deep/ .el-dialog__body::-webkit-scrollbar {\n    width: 2px;\n    height: 100%;\n}\n\n.zlStyle /deep/ .el-form-item__content {\n    width: 846px;\n}\n\n.fj_list {\n    cursor: pointer;\n}\n\n.fj_list:hover {\n    color: #03A9F4;\n}\n\n.rc {\n    width: 820px;\n}\n",{"version":3,"sources":["zlDialog.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA","file":"zlDialog.vue","sourceRoot":"src/views/hygl/gzzlgl","sourcesContent":["<template>\r\n    <div class=\" zlDialogStyle\">\r\n        <el-dialog\r\n                :close-on-click-modal=\"false\"\r\n                :visible.sync=\"dialogFormVisible\"\r\n                title=\"新建指令\"\r\n                v-dialogDrag\r\n                width=\"1050px\"\r\n                :before-close=\"beforeClose\"\r\n                :destroy-on-close=\"true\"\r\n        >\r\n            <div class=\"zlStyle\" style=\"width:100%;\">\r\n                <el-form :inline=\"true\" :model=\"form\" :rules=\"rules\" label-width=\"120px\" ref=\"form\" size=\"medium\">\r\n                    <el-form-item :label=\"form.type===1?'发送人':'接收人'\" prop=\"recievers\">\r\n                        <!--<el-select v-model=\"form.recievers\" multiple placeholder=\"请选择\" v-if=\"form.uuid==''\">\r\n                            <el-option\r\n                                    v-for=\"item in reciverList\"\r\n                                    :key=\"item.uuid\"\r\n                                    :label=\"item.realName\"\r\n                                    :value=\"item.uuid\">\r\n                            </el-option>\r\n                        </el-select>-->\r\n                        <!--选框空时-->\r\n                        <el-input :disabled=\"true\" class=\"rc\" type=\"text\" v-model=\"form.recieverNames\"\r\n                                  v-if=\"form.uuid==''\">\r\n                            <el-button slot=\"append\" icon=\"el-icon-folder-opened\"\r\n                                       @click=\"openOrg\"></el-button>\r\n                        </el-input>\r\n                        <!--有选人时-->\r\n                        <el-input :disabled=\"true\" class=\"rc\" type=\"text\" v-model=\"form.recieverNames\"\r\n                                  v-else></el-input>\r\n                        <transition name=\"el-zoom-in-top\">\r\n                            <div v-show=\"show2\" class=\"transition-box\">\r\n                                <org-tree @nodeClick=\"nodeClick\" @checkedChange=\"checkedChange\"\r\n                                          :org-tree-obj=\"orgTreeObj\"></org-tree>\r\n                            </div>\r\n                        </transition>\r\n                    </el-form-item>\r\n\r\n                    <el-form-item label=\"指令标题\" prop=\"title\">\r\n                        <el-input class=\"rc\" type=\"text\" v-model=\"form.title\" maxlength=\"30\" show-word-limit\r\n                                  :disabled=\"(form.uuid!='')\"></el-input>\r\n                    </el-form-item>\r\n                    <el-form-item label=\"指令内容\" prop=\"content\">\r\n                        <el-input :rows=\"5\" class=\"rc\" type=\"textarea\" v-model=\"form.content\" maxlength=\"1000\"\r\n                                  :disabled=\"(form.uuid!='')\"\r\n                                  show-word-limit></el-input>\r\n                    </el-form-item>\r\n                    <el-form-item label=\"附件\" prop=\"cyUpload\" v-if=\"form.uuid==''\">\r\n                        <cyUpload ref=\"upload\" :file-num=\"fileNum\" :auto-up=\"true\"></cyUpload>\r\n                    </el-form-item>\r\n                    <el-form-item label=\"附件\" v-else>\r\n                        <p class=\"fj_list\" v-for=\"item in fileList\" @click=\"downl(item)\"><i class=\"el-icon-tickets\"></i>{{item.name}}\r\n                        </p>\r\n                    </el-form-item>\r\n                    <el-form-item style=\"width: 100%;text-align: center\" v-if=\"form.uuid==''\">\r\n                        <el-button @click=\"submitForm('form')\" size=\"medium \" type=\"primary\">保存</el-button>\r\n                        <el-button @click=\"cancel\" size=\"medium \">取消</el-button>\r\n                    </el-form-item>\r\n                    <el-form-item style=\"width: 100%;text-align: center\" v-else>\r\n                        <el-button @click=\"cancel\" size=\"medium \">关闭</el-button>\r\n                    </el-form-item>\r\n                </el-form>\r\n            </div>\r\n        </el-dialog>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import cyUpload from \"../../../components/upAndDown/cyUpload\";\r\n    import OrgTree from \"../../xtgl/myToolbar/OrgTree\";\r\n\r\n    export default {\r\n        name: \"zlDialog\",\r\n        components: {\r\n            cyUpload,\r\n            OrgTree\r\n        },\r\n        props: {\r\n            form: {\r\n                type: Object,\r\n                default: {\r\n                    //站内信代码\r\n                    MailDm: '002',\r\n                    //接收人ID\r\n                    recievers: [],\r\n                    //接收人姓名\r\n                    recieverNames: '',\r\n                    //接收标题\r\n                    title: '',\r\n                    //接收内容\r\n                    content: '',\r\n                    //传入uuid以此区分新建还是修改\r\n                    uuid: '',\r\n                    type: 0\r\n                }\r\n            },\r\n            dialogFormVisible: {\r\n                type: Boolean,\r\n                default: false\r\n            }\r\n        },\r\n        data() {\r\n            return {\r\n                tempUser: [],\r\n                show2: false,\r\n                orgTreeObj: {\r\n                    leftTreeProps: {// 左侧树props\r\n                        label: 'name',\r\n                        children: 'children'\r\n                    },\r\n                    daixuanTreeProps: {// 待选树props\r\n                        label: 'realName'\r\n                    },\r\n                    orgTree: [],\r\n                    daixuanData: [],\r\n                    type: 'zl'\r\n                },\r\n                fileNum: 100,\r\n                reciverIdList: [],\r\n                reciverList: [],\r\n                fileList: [],\r\n                //验证表单\r\n                rules: {\r\n                    recievers: [\r\n                        {required: true, message: '请选择接收人'},\r\n                    ],\r\n                    title: [\r\n                        {required: true, message: '请输入标题'}\r\n                    ],\r\n                    content: [\r\n                        {required: true, message: '请输入内容'}\r\n                    ],\r\n                },\r\n            }\r\n        },\r\n        methods: {\r\n            //树形式展示\r\n            /*checkChange(data, checked) {\r\n                let checkedObj = {\r\n                    uuid: data.uuid,\r\n                    realName: data.realName\r\n                };\r\n                if (checked) {\r\n                    this.reciverList.push(checkedObj);\r\n                } else {\r\n                    for (let i = 0; i < this.reciverList.length; i++) {\r\n                        if (this.reciverList[i].uuid === checkedObj.uuid) {\r\n                            this.reciverList.splice(i, 1);\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                if (this.reciverList.length > 0) {\r\n                    this.form.recieverNames = this.reciverList[0].realName\r\n                    this.form.recievers = this.reciverList[0].uuid\r\n                    for (let i = 1; i < this.reciverList.length; i++) {\r\n                        this.form.recieverNames += ',' + this.reciverList[i].realName\r\n                        this.form.recievers += ',' + this.reciverList[i].uuid\r\n                    }\r\n                } else {\r\n                    this.form.recieverNames = ''\r\n                    this.form.recievers = ''\r\n                }\r\n            },*/\r\n            //选中人时展示\r\n            checkedChange(data, isChecked) {\r\n                this.tempUser = data\r\n                for (let i = 0; i < data.length; i++) {\r\n                    this.reciverList.push(data[i]);\r\n                }\r\n                //输入框展示人名\r\n                if (this.reciverList.length > 0) {\r\n                    this.form.recieverNames = this.reciverList[0].realName\r\n                    this.form.recievers = this.reciverList[0].uuid\r\n                    for (let i = 1; i < this.reciverList.length; i++) {\r\n                        this.form.recieverNames += ',' + this.reciverList[i].realName\r\n                        this.form.recievers += ',' + this.reciverList[i].uuid\r\n                    }\r\n                } else {\r\n                    this.form.recieverNames = ''\r\n                    this.form.recievers = ''\r\n\r\n                }\r\n                this.reciverList = []\r\n                this.tempUser = []\r\n            },\r\n            checkedChange1(data, isChecked) {\r\n                const tempData = this.tempUser;\r\n                if (isChecked) {  //选中\r\n                    let item = ''\r\n                    let oldUser = ''\r\n                    for (let i = 0; i < data.length; i++) {\r\n                        item = data[i].uuid\r\n                        if (this.tempUser.length > 0) {\r\n                            for (let j = 0; j < this.tempUser.length; j++) {\r\n                                oldUser = this.tempUser[j] //旧数据uuid\r\n                                if(this.tempUser.indexOf(item)===-1){ //未出现过\r\n                                    this.reciverList.push(data[i]);\r\n                                    tempData.push(item)  //保存已有uuid\r\n                                }\r\n                            }\r\n                        }else{\r\n                            this.reciverList.push(data[i]);\r\n                            tempData.push(item)\r\n                        }\r\n                    }\r\n                    this.tempUser = tempData;\r\n                } else {  //取消选择\r\n                    for (let i = 0; i < this.reciverList.length; i++) {\r\n                        if (this.reciverList[i].uuid === checkedObj.uuid) {\r\n                            this.reciverList.splice(i, 1);\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                //输入框展示人名\r\n                if (this.reciverList.length > 0) {\r\n                    this.form.recieverNames = this.reciverList[0].realName\r\n                    this.form.recievers = this.reciverList[0].uuid\r\n                    for (let i = 1; i < this.reciverList.length; i++) {\r\n                        this.form.recieverNames += ',' + this.reciverList[i].realName\r\n                        this.form.recievers += ',' + this.reciverList[i].uuid\r\n                    }\r\n                } else {\r\n                    this.form.recieverNames = ''\r\n                    this.form.recievers = ''\r\n                }\r\n            },\r\n            openOrg() {\r\n                this.show2 = !this.show2;\r\n                let that = this\r\n                this.$$request({\r\n                    url: this.$api.homeApi.getListAllOrgTree,\r\n                    data: {}\r\n                }).then(function (res) {\r\n                    if (res.result === 1) {\r\n                        that.orgTreeObj.orgTree = res.info\r\n                    }\r\n                })\r\n            },\r\n            nodeClick(data) {\r\n\r\n            },\r\n            downl(data) {\r\n                console.log(data);\r\n                let that = this;\r\n                this.$$download(data).then(() => {\r\n                    that.$message({\r\n                        type: 'success',\r\n                        message: '下载成功！'\r\n                    })\r\n                }).catch((err) => {\r\n                    that.$message({\r\n                        type: 'info',\r\n                        message: '下载失败！'\r\n                    })\r\n                })\r\n            },\r\n            beforeClose(done) {\r\n                this.form = {\r\n                    //站内信代码\r\n                    MailDm: '002',\r\n                    //接收人ID\r\n                    recievers: [],\r\n                    //接收人姓名\r\n                    recieverNames: '',\r\n                    //接收标题\r\n                    title: '',\r\n                    //接收内容\r\n                    content: '',\r\n                    type: 0\r\n                };\r\n                this.tempUser = []\r\n                this.orgTreeObj.daixuanData = []\r\n                this.$emit(\"afterNew\", this.form)\r\n                this.$emit('update:dialogFormVisible', false)\r\n                done()\r\n            },\r\n            cancel() {\r\n                this.form = {\r\n                    //站内信代码\r\n                    MailDm: '002',\r\n                    //接收人ID\r\n                    recievers: [],\r\n                    //接收人姓名\r\n                    recieverNames: '',\r\n                    //接收标题\r\n                    title: '',\r\n                    //接收内容\r\n                    content: '',\r\n                    type: 0\r\n                };\r\n                this.$emit(\"afterNew\", this.form)\r\n                this.$emit('update:dialogFormVisible', false)\r\n            },\r\n            //新建工作指令\r\n            submitForm(formName) {\r\n                let that = this;\r\n                this.$refs[formName].validate((valid) => {\r\n                    if (valid) {\r\n                        //添加接口\r\n                        let req = that.form;\r\n                        this.$axios({\r\n                            method: 'post',\r\n                            url: this.$api.hyglApi.saveMail,\r\n                            data: req\r\n                        }).then(function (res) {\r\n                            console.log(res)\r\n                            if (res.result === 1) {\r\n                                let fileList = that.$refs.upload.fileList;\r\n                                if (fileList.length > 0) {\r\n                                    /*保存成功，关联附件列表*/\r\n                                    console.log(that.$refs.upload.fileList);\r\n                                    let MD5Paths = [], fileNames = [];\r\n                                    fileList.forEach((item) => {\r\n                                        MD5Paths.push(item.url);\r\n                                        fileNames.push(item.name);\r\n                                    })\r\n                                    let param = {\r\n                                        \"relatedid\": res.info.uuid,\r\n                                        \"MD5Path\": MD5Paths.join(','),\r\n                                        \"fileName\": fileNames.join(',')\r\n                                    }\r\n                                    that.$$insertFileInfoBatch(param).then((resdata) => {\r\n                                        that.$message({\r\n                                            message: '新增成功',\r\n                                            type: 'success'\r\n                                        });\r\n                                        that.dialogFormVisible = false;\r\n                                    }).catch(function (err) {\r\n                                        that.$message({\r\n                                            message: '关联附件列表失败',\r\n                                            type: 'warning'\r\n                                        });\r\n                                    })\r\n                                } else {\r\n                                    that.$message({\r\n                                        message: '新增成功',\r\n                                        type: 'success'\r\n                                    });\r\n                                }\r\n                                that.$emit(\"afterNew\", that.form)\r\n                                that.$emit('update:dialogFormVisible', false)\r\n                                that.dialogFormVisible = false\r\n                            }\r\n                        })\r\n                    } else {\r\n                        console.log('error submit!!');\r\n                        return false;\r\n                    }\r\n                });\r\n\r\n            },\r\n        },\r\n        created() {\r\n            let that = this\r\n            if (this.form.uuid !== '') {\r\n                this.$$queryFileList({\r\n                    \"relatedid\": this.form.uuid\r\n                }).then((res) => {\r\n                    return res.info\r\n                }).then((data) => {\r\n                    if (data.length > 0) {\r\n                        data.forEach((item) => {\r\n                            let obj = {\r\n                                relatedid: item.relatedid,\r\n                                uuid: item.uuid,\r\n                                name: item.fileName,\r\n                                url: item.md5path,\r\n                            };\r\n                            that.fileList.push(obj);\r\n                        })\r\n                    }\r\n                }).catch(function (err) {\r\n\r\n                })\r\n            }\r\n            if (this.form.uuid !== '' && this.form.type === 1) {\r\n                this.$$request({\r\n                    url: this.$api.hyglApi.updateReadStateByUuid,\r\n                    data: {uuid: this.form.uuid}\r\n                }).then().catch()\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style lang=\"less\">\r\n    .zlDialogStyle /deep/ .el-dialog {\r\n        display: flex;\r\n        flex-direction: column;\r\n        margin: 0 !important;\r\n        position: absolute;\r\n        top: 50%;\r\n        left: 50%;\r\n        transform: translate(-50%, -50%);\r\n        /*height:600px;*/\r\n        max-height: calc(100% - 30px);\r\n        max-width: calc(100% - 30px);\r\n    }\r\n\r\n    .zlDialogStyle /deep/ .el-dialog .el-dialog__body {\r\n        flex: 1;\r\n        overflow: auto;\r\n    }\r\n    .zlDialogStyle /deep/ .el-dialog__body::-webkit-scrollbar {\r\n        width: 2px;\r\n        height: 100%;\r\n    }\r\n\r\n    .zlStyle /deep/ .el-form-item__content {\r\n        width: 846px;\r\n    }\r\n\r\n    .fj_list {\r\n        cursor: pointer;\r\n    }\r\n\r\n    .fj_list:hover {\r\n        color: #03A9F4;\r\n    }\r\n\r\n    .rc {\r\n        width: 820px;\r\n    }\r\n</style>\r\n"]}]}