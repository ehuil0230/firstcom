{"remainingRequest":"D:\\vueWorkspace\\cyfz\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\vueWorkspace\\cyfz\\src\\components\\upAndDown\\cyImageUpload.vue?vue&type=style&index=0&id=de143796&scoped=true&lang=css&","dependencies":[{"path":"D:\\vueWorkspace\\cyfz\\src\\components\\upAndDown\\cyImageUpload.vue","mtime":1571369962409},{"path":"D:\\vueWorkspace\\cyfz\\node_modules\\@vue\\cli-service\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"D:\\vueWorkspace\\cyfz\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\vueWorkspace\\cyfz\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\vueWorkspace\\cyfz\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\vueWorkspace\\cyfz\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/deep/ .avatar-uploader{\n    position: relative;\n    text-align: center;\n}\n.avatar-uploader /deep/ .el-upload {\n    width: 164px;\n    height: 164px;\n    border: 1px dashed #d9d9d9;\n    border-radius: 6px;\n    cursor: pointer;\n    position: relative;\n    left: auto;\n    transform: none;\n    overflow: hidden;\n}\n.avatar-uploader .el-upload:hover {\n    border-color: #409EFF;\n}\n.avatar-uploader-icon {\n    font-size: 28px;\n    color: #8c939d;\n    width: 164px;\n    height: 164px;\n    line-height: 164px;\n    text-align: center;\n}\n.avatar {\n    width: 164px;\n    height: 164px;\n    display: block;\n}\n.avatar-uploader .el-upload-wrapper {\n    position: relative;\n}\n.avatar-uploader .el-upload-item-actions {\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    left: 0;\n    top: 0;\n    cursor: default;\n    text-align: center;\n    color: #fff;\n    opacity: 0;\n    font-size: 20px;\n    background-color: rgba(0,0,0,.5);\n    transition: opacity .3s;\n}\n.avatar-uploader .el-upload-item-actions:hover {\n    opacity: 1;\n}\n.avatar-uploader .el-upload-item-actions::after {\n    display: inline-block;\n    content: \"\";\n    height: 100%;\n    vertical-align: middle;\n}\n.avatar-uploader .el-upload-item-actions:hover span{\n    display: inline-block;\n}\n.avatar-uploader .el-upload-item-actions span{\n    cursor: pointer;\n    margin: 0 15px;\n}\n",{"version":3,"sources":["cyImageUpload.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"cyImageUpload.vue","sourceRoot":"src/components/upAndDown","sourcesContent":["<template>\r\n    <div>\r\n        <el-upload\r\n                ref=\"upload\"\r\n                class=\"avatar-uploader\"\r\n                action=\"#\"\r\n                :show-file-list=\"false\"\r\n                :file-list=\"fileList\"\r\n                :auto-upload=\"autoUp\"\r\n                :limit=\"fileNum\"\r\n                :disabled=\"disableOpen\"\r\n                :http-request=\"toUpload\"\r\n                :before-upload=\"beforeImageUpload\"\r\n                :on-success=\"handleImageUpload\"\r\n                :on-remove=\"handleImageRemove\"\r\n                :on-change=\"handleImageChange\">\r\n            <div class=\"el-upload-wrapper\" v-if=\"image.url != ''\">\r\n                <img :src=\"image.url\" class=\"el-upload-list__item-thumbnail avatar\">\r\n                <span class=\"el-upload-item-actions\">\r\n                    <span v-if=\"canPreview\"\r\n                          class=\"el-upload-item-preview\"\r\n                          @click=\"handleImagePreview(image)\">\r\n                        <i class=\"el-icon-zoom-in\"></i>\r\n                    </span>\r\n                    <span v-if=\"canDelete\"\r\n                          class=\"el-upload-item-delete\"\r\n                          @click=\"handleImageRemove(image)\">\r\n                        <i class=\"el-icon-delete\"></i>\r\n                    </span>\r\n                </span>\r\n            </div>\r\n            <i v-else slot=\"default\" class=\"el-icon-plus avatar-uploader-icon\"></i>\r\n        </el-upload>\r\n        <el-dialog :visible.sync=\"previewDialogVisible\" :modal=\"false\">\r\n            <img width=\"100%\" :src=\"previewImageUrl\" alt=\"\">\r\n        </el-dialog>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        name: \"cyImageUpload\",\r\n        props: {\r\n            autoUp: {//自动上传\r\n                type: Boolean,\r\n                default: false,\r\n            },\r\n            fileNum: {\r\n                type: Number,\r\n                default: 1,\r\n            },\r\n            canPreview: {\r\n                type: Boolean,\r\n                default: true\r\n            },\r\n            canDelete: {\r\n                type: Boolean,\r\n                default: true\r\n            },\r\n            relatedId: {\r\n                type: String,\r\n                default: '',\r\n                required: true\r\n            }\r\n        },\r\n        components: {\r\n\r\n        },\r\n        data() {\r\n            return {\r\n                disableOpen: false,//是否能弹出默认的打开文件，默认打开\r\n                fileList:[],\r\n                image: {\r\n                    relatedid: '',\r\n                    MD5Path: '',\r\n                    fileName: '',\r\n                    url: ''\r\n                },\r\n                previewImageUrl: '',\r\n                previewDialogVisible: false\r\n            }\r\n        },\r\n        // 组件加载完，立刻请求关联图片\r\n        created() {\r\n            window.console.log('cyImageUpload created-------------')\r\n            this.getImageFileByRelatedId()\r\n        },\r\n        watch: {\r\n            // 监听relatedId，如果改变，说明更换了新的详情\r\n            relatedId(newVal, oldVal) {\r\n                window.console.log('relatedId changed')\r\n                this.getImageFileByRelatedId()\r\n            },\r\n            image(newVal, oldVal) {\r\n                window.console.log('image changed')\r\n                if (this.image.url) {\r\n                    this.disableOpen = true\r\n                } else {\r\n                    this.disableOpen = false\r\n                }\r\n            }\r\n        },\r\n        methods: {\r\n            getImageFileByRelatedId() {\r\n                let that = this;\r\n                if (that.relatedId) {\r\n                    /*请求业务接口*/\r\n                    that.$$queryFileList({\r\n                        \"relatedid\": that.relatedId\r\n                    }).then((res) => {\r\n                        let data = res.info\r\n                        if (data && data.length != 0){\r\n                            window.console.log(data)\r\n                            let param = {\r\n                                \"relatedid\": that.relatedId,\r\n                                \"MD5Path\": data.url,\r\n                                \"fileName\": data.name\r\n                            }\r\n                            if (data instanceof Array) {\r\n                                let index = data.length - 1;\r\n                                that.image = param\r\n                                that.image.url = that.$api.upload.reqUrl +\r\n                                    that.$api.upload.download+\"?md5Path=\"+data[index].md5path\r\n                            } else if (data instanceof Object){\r\n                                that.image = param\r\n                                that.image.url = that.$api.upload.reqUrl +\r\n                                    that.$api.upload.download+\"?md5Path=\"+data.md5path\r\n                            }\r\n                        }else {\r\n                            that.clearImage()\r\n                        }\r\n                    }).catch(function (err) {\r\n                        that.$message({\r\n                            type: 'error',\r\n                            message: \"获取图片失败\"\r\n                        })\r\n                    })\r\n                } else {\r\n                    that.clearImage()\r\n                }\r\n            },\r\n            clearImage() {\r\n                let param = {\r\n                    relatedid: '',\r\n                    MD5Path: '',\r\n                    fileName: '',\r\n                    url: ''\r\n                }\r\n                this.image = param\r\n            },\r\n            toUpload(params) {\r\n                window.console.log('image to upload success')\r\n\r\n                let that = this;\r\n                that.$$md5ByFile(params).then((res) => {\r\n                    let defaultParam = {\r\n                        file: params.file,\r\n                        md5: res.md5\r\n                    };\r\n                    that.$$md5CheckByFile(Object.assign(defaultParam, that.md5CheckParams)).then((checkRes) => {\r\n                        if (checkRes && checkRes.message === \"正常上传\") {\r\n                            that.$$uploadFile(Object.assign(defaultParam, {\r\n                                progress: params.onProgress\r\n                            })).then(function (response) {\r\n                                let resObj = {\r\n                                    fileExt: response.fileExt,\r\n                                    secretKey: response.secretKey,\r\n                                    fileSize: response.fileSize,\r\n                                    name: response.fileSrcName,\r\n                                    url: response.url,\r\n                                    md5: response.md5,\r\n                                    relatedid: that.relatedId,\r\n                                };\r\n                                return resObj;\r\n                            }).then((resObj) => {\r\n                                let param = {\r\n                                    \"relatedid\": that.relatedId,\r\n                                    \"MD5Path\": resObj.url,\r\n                                    \"fileName\": resObj.name\r\n                                }\r\n                                that.$$insertFileInfo(param).then((res) => {\r\n                                    // window.console.log(res)\r\n                                    let sucObj = {\r\n                                        name: param.fileName,\r\n                                        relatedid: param.relatedid,\r\n                                        url: param.MD5Path,\r\n                                        uuid: res.info\r\n                                    }\r\n                                    that.image = param\r\n                                    // 将图片回显\r\n                                    that.image.url = that.$api.upload.reqUrl +\r\n                                        that.$api.upload.download+\"?md5Path=\"+sucObj.url\r\n\r\n                                    //上传成功 调用onSuccess方法，否则没有完成图标,处理自己的逻辑\r\n                                    // params.onSuccess(sucObj)\r\n                                }).catch(function (err) {\r\n                                    that.$message({\r\n                                        type: 'error',\r\n                                        message: \"上传失败\"\r\n                                    })\r\n                                })\r\n                            }).catch(() => {\r\n                                that.$message({\r\n                                    type: 'error',\r\n                                    message: \"上传失败\"\r\n                                })\r\n                                //上传失败 调用onError方法\r\n                                //处理自己的逻辑\r\n                                // params.onError(error)\r\n                            })\r\n                        } else if (checkRes && checkRes.message === \"0\") {\r\n                            /*//上传成功 调用onSuccess方法，否则没有完成图标,处理自己的逻辑\r\n                            params.onSuccess(sucObj)*/\r\n                            // window.console.log(checkRes);\r\n                            /*已上传，加入表格*/\r\n                            let obj = {\r\n                                \"relatedid\": that.relatedId,\r\n                                \"MD5Path\": checkRes.url,\r\n                                \"fileName\": params.file.name\r\n                            }\r\n                            that.$$insertFileInfo(obj).then((res) => {\r\n                                // window.console.log(res)\r\n                                let sucObj = {\r\n                                    name: obj.fileName,\r\n                                    relatedid: obj.relatedid,\r\n                                    url: obj.MD5Path,\r\n                                    uuid: res.info\r\n                                }\r\n                                that.image = obj\r\n                                // 将图片回显\r\n                                that.image.url = that.$api.upload.reqUrl +\r\n                                    that.$api.upload.download+\"?md5Path=\"+sucObj.url\r\n\r\n                            }).catch(function (err) {\r\n                                that.$message({\r\n                                    type: 'error',\r\n                                    message: \"上传失败\"\r\n                                })\r\n                            })\r\n                            params.onSuccess(checkRes)\r\n                        } else {\r\n                            that.$message({\r\n                                type: 'error',\r\n                                message: \"上传失败\"\r\n                            })\r\n                        }\r\n                    })\r\n                })\r\n            },\r\n            // 上传前验证文件格式，只能是jpeg/png后缀的图片\r\n            beforeImageUpload(file) {\r\n                window.console.log('image before upload success')\r\n\r\n                const isJPG = (file.type === 'image/jpeg') ||\r\n                    (file.type === 'image/png');\r\n\r\n                if (!isJPG) {\r\n                    this.$message.error('上传头像图片只能是 JPG 或 PNG 格式!');\r\n                }\r\n                return isJPG;\r\n            },\r\n            handleImagePreview(file) {\r\n                this.previewImageUrl = file.url;\r\n                this.previewDialogVisible = true;\r\n            },\r\n            handleImageRemove(file, fileList) {\r\n                window.console.log('image delete success')\r\n                this.fileList=[]\r\n                this.image.url = ''\r\n                this.image.fileName = ''\r\n                this.image.MD5Path = ''\r\n\r\n                // 删除图片后就可以上传了\r\n                this.disableOpen = false\r\n\r\n            },\r\n            handleImageUpload(response, file, fileList) {\r\n                window.console.log('image upload success')\r\n\r\n                // 上传图片后就不能上传了\r\n                this.disableOpen = true\r\n            },\r\n            handleImageChange(file, fileList){\r\n                window.console.log('image change success')\r\n            },\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n    /deep/ .avatar-uploader{\r\n        position: relative;\r\n        text-align: center;\r\n    }\r\n    .avatar-uploader /deep/ .el-upload {\r\n        width: 164px;\r\n        height: 164px;\r\n        border: 1px dashed #d9d9d9;\r\n        border-radius: 6px;\r\n        cursor: pointer;\r\n        position: relative;\r\n        left: auto;\r\n        transform: none;\r\n        overflow: hidden;\r\n    }\r\n    .avatar-uploader .el-upload:hover {\r\n        border-color: #409EFF;\r\n    }\r\n    .avatar-uploader-icon {\r\n        font-size: 28px;\r\n        color: #8c939d;\r\n        width: 164px;\r\n        height: 164px;\r\n        line-height: 164px;\r\n        text-align: center;\r\n    }\r\n    .avatar {\r\n        width: 164px;\r\n        height: 164px;\r\n        display: block;\r\n    }\r\n    .avatar-uploader .el-upload-wrapper {\r\n        position: relative;\r\n    }\r\n    .avatar-uploader .el-upload-item-actions {\r\n        position: absolute;\r\n        width: 100%;\r\n        height: 100%;\r\n        left: 0;\r\n        top: 0;\r\n        cursor: default;\r\n        text-align: center;\r\n        color: #fff;\r\n        opacity: 0;\r\n        font-size: 20px;\r\n        background-color: rgba(0,0,0,.5);\r\n        transition: opacity .3s;\r\n    }\r\n    .avatar-uploader .el-upload-item-actions:hover {\r\n        opacity: 1;\r\n    }\r\n    .avatar-uploader .el-upload-item-actions::after {\r\n        display: inline-block;\r\n        content: \"\";\r\n        height: 100%;\r\n        vertical-align: middle;\r\n    }\r\n    .avatar-uploader .el-upload-item-actions:hover span{\r\n        display: inline-block;\r\n    }\r\n    .avatar-uploader .el-upload-item-actions span{\r\n        cursor: pointer;\r\n        margin: 0 15px;\r\n    }\r\n</style>"]}]}