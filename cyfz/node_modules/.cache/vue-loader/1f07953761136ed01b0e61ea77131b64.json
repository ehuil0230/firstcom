{"remainingRequest":"D:\\vueWorkspace\\cyfz\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\vueWorkspace\\cyfz\\src\\components\\home\\WorkTab.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\vueWorkspace\\cyfz\\src\\components\\home\\WorkTab.vue","mtime":1568987312116},{"path":"D:\\vueWorkspace\\cyfz\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\vueWorkspace\\cyfz\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\vueWorkspace\\cyfz\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\vueWorkspace\\cyfz\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n    created() {\n        this.$store.state.workTab.current = [];\n        this.$store.state.workTab.list = [];\n        //添加current监听\n        this.$watch(\"current\", function (newVal) {\n            this.activeTab = newVal.name\n        })\n    },\n    mounted() {\n        this.initCompleted = true;\n        var _that = this\n        $(\".work-tab\").on(\"mousedown\",\".el-tabs__item\",function (e) {\n            if (e.which == 3) {\n                document.body.oncontextmenu = function () {\n                    return false\n                }\n                let currentTabIndex = $(this).index()\n                let currentTab = _that.worktabs[currentTabIndex]\n                _that.rightActiveTab = currentTab.name\n                let $wrapper = $('<div class=\"worktab-rightmenu-wrapper\"><div class=\"worktab-menu\"><ul></ul></div></div>')\n                $('body').append($wrapper)\n                let li = ''\n                _that.popItems.forEach((item,i)=>{\n                    if(_that.isInit(currentTab.name) && i==0){\n                        //li += '<li class=\"is-disabled\">'+ item.txt +'</li>'\n                    }else{\n                        li += '<li data-id=\"'+ item.id +'\">'+ item.txt +'</li>'\n                    }\n                })\n                let $li = $(li)\n\n                $wrapper.find('ul').append($li)\n                $wrapper.find('ul li').on('click',function () {\n                    let id = $(this).data(\"id\")\n                    let temp = [].concat(_that.worktabs)\n                    if(id === 'current'){\n                        if(!_that.isInit(currentTab.name)){\n                            _that.removeTab(currentTab.name)\n                        }\n                    }else if(id === 'others'){\n                        temp.forEach((item,i)=>{\n                            if(!_that.isInit(item.name) && i!==currentTabIndex){\n                                _that.$store.dispatch(\"workTab/worktabRemove\", item.name)\n                            }\n                        })\n                        _that.$router.push({\n                            name: currentTab.name\n                        })\n                    }else{\n                        temp.forEach((item,i)=>{\n                            if(!_that.isInit(item.name)){\n                                //关闭所有\n                                _that.$store.dispatch(\"workTab/worktabRemove\", item.name)\n                            }\n                        })\n                        if (_that.hasInitPage) {\n                            _that.$router.push({\n                                name: _that.worktabs[0].name,\n                                params: _that.worktabs[0].params\n                            })\n                        } else {\n                            _that.$router.push(\"/\")\n                        }\n                    }\n                })\n                $wrapper.find('.worktab-menu').css({\n                    'top':  $(this).offset().top+ $(this).height()+'px',\n                    \"left\": $(this).offset().left + \"px\"\n                })\n\n\n                $wrapper.on('click',function(e){\n                    $(this).remove()\n                    setTimeout(()=>{\n                        document.body.oncontextmenu = null;\n                    },300)\n                });\n\n            }\n        })\n\n        //打开初始页面\n        if (this.initPage) {\n            this.hasInitPage = true\n            this.$router.replace(\"/\")\n            this.initPage.split(\" \").forEach((item) => {\n                this.initPageCount++;\n                this.$router.replace({\n                    name: item,\n                    params: {\n                        moduleName: this.id\n                    }\n                })\n            })\n        }\n        // this.contentHeight()\n    },\n    data() {\n        return {\n            initCompleted: false,\n            activeTab: '',\n            rightActiveTab: '',\n            hasInitPage: false,\n            initPageCount: 0,\n            popItems:[\n                {\n                    id: 'current',\n                    txt:'关闭当前'\n                },\n                {\n                    id: 'others',\n                    txt:'关闭其他'\n                },\n                {\n                    id: 'all',\n                    txt:'关闭所有'\n                }\n            ]\n        }\n    },\n    props: [\n        \"id\",\n        \"initPage\"\n    ],\n    watch: {},\n    computed: {\n        current() {\n            return this.$store.state.workTab.current\n        },\n        worktabs() {\n            return this.$store.state.workTab.list\n        },\n        //需要Keep-Alive缓存的“组件名称”，组件name值，而非路由name值，所以不同页面复用同一组件时，请多封装一层。避免不同路由引用相同组件时，相互影响。\n        cachePage() {\n            var cachePage = [];\n            this.$store.state.workTab.list.forEach((o) => {\n                cachePage.push(o.name)\n            })\n            return cachePage;\n        },\n        contentHeight() {\n            var contentHeight = 100\n            var h = this.$store.state.screenHeight\n            var w = this.$store.state.screenWidth\n            window.console.log(\"screen:\" + h + \"*\" + w)\n            if (this.initCompleted) {\n                var tabH = this.$refs.tabs.$el.offsetHeight\n                contentHeight = h - 70 - tabH - 20\n                this.$store.commit(\"contentHeight\",contentHeight)\n            }\n            return contentHeight + \"px\"\n        }\n    },\n    methods: {\n        isInit(name) {\n            var flag = false\n            if (this.initPage) {\n                this.initPage.split(\" \").forEach((item) => {\n                    if (item == name) {\n                        flag = true\n                    }\n                })\n            }\n            return flag\n        },\n        clickTab(tab) {\n            this.$router.push({\n                name: this.worktabs[1 * tab.index].leafName,\n                params: this.worktabs[1 * tab.index].params\n            })\n        },\n       /* removeTab(name) {\n            this.$store.dispatch(\"workTab/worktabRemove\", name)\n            if (name === this.current.name && this.worktabs.length >= this.initPageCount) {\n                if (this.worktabs.length > this.initPageCount) {\n                    // 是当前页，返回上一页\n                    this.$router.back();\n                } else {\n                    if (this.hasInitPage) {\n                        this.$router.push({\n                            name: this.worktabs[0].leafName,\n                            params: this.worktabs[0].params\n                        })\n                    } else {\n                        this.$router.push(\"/\")\n                    }\n                }\n            }\n        }*/\n        removeTab(name) {\n            if (name === this.current.name && this.worktabs.length >= this.initPageCount) {\n                if (this.worktabs.length > this.initPageCount) {\n                    // 是当前页，返回上一页\n                    //this.$router.back();\n                    let nowWorktabs = this.worktabs;\n                    for (let i = 0; i < nowWorktabs.length; i++) {\n                        if (nowWorktabs[i].name == name) {\n                            if (nowWorktabs[i + 1]) {\n                                this.$router.push({\n                                    name: nowWorktabs[i + 1].name,\n                                    params: nowWorktabs[i + 1].params\n                                });\n                            } else if (nowWorktabs[i - 1]) {\n                                this.$router.push({\n                                    name: nowWorktabs[i - 1].name,\n                                    params: nowWorktabs[i - 1].params\n                                })\n                            }\n                            break;\n                        }\n                    }\n                } else {\n                    if (this.hasInitPage) {\n                        this.$router.push({\n                            name: this.worktabs[0].name,\n                            params: this.worktabs[0].params\n                        })\n                    } else {\n                        this.$router.push(\"/\")\n                    }\n                }\n            }\n            this.$store.dispatch(\"workTab/worktabRemove\", name);\n        }\n    }\n}\n",{"version":3,"sources":["WorkTab.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAofile":"WorkTab.vue","sourceRoot":"src/components/home","sourcesContent":["<template>\r\n    <div :id=\"id\" class=\"work-tab\">\r\n        <el-tabs v-model=\"activeTab\" type=\"card\" @tab-remove=\"removeTab\" @tab-click=\"clickTab\" ref=\"tabs\">\r\n            <el-tab-pane\r\n                    v-for=\"t in worktabs\"\r\n                    :key=\"t.name\"\r\n                    :label=\"t.tabname\"\r\n                    :name=\"t.name\"\r\n                    :closable=\"!isInit(t.name)\"\r\n            >\r\n            </el-tab-pane>\r\n        </el-tabs>\r\n        <div class=\"work-tab-content\" :style=\"{height: contentHeight}\">\r\n            <keep-alive :include=\"cachePage\">\r\n                <router-view ref=\"content\"></router-view>\r\n            </keep-alive>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\n    export default {\r\n        created() {\r\n            this.$store.state.workTab.current = [];\r\n            this.$store.state.workTab.list = [];\r\n            //添加current监听\r\n            this.$watch(\"current\", function (newVal) {\r\n                this.activeTab = newVal.name\r\n            })\r\n        },\r\n        mounted() {\r\n            this.initCompleted = true;\r\n            var _that = this\r\n            $(\".work-tab\").on(\"mousedown\",\".el-tabs__item\",function (e) {\r\n                if (e.which == 3) {\r\n                    document.body.oncontextmenu = function () {\r\n                        return false\r\n                    }\r\n                    let currentTabIndex = $(this).index()\r\n                    let currentTab = _that.worktabs[currentTabIndex]\r\n                    _that.rightActiveTab = currentTab.name\r\n                    let $wrapper = $('<div class=\"worktab-rightmenu-wrapper\"><div class=\"worktab-menu\"><ul></ul></div></div>')\r\n                    $('body').append($wrapper)\r\n                    let li = ''\r\n                    _that.popItems.forEach((item,i)=>{\r\n                        if(_that.isInit(currentTab.name) && i==0){\r\n                            //li += '<li class=\"is-disabled\">'+ item.txt +'</li>'\r\n                        }else{\r\n                            li += '<li data-id=\"'+ item.id +'\">'+ item.txt +'</li>'\r\n                        }\r\n                    })\r\n                    let $li = $(li)\r\n\r\n                    $wrapper.find('ul').append($li)\r\n                    $wrapper.find('ul li').on('click',function () {\r\n                        let id = $(this).data(\"id\")\r\n                        let temp = [].concat(_that.worktabs)\r\n                        if(id === 'current'){\r\n                            if(!_that.isInit(currentTab.name)){\r\n                                _that.removeTab(currentTab.name)\r\n                            }\r\n                        }else if(id === 'others'){\r\n                            temp.forEach((item,i)=>{\r\n                                if(!_that.isInit(item.name) && i!==currentTabIndex){\r\n                                    _that.$store.dispatch(\"workTab/worktabRemove\", item.name)\r\n                                }\r\n                            })\r\n                            _that.$router.push({\r\n                                name: currentTab.name\r\n                            })\r\n                        }else{\r\n                            temp.forEach((item,i)=>{\r\n                                if(!_that.isInit(item.name)){\r\n                                    //关闭所有\r\n                                    _that.$store.dispatch(\"workTab/worktabRemove\", item.name)\r\n                                }\r\n                            })\r\n                            if (_that.hasInitPage) {\r\n                                _that.$router.push({\r\n                                    name: _that.worktabs[0].name,\r\n                                    params: _that.worktabs[0].params\r\n                                })\r\n                            } else {\r\n                                _that.$router.push(\"/\")\r\n                            }\r\n                        }\r\n                    })\r\n                    $wrapper.find('.worktab-menu').css({\r\n                        'top':  $(this).offset().top+ $(this).height()+'px',\r\n                        \"left\": $(this).offset().left + \"px\"\r\n                    })\r\n\r\n\r\n                    $wrapper.on('click',function(e){\r\n                        $(this).remove()\r\n                        setTimeout(()=>{\r\n                            document.body.oncontextmenu = null;\r\n                        },300)\r\n                    });\r\n\r\n                }\r\n            })\r\n\r\n            //打开初始页面\r\n            if (this.initPage) {\r\n                this.hasInitPage = true\r\n                this.$router.replace(\"/\")\r\n                this.initPage.split(\" \").forEach((item) => {\r\n                    this.initPageCount++;\r\n                    this.$router.replace({\r\n                        name: item,\r\n                        params: {\r\n                            moduleName: this.id\r\n                        }\r\n                    })\r\n                })\r\n            }\r\n            // this.contentHeight()\r\n        },\r\n        data() {\r\n            return {\r\n                initCompleted: false,\r\n                activeTab: '',\r\n                rightActiveTab: '',\r\n                hasInitPage: false,\r\n                initPageCount: 0,\r\n                popItems:[\r\n                    {\r\n                        id: 'current',\r\n                        txt:'关闭当前'\r\n                    },\r\n                    {\r\n                        id: 'others',\r\n                        txt:'关闭其他'\r\n                    },\r\n                    {\r\n                        id: 'all',\r\n                        txt:'关闭所有'\r\n                    }\r\n                ]\r\n            }\r\n        },\r\n        props: [\r\n            \"id\",\r\n            \"initPage\"\r\n        ],\r\n        watch: {},\r\n        computed: {\r\n            current() {\r\n                return this.$store.state.workTab.current\r\n            },\r\n            worktabs() {\r\n                return this.$store.state.workTab.list\r\n            },\r\n            //需要Keep-Alive缓存的“组件名称”，组件name值，而非路由name值，所以不同页面复用同一组件时，请多封装一层。避免不同路由引用相同组件时，相互影响。\r\n            cachePage() {\r\n                var cachePage = [];\r\n                this.$store.state.workTab.list.forEach((o) => {\r\n                    cachePage.push(o.name)\r\n                })\r\n                return cachePage;\r\n            },\r\n            contentHeight() {\r\n                var contentHeight = 100\r\n                var h = this.$store.state.screenHeight\r\n                var w = this.$store.state.screenWidth\r\n                window.console.log(\"screen:\" + h + \"*\" + w)\r\n                if (this.initCompleted) {\r\n                    var tabH = this.$refs.tabs.$el.offsetHeight\r\n                    contentHeight = h - 70 - tabH - 20\r\n                    this.$store.commit(\"contentHeight\",contentHeight)\r\n                }\r\n                return contentHeight + \"px\"\r\n            }\r\n        },\r\n        methods: {\r\n            isInit(name) {\r\n                var flag = false\r\n                if (this.initPage) {\r\n                    this.initPage.split(\" \").forEach((item) => {\r\n                        if (item == name) {\r\n                            flag = true\r\n                        }\r\n                    })\r\n                }\r\n                return flag\r\n            },\r\n            clickTab(tab) {\r\n                this.$router.push({\r\n                    name: this.worktabs[1 * tab.index].leafName,\r\n                    params: this.worktabs[1 * tab.index].params\r\n                })\r\n            },\r\n           /* removeTab(name) {\r\n                this.$store.dispatch(\"workTab/worktabRemove\", name)\r\n                if (name === this.current.name && this.worktabs.length >= this.initPageCount) {\r\n                    if (this.worktabs.length > this.initPageCount) {\r\n                        // 是当前页，返回上一页\r\n                        this.$router.back();\r\n                    } else {\r\n                        if (this.hasInitPage) {\r\n                            this.$router.push({\r\n                                name: this.worktabs[0].leafName,\r\n                                params: this.worktabs[0].params\r\n                            })\r\n                        } else {\r\n                            this.$router.push(\"/\")\r\n                        }\r\n                    }\r\n                }\r\n            }*/\r\n            removeTab(name) {\r\n                if (name === this.current.name && this.worktabs.length >= this.initPageCount) {\r\n                    if (this.worktabs.length > this.initPageCount) {\r\n                        // 是当前页，返回上一页\r\n                        //this.$router.back();\r\n                        let nowWorktabs = this.worktabs;\r\n                        for (let i = 0; i < nowWorktabs.length; i++) {\r\n                            if (nowWorktabs[i].name == name) {\r\n                                if (nowWorktabs[i + 1]) {\r\n                                    this.$router.push({\r\n                                        name: nowWorktabs[i + 1].name,\r\n                                        params: nowWorktabs[i + 1].params\r\n                                    });\r\n                                } else if (nowWorktabs[i - 1]) {\r\n                                    this.$router.push({\r\n                                        name: nowWorktabs[i - 1].name,\r\n                                        params: nowWorktabs[i - 1].params\r\n                                    })\r\n                                }\r\n                                break;\r\n                            }\r\n                        }\r\n                    } else {\r\n                        if (this.hasInitPage) {\r\n                            this.$router.push({\r\n                                name: this.worktabs[0].name,\r\n                                params: this.worktabs[0].params\r\n                            })\r\n                        } else {\r\n                            this.$router.push(\"/\")\r\n                        }\r\n                    }\r\n                }\r\n                this.$store.dispatch(\"workTab/worktabRemove\", name);\r\n            }\r\n        }\r\n    }\r\n</script>\r\n<style>\r\n    .work-tab {\r\n        overflow: hidden;\r\n    }\r\n\r\n    .work-tab .el-tabs__header {\r\n        margin: 0px;\r\n    }\r\n\r\n    .work-tab .el-tabs--card > .el-tabs__header {\r\n        background-color: #FAFAFA;\r\n        border-bottom-color: transparent;\r\n    }\r\n\r\n    .work-tab .el-tabs--card > .el-tabs__header .el-tabs__nav {\r\n        border-color: transparent;\r\n    }\r\n\r\n    .work-tab .el-tabs--card > .el-tabs__header .el-tabs__item {\r\n        background-color: #EDEDED;\r\n        border-radius: 4px 4px 0px 0px;\r\n        border-left-color: transparent;\r\n    }\r\n\r\n    .work-tab .el-tabs--card > .el-tabs__header .el-tabs__item:not(:first-child) {\r\n        margin-left: 6px;\r\n    }\r\n\r\n    .work-tab .el-tabs--card > .el-tabs__header .el-tabs__item.is-active {\r\n        background-color: #FFFFFF;\r\n        border-bottom-color: transparent;\r\n    }\r\n\r\n    .work-tab .el-tabs__nav-scroll {\r\n        height: 41px;\r\n        background-color: #f4f4f4;\r\n    }\r\n\r\n    .work-tab-content {\r\n        /*margin-right: -17px;*/\r\n        /*padding-right: 17px;*/\r\n        background-color: #FFFFFF;\r\n        overflow-y: auto;\r\n        overflow-x: auto;\r\n        position: relative;\r\n        /*  padding:10px;*/\r\n    }\r\n\r\n    .worktab-rightmenu-wrapper{\r\n        position: absolute;\r\n        top: 0;\r\n        bottom: 0;\r\n        left: 0;\r\n        right: 0;\r\n        z-index: 999;\r\n    }\r\n    .worktab-menu{\r\n        width: 100px;\r\n        position: absolute;\r\n        z-index: 10;\r\n\r\n        background-color: #fff;\r\n        border: 1px solid #ebeef5;\r\n        border-radius: 4px;\r\n        box-shadow: 0 2px 12px 0 rgba(0,0,0,.1);\r\n    }\r\n    .worktab-menu >ul{\r\n        margin: auto;\r\n    }\r\n    .worktab-menu ul li{\r\n        list-style: none;\r\n        line-height: 36px;\r\n        padding: 0 20px;\r\n        margin: 0;\r\n        font-size: 14px;\r\n        color: #606266;\r\n        cursor: pointer;\r\n        outline: none;\r\n    }\r\n\r\n    .worktab-menu ul li:hover{\r\n        background-color: #ecf5ff;\r\n        color: #66b1ff;\r\n    }\r\n    .worktab-menu ul li span{\r\n        display: inline-block;\r\n    }\r\n    .worktab-menu ul li span:first-child{\r\n        margin-right: 5px;\r\n    }\r\n    .worktab-menu ul li.is-disabled {\r\n        cursor: not-allowed;\r\n    }\r\n</style>\r\n"]}]}