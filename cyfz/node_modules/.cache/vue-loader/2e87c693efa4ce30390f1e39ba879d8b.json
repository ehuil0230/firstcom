{"remainingRequest":"D:\\vueWorkspace\\cyfz\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\vueWorkspace\\cyfz\\src\\components\\echarts\\Histogram.vue?vue&type=style&index=0&id=968e29e2&lang=less&scoped=true&","dependencies":[{"path":"D:\\vueWorkspace\\cyfz\\src\\components\\echarts\\Histogram.vue","mtime":1570845560487},{"path":"D:\\vueWorkspace\\cyfz\\node_modules\\@vue\\cli-service\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"D:\\vueWorkspace\\cyfz\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\vueWorkspace\\cyfz\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\vueWorkspace\\cyfz\\node_modules\\less-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\vueWorkspace\\cyfz\\node_modules\\style-resources-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\vueWorkspace\\cyfz\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\vueWorkspace\\cyfz\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.histogram {\n    width: 100%;\n    height: 100%;\n    margin: 0 auto;\n}\n",{"version":3,"sources":["Histogram.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2JA;AACA;AACA;AACA;AACA","file":"Histogram.vue","sourceRoot":"src/components/echarts","sourcesContent":["<!--\r\n    柱状图组件\r\n-->\r\n<template>\r\n    <div class=\"histogram\">\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import echarts from 'echarts'\r\n\r\n    export default {\r\n        name: \"Histogram\",\r\n        props: {\r\n            HistogramData: {\r\n                data:[],\r\n                color: { //柱子颜色\r\n                    type: Array,\r\n                    default: ['#02a7b9'],\r\n                },\r\n                name: String, //标题  不需要标题可不传\r\n                download: {   //是否显示下载按钮\r\n                    type: Boolean,\r\n                    default: false\r\n                },\r\n                showNumber: {  //柱顶是否显示具体数值\r\n                    type: Boolean,\r\n                    default: false\r\n                },\r\n                rotate: { //标签字体旋转角度 不传默认不旋转\r\n                    default: [0]\r\n                },\r\n                xName: { //x轴名字\r\n                    type:String,\r\n                    default:'',\r\n                },\r\n                yName: { //y轴名字\r\n                    type:String,\r\n                    default:'',\r\n                }\r\n            }\r\n        },\r\n        data() {\r\n            return {\r\n                xData: [],//x轴数据\r\n                yData: [],//y轴数据\r\n                color: this.HistogramData.color,\r\n                name: this.HistogramData.name,\r\n                download: this.HistogramData.download,\r\n                showNumber: this.HistogramData.showNumber,\r\n                rotate: this.HistogramData.rotate,//标签字体旋转角度 不传默认不旋转\r\n                xName: this.HistogramData.xName,//x轴名字\r\n                yName: this.HistogramData.yName,//y轴名字\r\n            }\r\n        },\r\n        mounted(){\r\n            if(this.HistogramData.url){\r\n                this.getData()\r\n            }\r\n        },\r\n        methods: {\r\n            // 绘制图表\r\n            drawLine() {\r\n                // 基于准备好的dom，初始化echarts实例\r\n                let id = \"echartBar\" + Math.random() * 1000;\r\n                this.$el.setAttribute(\"id\", id);\r\n                let myChartContainer = document.getElementById(id);\r\n                let myChartChina = echarts.init(myChartContainer);\r\n                // 绘制图表\r\n                let optionMap = {  //柱形图配置项\r\n                    color: this.color,\r\n                    title: {\r\n                        text: this.name,\r\n                        left: 'center',\r\n                        top: [10],\r\n                    },\r\n                    tooltip: {\r\n                        trigger: 'axis',\r\n                        axisPointer: {            // 坐标轴指示器，坐标轴触发有效\r\n                            type: 'shadow'        // 默认为直线，可选为：'line' | 'shadow'\r\n                        }\r\n                    },\r\n                    toolbox: {\r\n                        show: this.download,\r\n                        top: [5],\r\n                        right: [20],\r\n                        feature: {\r\n                            saveAsImage: {}\r\n                        }\r\n                    },\r\n                    grid: {\r\n                        left: '5%',\r\n                        right: '10%',\r\n                        bottom: '5%',\r\n                        containLabel: true\r\n                    },\r\n                    xAxis: {\r\n                        name: this.xName,\r\n                        axisLabel: {\r\n                            interval: ['0'], //标签显示间隔\r\n                            rotate: this.rotate, //标签旋转角度\r\n                        },\r\n                        type: 'category',\r\n                        data: this.xData,\r\n                        axisTick: {\r\n                            alignWithLabel: true\r\n                        }\r\n                    },\r\n                    yAxis: [\r\n                        {\r\n                            name: this.yName,\r\n                            type: 'value'\r\n                        }\r\n                    ],\r\n                    series: [\r\n                        {\r\n                            name: this.name,\r\n                            type: 'bar',\r\n                            barWidth: '60%',\r\n                            data: this.yData,\r\n                            label: {\r\n                                normal: {\r\n                                    show: this.showNumber,\r\n                                    position: 'top',\r\n                                    textStyle: {\r\n                                        color: this.color,\r\n                                    }\r\n                                }\r\n                            },\r\n                        }\r\n                    ]\r\n                };\r\n                myChartChina.setOption(optionMap);\r\n                window.onresize = function () {\r\n                    myChartChina.resize();\r\n                }\r\n            },\r\n        },\r\n        watch: {\r\n            'HistogramData.data':function (val) {\r\n                this.xData = [];\r\n                this.yData = [];\r\n                for (let i = 0; i < val.length; i++) {\r\n                    this.xData.push(val[i].name);\r\n                    this.yData.push(val[i].value);\r\n                }\r\n                this.name = this.HistogramData.name;\r\n                this.drawLine();\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n    .histogram {\r\n        width: 100%;\r\n        height: 100%;\r\n        margin: 0 auto;\r\n    }\r\n</style>\r\n"]}]}