{"remainingRequest":"D:\\vueWorkspace\\cyfz\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\vueWorkspace\\cyfz\\src\\components\\upAndDown\\cyUploadImage.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\vueWorkspace\\cyfz\\src\\components\\upAndDown\\cyUploadImage.vue","mtime":1571207347016},{"path":"D:\\vueWorkspace\\cyfz\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\vueWorkspace\\cyfz\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\vueWorkspace\\cyfz\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\vueWorkspace\\cyfz\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n    name: 'cyUpload',\n    props: {\n        autoUp: {//自动上传\n            type: Boolean,\n            default: false,\n        },\n        fileNum: {\n            type: Number,\n            default: 10000,\n        },\n        relatedId: {\n            type: String,\n            default: '',\n        }\n    },\n    data() {\n        return {\n            dialogImageUrl:'',\n            dialogVisible: false,\n            fileList: [],\n        }\n    },\n    created() {\n        let that = this;\n        /*请求业务接口*/\n        if (this.relatedId !== \"\") {\n            this.$$queryFileList({\n                \"relatedid\": this.relatedId\n            }).then((res) => {\n                return res.info\n            }).then((data) => {\n                if (data.length > 0) {\n                    data.forEach((item) => {\n                        let obj = {\n                            relatedid: item.relatedid,\n                            uuid: item.uuid,\n                            name: item.fileName,\n                            url: that.$api.upload.reqUrl+that.$api.upload.download+\"?md5Path=\"+item.md5path,\n                        };\n                        that.fileList.push(obj);\n                    })\n                }\n            }).catch(function (err) {\n                that.$message({\n                    type: 'error',\n                    message: \"获取附件失败\"\n                })\n            })\n        }\n    },\n    methods: {\n        submitUpload() {\n            this.$refs.upload.submit()\n        },\n        beforeUpload(file) {\n            // console.log(file)\n            if (this.listType === 'picture') {\n                const isJPG = file.type === 'image/jpeg';\n                const isLt2M = file.size / 1024 / 1024 < 5;\n\n                if (!isJPG) {\n                    this.$message.error('上传头像图片只能是 JPG 格式!');\n                }\n                if (!isLt2M) {\n                    this.$message.error('上传图片大小不能超过 5MB!');\n                }\n                return isJPG && isLt2M;\n            } else {\n                return true\n            }\n        },\n        toUpload(params) {\n            let that = this;\n            that.$$md5ByFile(params).then((res) => {\n                let defaultParam = {\n                    file: params.file,\n                    md5: res.md5\n                };\n                that.$$md5CheckByFile(Object.assign(defaultParam, that.md5CheckParams)).then((checkRes) => {\n                    if (checkRes && checkRes.message === \"正常上传\") {\n                        that.$$uploadFile(Object.assign(defaultParam, {\n                            progress: params.onProgress\n                        })).then(function (response) {\n                            let resObj = {\n                                fileExt: response.fileExt,\n                                secretKey: response.secretKey,\n                                fileSize: response.fileSize,\n                                name: response.fileSrcName,\n                                url: response.url,\n                                md5: response.md5,\n                                relatedid: that.relatedId,\n                            };\n                            return resObj;\n                        }).then((resObj) => {\n                            if (this.relatedId !== \"\" && this.relatedId) {\n                                let param = {\n                                    \"relatedid\": that.relatedId,\n                                    \"MD5Path\": resObj.url,\n                                    \"fileName\": resObj.name\n                                }\n                                that.$$insertFileInfo(param).then((res) => {\n                                    console.log(res)\n                                    let sucObj = {\n                                        name: param.fileName,\n                                        relatedid: param.relatedid,\n                                        url: that.$api.upload.reqUrl+that.$api.upload.download+\"?md5Path=\"+param.MD5Path,\n                                        uuid: res.info\n                                    }\n                                    /*关联业务表成功，加入列表*/\n                                    that.fileList.push(sucObj);\n                                    //上传成功 调用onSuccess方法，否则没有完成图标,处理自己的逻辑\n                                    // params.onSuccess(sucObj)\n                                }).catch(function (err) {\n                                    that.$message({\n                                        type: 'error',\n                                        message: \"上传失败\"\n                                    })\n                                })\n                            } else {\n                                let sucObj = {\n                                    name: resObj.name,\n                                    url:  that.$api.upload.reqUrl+that.$api.upload.download+\"?md5Path=\"+resObj.url,\n                                }\n                                that.fileList.push(sucObj);\n                            }\n                        }).catch(() => {\n                            that.$message({\n                                type: 'error',\n                                message: \"上传失败\"\n                            })\n                            //上传失败 调用onError方法\n                            //处理自己的逻辑\n                            params.onError(error)\n                        })\n                    } else if (checkRes && checkRes.message === \"0\") {\n                        /*//上传成功 调用onSuccess方法，否则没有完成图标,处理自己的逻辑\n                        params.onSuccess(sucObj)*/\n                        console.log(checkRes);\n                        /*已上传，加入表格*/\n                        if (this.relatedId !== \"\" && this.relatedId) {\n                            let obj = {\n                                \"relatedid\": that.relatedId,\n                                \"MD5Path\": checkRes.url,\n                                \"fileName\": params.file.name\n                            }\n                            that.$$insertFileInfo(obj).then((res) => {\n                                console.log(res)\n                                let sucObj = {\n                                    name: obj.fileName,\n                                    relatedid: obj.relatedid,\n                                    url: that.$api.upload.reqUrl+that.$api.upload.download+\"?md5Path=\"+obj.MD5Path,\n                                    uuid: res.info\n                                }\n                                /*关联业务表成功，加入列表*/\n                                that.fileList.push(sucObj);\n\n                            }).catch(function (err) {\n                                that.$message({\n                                    type: 'error',\n                                    message: \"上传失败\"\n                                })\n                            })\n                            params.onSuccess(checkRes)\n                        } else {\n                            let sucObj = {\n                                name: params.file.name,\n                                url: that.$api.upload.reqUrl+that.$api.upload.download+\"?md5Path=\"+checkRes.url,\n                            }\n                            that.fileList.push(sucObj);\n                        }\n                    } else {\n                        that.$message({\n                            type: 'error',\n                            message: \"上传失败\"\n                        })\n                    }\n                })\n            })\n        },\n        toUploadSuccess(response, file, fileList) {\n        },\n        toUploadError(err, file, fileList) {\n        },\n        toUploadProgress(event, file, fileList) {\n        },\n        handleExceed() {\n            this.$message({\n                type: \"warning\",\n                message: \"文件个数不能超过\" + this.fileNum + \"个\"\n            })\n        },\n        handleChange(file, fileList) {\n            this.onUpChange(file, fileList)\n        },\n        beforeRemove(file, fileList) {\n            console.log(file);\n            console.log(fileList)\n            let that = this;\n            if (file.status === 'success') {\n                this.$confirm(`确定移除该文件？`, '提示', {\n                    confirmButtonText: '确定',\n                    cancelButtonText: '取消',\n                    type: 'warning'\n                }).then(() => {\n                    if(file.uuid){\n                        let param = {\n                            \"uuids\": file.uuid\n                        };\n                        that.$$delMultiFile(param).then((res) => {\n                            if (res.msg) {\n                                that.handleRemove(file, fileList)\n                            }\n                            that.$message({\n                                type: 'success',\n                                message: '删除成功'\n                            });\n                        }).catch(function (err) {\n                            that.$message({\n                                type: 'error',\n                                message: '删除失败'\n                            })\n                        })\n                    }else{\n                        that.handleRemove(file, fileList)\n                    }\n                }).catch(() => {\n                    that.$message({\n                        type: 'info',\n                        message: '取消删除'\n                    })\n                })\n            } else {\n                that.handleRemove(file, fileList)\n            }\n            return false\n        },\n        handleRemove(file, fileList) {\n            if (file.status === \"success\") {\n                if(file.uuid){\n                    for (let i = 0; i < fileList.length; i++) {\n                        if (fileList[i].uuid === file.uuid) {\n                            fileList.splice(i, 1);\n                            this.fileList = fileList\n                            break;\n                        }\n                    }\n                }else {\n                    for (let i = 0; i < fileList.length; i++) {\n                        if (fileList[i].uid === file.uid) {\n                            fileList.splice(i, 1);\n                            this.fileList = fileList\n                            break;\n                        }\n                    }\n                }\n\n            } else {\n                for (let i = 0; i < fileList.length; i++) {\n                    if (fileList[i].uid === file.uid) {\n                        fileList.splice(i, 1);\n                        break;\n                    }\n                }\n            }\n        },\n\n        handlePreview(file) {\n            console.log(file)\n            if (file.hasOwnProperty('status') && file.status === 'success') {\n                let currentFileData = file.response ? file.response : file;\n                this.dialogImageUrl = currentFileData.url;\n                this.dialogVisible = true\n            } else {\n                this.$message({\n                    type: 'warning',\n                    message: '请先上传，再对文件进行下载'\n                })\n            }\n        },\n        /*单文件下载*/\n        downloadFile() {\n            let that = this;\n            this.$$download(this.currentFileData).then(() => {\n                that.$message({\n                    type: 'success',\n                    message: '下载成功！'\n                })\n            }).catch((err) => {\n                that.$message({\n                    type: 'info',\n                    message: '下载失败！'\n                })\n            })\n            this.dialogVisible = false\n        },\n        dialogClose() {\n            this.dialogImageUrl = '';\n        },\n    },\n    watch:{\n        'fileList':function (val) {\n            if(val.length>=this.fileNum){\n                $('div.el-upload--picture-card').addClass(\"g-d-hidei\")\n                console.log('111111111111111111111')\n            }else {\n                $('div.el-upload--picture-card').removeClass(\"g-d-hidei\")\n                console.log('22222222222222222222')\n            }\n        }\n    }\n}\n",{"version":3,"sources":["cyUploadImage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"cyUploadImage.vue","sourceRoot":"src/components/upAndDown","sourcesContent":["<!---->\r\n<template>\r\n    <div class=\"my-image-upload\">\r\n        <!--<el-upload\r\n                ref=\"upload\"\r\n                action=\"#\"\r\n                :http-request=\"toUpload\"\r\n                :on-progress=\"toUploadProgress\"\r\n                :on-success=\"toUploadSuccess\"\r\n                :on-error=\"toUploadError\"\r\n                :on-preview=\"handlePreview\"\r\n                :on-exceed=\"handleExceed\"\r\n                :before-remove=\"beforeRemove\"\r\n                :on-remove=\"handleRemove\"\r\n                :file-list=\"fileList\"\r\n                :auto-upload=\"autoUp\"\r\n                :limit=\"fileNum\">\r\n        </el-upload>-->\r\n\r\n        <el-upload\r\n                ref=\"upload\"\r\n                action=\"#\"\r\n                :http-request=\"toUpload\"\r\n                :on-progress=\"toUploadProgress\"\r\n                :on-success=\"toUploadSuccess\"\r\n                :on-error=\"toUploadError\"\r\n                :on-preview=\"handlePreview\"\r\n                :on-exceed=\"handleExceed\"\r\n                :before-remove=\"beforeRemove\"\r\n                :on-remove=\"handleRemove\"\r\n                :file-list=\"fileList\"\r\n                :auto-upload=\"autoUp\"\r\n                :limit=\"fileNum\"\r\n                list-type=\"picture-card\">\r\n            <i class=\"el-icon-plus\"></i>\r\n        </el-upload>\r\n        <el-dialog :visible.sync=\"dialogVisible\" @click=\"dialogClose\">\r\n            <img width=\"100%\" :src=\"dialogImageUrl\" alt=\"\" style=\"margin-top: 20px\">\r\n        </el-dialog>\r\n    </div>\r\n</template>\r\n<script>\r\n    export default {\r\n        name: 'cyUpload',\r\n        props: {\r\n            autoUp: {//自动上传\r\n                type: Boolean,\r\n                default: false,\r\n            },\r\n            fileNum: {\r\n                type: Number,\r\n                default: 10000,\r\n            },\r\n            relatedId: {\r\n                type: String,\r\n                default: '',\r\n            }\r\n        },\r\n        data() {\r\n            return {\r\n                dialogImageUrl:'',\r\n                dialogVisible: false,\r\n                fileList: [],\r\n            }\r\n        },\r\n        created() {\r\n            let that = this;\r\n            /*请求业务接口*/\r\n            if (this.relatedId !== \"\") {\r\n                this.$$queryFileList({\r\n                    \"relatedid\": this.relatedId\r\n                }).then((res) => {\r\n                    return res.info\r\n                }).then((data) => {\r\n                    if (data.length > 0) {\r\n                        data.forEach((item) => {\r\n                            let obj = {\r\n                                relatedid: item.relatedid,\r\n                                uuid: item.uuid,\r\n                                name: item.fileName,\r\n                                url: that.$api.upload.reqUrl+that.$api.upload.download+\"?md5Path=\"+item.md5path,\r\n                            };\r\n                            that.fileList.push(obj);\r\n                        })\r\n                    }\r\n                }).catch(function (err) {\r\n                    that.$message({\r\n                        type: 'error',\r\n                        message: \"获取附件失败\"\r\n                    })\r\n                })\r\n            }\r\n        },\r\n        methods: {\r\n            submitUpload() {\r\n                this.$refs.upload.submit()\r\n            },\r\n            beforeUpload(file) {\r\n                // console.log(file)\r\n                if (this.listType === 'picture') {\r\n                    const isJPG = file.type === 'image/jpeg';\r\n                    const isLt2M = file.size / 1024 / 1024 < 5;\r\n\r\n                    if (!isJPG) {\r\n                        this.$message.error('上传头像图片只能是 JPG 格式!');\r\n                    }\r\n                    if (!isLt2M) {\r\n                        this.$message.error('上传图片大小不能超过 5MB!');\r\n                    }\r\n                    return isJPG && isLt2M;\r\n                } else {\r\n                    return true\r\n                }\r\n            },\r\n            toUpload(params) {\r\n                let that = this;\r\n                that.$$md5ByFile(params).then((res) => {\r\n                    let defaultParam = {\r\n                        file: params.file,\r\n                        md5: res.md5\r\n                    };\r\n                    that.$$md5CheckByFile(Object.assign(defaultParam, that.md5CheckParams)).then((checkRes) => {\r\n                        if (checkRes && checkRes.message === \"正常上传\") {\r\n                            that.$$uploadFile(Object.assign(defaultParam, {\r\n                                progress: params.onProgress\r\n                            })).then(function (response) {\r\n                                let resObj = {\r\n                                    fileExt: response.fileExt,\r\n                                    secretKey: response.secretKey,\r\n                                    fileSize: response.fileSize,\r\n                                    name: response.fileSrcName,\r\n                                    url: response.url,\r\n                                    md5: response.md5,\r\n                                    relatedid: that.relatedId,\r\n                                };\r\n                                return resObj;\r\n                            }).then((resObj) => {\r\n                                if (this.relatedId !== \"\" && this.relatedId) {\r\n                                    let param = {\r\n                                        \"relatedid\": that.relatedId,\r\n                                        \"MD5Path\": resObj.url,\r\n                                        \"fileName\": resObj.name\r\n                                    }\r\n                                    that.$$insertFileInfo(param).then((res) => {\r\n                                        console.log(res)\r\n                                        let sucObj = {\r\n                                            name: param.fileName,\r\n                                            relatedid: param.relatedid,\r\n                                            url: that.$api.upload.reqUrl+that.$api.upload.download+\"?md5Path=\"+param.MD5Path,\r\n                                            uuid: res.info\r\n                                        }\r\n                                        /*关联业务表成功，加入列表*/\r\n                                        that.fileList.push(sucObj);\r\n                                        //上传成功 调用onSuccess方法，否则没有完成图标,处理自己的逻辑\r\n                                        // params.onSuccess(sucObj)\r\n                                    }).catch(function (err) {\r\n                                        that.$message({\r\n                                            type: 'error',\r\n                                            message: \"上传失败\"\r\n                                        })\r\n                                    })\r\n                                } else {\r\n                                    let sucObj = {\r\n                                        name: resObj.name,\r\n                                        url:  that.$api.upload.reqUrl+that.$api.upload.download+\"?md5Path=\"+resObj.url,\r\n                                    }\r\n                                    that.fileList.push(sucObj);\r\n                                }\r\n                            }).catch(() => {\r\n                                that.$message({\r\n                                    type: 'error',\r\n                                    message: \"上传失败\"\r\n                                })\r\n                                //上传失败 调用onError方法\r\n                                //处理自己的逻辑\r\n                                params.onError(error)\r\n                            })\r\n                        } else if (checkRes && checkRes.message === \"0\") {\r\n                            /*//上传成功 调用onSuccess方法，否则没有完成图标,处理自己的逻辑\r\n                            params.onSuccess(sucObj)*/\r\n                            console.log(checkRes);\r\n                            /*已上传，加入表格*/\r\n                            if (this.relatedId !== \"\" && this.relatedId) {\r\n                                let obj = {\r\n                                    \"relatedid\": that.relatedId,\r\n                                    \"MD5Path\": checkRes.url,\r\n                                    \"fileName\": params.file.name\r\n                                }\r\n                                that.$$insertFileInfo(obj).then((res) => {\r\n                                    console.log(res)\r\n                                    let sucObj = {\r\n                                        name: obj.fileName,\r\n                                        relatedid: obj.relatedid,\r\n                                        url: that.$api.upload.reqUrl+that.$api.upload.download+\"?md5Path=\"+obj.MD5Path,\r\n                                        uuid: res.info\r\n                                    }\r\n                                    /*关联业务表成功，加入列表*/\r\n                                    that.fileList.push(sucObj);\r\n\r\n                                }).catch(function (err) {\r\n                                    that.$message({\r\n                                        type: 'error',\r\n                                        message: \"上传失败\"\r\n                                    })\r\n                                })\r\n                                params.onSuccess(checkRes)\r\n                            } else {\r\n                                let sucObj = {\r\n                                    name: params.file.name,\r\n                                    url: that.$api.upload.reqUrl+that.$api.upload.download+\"?md5Path=\"+checkRes.url,\r\n                                }\r\n                                that.fileList.push(sucObj);\r\n                            }\r\n                        } else {\r\n                            that.$message({\r\n                                type: 'error',\r\n                                message: \"上传失败\"\r\n                            })\r\n                        }\r\n                    })\r\n                })\r\n            },\r\n            toUploadSuccess(response, file, fileList) {\r\n            },\r\n            toUploadError(err, file, fileList) {\r\n            },\r\n            toUploadProgress(event, file, fileList) {\r\n            },\r\n            handleExceed() {\r\n                this.$message({\r\n                    type: \"warning\",\r\n                    message: \"文件个数不能超过\" + this.fileNum + \"个\"\r\n                })\r\n            },\r\n            handleChange(file, fileList) {\r\n                this.onUpChange(file, fileList)\r\n            },\r\n            beforeRemove(file, fileList) {\r\n                console.log(file);\r\n                console.log(fileList)\r\n                let that = this;\r\n                if (file.status === 'success') {\r\n                    this.$confirm(`确定移除该文件？`, '提示', {\r\n                        confirmButtonText: '确定',\r\n                        cancelButtonText: '取消',\r\n                        type: 'warning'\r\n                    }).then(() => {\r\n                        if(file.uuid){\r\n                            let param = {\r\n                                \"uuids\": file.uuid\r\n                            };\r\n                            that.$$delMultiFile(param).then((res) => {\r\n                                if (res.msg) {\r\n                                    that.handleRemove(file, fileList)\r\n                                }\r\n                                that.$message({\r\n                                    type: 'success',\r\n                                    message: '删除成功'\r\n                                });\r\n                            }).catch(function (err) {\r\n                                that.$message({\r\n                                    type: 'error',\r\n                                    message: '删除失败'\r\n                                })\r\n                            })\r\n                        }else{\r\n                            that.handleRemove(file, fileList)\r\n                        }\r\n                    }).catch(() => {\r\n                        that.$message({\r\n                            type: 'info',\r\n                            message: '取消删除'\r\n                        })\r\n                    })\r\n                } else {\r\n                    that.handleRemove(file, fileList)\r\n                }\r\n                return false\r\n            },\r\n            handleRemove(file, fileList) {\r\n                if (file.status === \"success\") {\r\n                    if(file.uuid){\r\n                        for (let i = 0; i < fileList.length; i++) {\r\n                            if (fileList[i].uuid === file.uuid) {\r\n                                fileList.splice(i, 1);\r\n                                this.fileList = fileList\r\n                                break;\r\n                            }\r\n                        }\r\n                    }else {\r\n                        for (let i = 0; i < fileList.length; i++) {\r\n                            if (fileList[i].uid === file.uid) {\r\n                                fileList.splice(i, 1);\r\n                                this.fileList = fileList\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                } else {\r\n                    for (let i = 0; i < fileList.length; i++) {\r\n                        if (fileList[i].uid === file.uid) {\r\n                            fileList.splice(i, 1);\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n\r\n            handlePreview(file) {\r\n                console.log(file)\r\n                if (file.hasOwnProperty('status') && file.status === 'success') {\r\n                    let currentFileData = file.response ? file.response : file;\r\n                    this.dialogImageUrl = currentFileData.url;\r\n                    this.dialogVisible = true\r\n                } else {\r\n                    this.$message({\r\n                        type: 'warning',\r\n                        message: '请先上传，再对文件进行下载'\r\n                    })\r\n                }\r\n            },\r\n            /*单文件下载*/\r\n            downloadFile() {\r\n                let that = this;\r\n                this.$$download(this.currentFileData).then(() => {\r\n                    that.$message({\r\n                        type: 'success',\r\n                        message: '下载成功！'\r\n                    })\r\n                }).catch((err) => {\r\n                    that.$message({\r\n                        type: 'info',\r\n                        message: '下载失败！'\r\n                    })\r\n                })\r\n                this.dialogVisible = false\r\n            },\r\n            dialogClose() {\r\n                this.dialogImageUrl = '';\r\n            },\r\n        },\r\n        watch:{\r\n            'fileList':function (val) {\r\n                if(val.length>=this.fileNum){\r\n                    $('div.el-upload--picture-card').addClass(\"g-d-hidei\")\r\n                    console.log('111111111111111111111')\r\n                }else {\r\n                    $('div.el-upload--picture-card').removeClass(\"g-d-hidei\")\r\n                    console.log('22222222222222222222')\r\n                }\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped lang=\"less\">\r\n    .g-d-hidei{\r\n        display: none;\r\n    }\r\n    .my-image-upload /deep/ .el-dialog__body {\r\n        padding: 10px 20px;\r\n        font-size: 16px;\r\n    }\r\n\r\n    .my-image-upload /deep/ .el-dialog__header{\r\n        height: 50px;\r\n    }\r\n    .mytip {\r\n        font-size: 12px;\r\n        color: #909399;\r\n        margin: 3px;\r\n    }\r\n\r\n</style>\r\n"]}]}