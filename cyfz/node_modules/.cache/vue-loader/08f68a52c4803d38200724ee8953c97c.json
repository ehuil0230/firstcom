{"remainingRequest":"D:\\vueWorkspace\\cyfz\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\vueWorkspace\\cyfz\\src\\views\\xtgl\\myToolbar\\tzggCreOperation.vue?vue&type=style&index=2&id=6cad975b&scoped=true&lang=less&","dependencies":[{"path":"D:\\vueWorkspace\\cyfz\\src\\views\\xtgl\\myToolbar\\tzggCreOperation.vue","mtime":1571637100621},{"path":"D:\\vueWorkspace\\cyfz\\node_modules\\@vue\\cli-service\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"D:\\vueWorkspace\\cyfz\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\vueWorkspace\\cyfz\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\vueWorkspace\\cyfz\\node_modules\\less-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\vueWorkspace\\cyfz\\node_modules\\style-resources-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\vueWorkspace\\cyfz\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\vueWorkspace\\cyfz\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/*调*/\n.tzggStyle /deep/ .ql-bubble .ql-picker {\n    height: 40px\n}\n\n#formPage {\n    margin: 10px auto;\n    width: 80%;\n    padding: 0px 22px;\n    box-sizing: border-box;\n    background-color: #fff\n}\n\n.tzggStyle /deep/ .el-select__caret el-input__icon el-icon-arrow-up {\n    width: 5px\n}\n\n.tzggStyle /deep/ .el-dialog {\n    display: flex;\n    flex-direction: column;\n    margin: 0 !important;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    /*height:600px;*/\n    max-height: calc(100% - 30px);\n    max-width: calc(100% - 30px);\n}\n\n.tzggStyle /deep/ .el-dialog .el-dialog__body {\n    flex: 1;\n    overflow: auto;\n}\n\n.tzggStyle /deep/ .ql-container.ql-snow {\n    min-height: 200px;\n}\n\n.el-dialog-div {\n    overflow: auto;\n}\n\n.tzggStyle /deep/ .el-dialog__body::-webkit-scrollbar {\n    width: 2px;\n    height: 100%;\n}\n\n.myupload .el-dialog__body {\n    padding: 10px 20px;\n    font-size: 16px;\n}\n\n.myupload .el-dialog__body-myi {\n    color: #EED46F;\n    margin-right: 20px;\n}\n\n.mytip {\n    font-size: 12px;\n    color: #909399;\n    margin: 3px;\n}\n\n.tzggStyle /deep/ .editor {\n    line-height: normal !important;\n    height: 500px;\n}\n\n.ql-snow .ql-tooltip[data-mode=link]::before {\n    content: \"请输入链接地址:\";\n}\n\n.ql-snow .ql-tooltip.ql-editing a.ql-action::after {\n    border-right: 0px;\n    content: '保存';\n    padding-right: 0px;\n}\n\n.ql-snow .ql-tooltip[data-mode=video]::before {\n    content: \"请输入视频地址:\";\n}\n\n.ql-snow .ql-picker.ql-size .ql-picker-label::before,\n.ql-snow .ql-picker.ql-size .ql-picker-item::before {\n    content: '14px';\n}\n\n.ql-snow .ql-picker.ql-size .ql-picker-label[data-value=small]::before,\n.ql-snow .ql-picker.ql-size .ql-picker-item[data-value=small]::before {\n    content: '10px';\n}\n\n.ql-snow .ql-picker.ql-size .ql-picker-label[data-value=large]::before,\n.ql-snow .ql-picker.ql-size .ql-picker-item[data-value=large]::before {\n    content: '18px';\n}\n\n.ql-snow .ql-picker.ql-size .ql-picker-label[data-value=huge]::before,\n.ql-snow .ql-picker.ql-size .ql-picker-item[data-value=huge]::before {\n    content: '32px';\n}\n\n.ql-snow .ql-picker.ql-size .ql-picker-label::before, .ql-snow .ql-picker.ql-size .ql-picker-item::before {\n    content: '文本';\n}\n\n.ql-snow .ql-picker.ql-header .ql-picker-label[data-value=\"1\"]::before,\n.ql-snow .ql-picker.ql-header .ql-picker-item[data-value=\"1\"]::before {\n    content: '标题1';\n}\n\n.ql-snow .ql-picker.ql-header .ql-picker-label[data-value=\"2\"]::before,\n.ql-snow .ql-picker.ql-header .ql-picker-item[data-value=\"2\"]::before {\n    content: '标题2';\n}\n\n.ql-snow .ql-picker.ql-header .ql-picker-label[data-value=\"3\"]::before,\n.ql-snow .ql-picker.ql-header .ql-picker-item[data-value=\"3\"]::before {\n    content: '标题3';\n}\n\n.ql-snow .ql-picker.ql-header .ql-picker-label[data-value=\"4\"]::before,\n.ql-snow .ql-picker.ql-header .ql-picker-item[data-value=\"4\"]::before {\n    content: '标题4';\n}\n",{"version":3,"sources":["tzggCreOperation.vue"],"names":[],"mappingsyfile":"tzggCreOperation.vue","sourceRoot":"src/views/xtgl/myToolbar","sourcesContent":["<template>\r\n    <div class=\"tzggStyle\">\r\n        <!--富文本全屏-->\r\n        <full-screen-editing key=\"fullEditer\" v-if=\"fullDialogOpen\" :fullDialogControl=\"fullDialogOpen\"\r\n                             :smallEditerContent=\"smallEditerContent\"\r\n                             @fullEditerContent=\"fullEditerContent($event)\"></full-screen-editing>\r\n        <!--弹窗内容-->\r\n        <el-dialog\r\n                :close-on-click-modal=\"false\"\r\n                title=\"新建\"\r\n                :visible.sync=\"dialogVisible\"\r\n                width=\"80%\"\r\n                height=\"900px\"\r\n                :modal=\"true\"\r\n                :lock-scroll=\"true\"\r\n                v-dialogDrag\r\n                @close=\"handleClose\">\r\n            <div class=\"el-dialog-div\">\r\n                <el-form :model=\"proclamationForm\" :rules=\"rules\" ref=\"proclamationForm\" label-width=\"90px\"\r\n                         class=\"demo-ruleForm\">\r\n                    <el-form-item label=\"标题\" prop=\"title\">\r\n                        <el-input v-model=\"proclamationForm.title\"></el-input>\r\n                    </el-form-item>\r\n                    <el-form-item label=\"是否置顶\" prop=\"isTop\">\r\n                        <el-switch v-model=\"proclamationForm.isTop\" active-value=\"1\" inactive-value=\"0\"></el-switch>\r\n                    </el-form-item>\r\n                    <!--富文本编辑-->\r\n                    <el-form-item label=\"内容\" prop=\"content\">\r\n                        <rich\r\n                                :setContent=\"setContent\"\r\n                                :editorOption=\"editorOption\"\r\n                                @onEditorChange=\"onEditorChange($event)\"\r\n                                @onEditorReady=\"onEditorReady($event)\"\r\n                                :uploadUrl=\"uploadUrl\"\r\n                        >\r\n                        </rich>\r\n                        <!--富文本全屏-->\r\n                        <el-form-item style=\"padding-left: 85%;padding-top: 5px\">\r\n                            全屏：\r\n                            <el-button type=\"info\" icon=\"el-icon-full-screen\" circle\r\n                                       @click=\"openFullEditer\"></el-button>\r\n                        </el-form-item>\r\n                    </el-form-item>\r\n                    <!--<el-form-item label=\"附件\" prop=\"fj\">\r\n                        <p key=\"myTip\" v-if=\"showTip\" style=\"font-size: 10px\"><i class=\"el-icon-warning\"></i>请先保存后再上传附件\r\n                        </p>\r\n                        <cy-upload key=\"upload\" v-if=\"allowUpload\" :file-num=\"fileNum\" :auto-up=\"true\"\r\n                                   :relatedId=\"relatedId\">\r\n                        </cy-upload>\r\n                    </el-form-item>-->\r\n                    <el-form-item label=\"附件\" prop=\"cyUpload\">\r\n                        <cyUpload ref=\"upload\" :file-num=\"fileNum\" :auto-up=\"true\" :relatedId=\"relatedId\"></cyUpload>\r\n                    </el-form-item>\r\n                    <el-form-item style=\"padding-left: 35%\">\r\n                        <el-button type=\"primary\" @click=\"saveForm('proclamationForm')\">保存</el-button>\r\n                        <el-button @click=\"releaseForm('proclamationForm')\">提交</el-button>\r\n                    </el-form-item>\r\n                </el-form>\r\n            </div>\r\n        </el-dialog>\r\n    </div>\r\n</template>\r\n<script>\r\n    import rich from '@/components/richTextEditor/myRichTextEditor'\r\n    import fullScreenEditing from \"./fullScreenEditing\";\r\n    import cyUpload from '@/components/upAndDown/cyUpload';\r\n\r\n    export default {\r\n        name: \"tzggCreOperation\",\r\n        components: {\r\n            cyUpload,\r\n            rich,\r\n            fullScreenEditing,\r\n        },\r\n        props: {\r\n            dialogData: {\r\n                type: Object,\r\n            },\r\n            taVisible: {\r\n                type: Boolean,\r\n            },\r\n        },\r\n        data() {\r\n            return {\r\n                //暂存表单数据\r\n                tempData: {\r\n                    uuid: '', //保存完提交时传递全局变量\r\n                    tempFile: [], //暂存附件\r\n                },\r\n                //上传\r\n                showTip: this.dialogData.showTip, //上传提示\r\n                allowUpload: this.dialogData.allowUpload,  //是否上传判断\r\n                fileNum: 100,  //最大上传数\r\n                relatedId: this.dialogData.uuid,  //附件关联ID\r\n                //全屏富文本编辑\r\n                smallEditerContent: {},  //富文本内容（用于回传全屏富文本）\r\n                fullDialogOpen: false,  //全屏富文本弹窗控制\r\n                dialogVisible: this.taVisible, //编辑页弹窗控制\r\n                //编辑页表单数据\r\n                proclamationForm: {\r\n                    uuid: this.dialogData.uuid ? this.dialogData.uuid : \"\",\r\n                    proclamationDm: this.dialogData.fromType,\r\n                    title: this.dialogData.title ? this.dialogData.title : \"\",\r\n                    isTop: this.dialogData.isTop ? this.dialogData.isTop : \"1\",\r\n                    content: this.dialogData.content ? this.dialogData.content : \"\",\r\n                    approvalDm: this.dialogData.spType,\r\n                    tableid: this.dialogData.uuid ? this.dialogData.uuid : \"\",\r\n                },\r\n                setContent: '', //富文本内容获取\r\n                rules: {\r\n                    title: [\r\n                        {required: true, message: '请输入标题!'},\r\n                        {max: 100, message: '请输入不超过100字！'}\r\n                    ],\r\n                    content: [\r\n                        {required: true, message: '请输入内容!'},\r\n                        {max: 10000, message: '请输入不超过10000字！', trigger: 'blur'}\r\n                    ],\r\n                },\r\n                //文本编辑\r\n                uploadUrl: '', //图片上传地址\r\n                editorOption: { // 配置信息\r\n                    placeholder: \"请输入内容...\",\r\n                    modules: {\r\n                        toolbar: [\r\n                            ['bold', 'italic', 'underline', 'strike'],\r\n                            ['blockquote', 'code-block'],\r\n                            [{'header': 1}, {'header': 2}],\r\n                            [{'list': 'ordered'}, {'list': 'bullet'}],\r\n                            [{'script': 'sub'}, {'script': 'super'}],\r\n                            [{'indent': '-1'}, {'indent': '+1'}],\r\n                            [{'direction': 'rtl'}],\r\n                            [{'size': ['small', false, 'large', 'huge']}],\r\n                            [{'header': [1, 2, 3, 4, 5, 6, false]}],\r\n                            [{'font': []}],\r\n                            [{'color': []}, {'background': []}],\r\n                            [{'align': []}],\r\n                            ['clean'],\r\n                            ['link', 'image', 'video'],\r\n                        ]\r\n                        ,\r\n                        imageDrop: true,\r\n                        imageResize: {\r\n                            displayStyles: {\r\n                                backgroundColor: 'black',\r\n                                border: 'none',\r\n                                color: 'white'\r\n                            },\r\n                            modules: ['Resize', 'DisplaySize', 'Toolbar']\r\n                        }\r\n                    }\r\n                },\r\n                currentFileData: {},  //当前文本内容\r\n                fileList: this.defultFileList\r\n            }\r\n        },\r\n        created() {\r\n            //获取全屏富文本信息\r\n            this.setContent = this.proclamationForm.content\r\n            //打开弹窗时获取到已上传附件\r\n            this.fileCheck()\r\n        },\r\n        watch: {},\r\n        methods: {\r\n            //打开弹窗时获取到已上传附件\r\n            fileCheck() {\r\n                const that = this\r\n                if (this.dialogData.uuid !== '' && this.dialogData.uuid) {\r\n                    this.$$request({\r\n                        method: 'post',\r\n                        url: this.$api.upload.queryFileList,\r\n                        data: {\r\n                            relatedid: this.dialogData.uuid\r\n                        }\r\n                    }).then((res) => {\r\n                        if (res.info.length > 0) {\r\n                            res.info.forEach((item) => {\r\n                                that.tempData.tempFile.push(item)\r\n                            })\r\n                        }\r\n                    })\r\n                }\r\n            },\r\n            //打开全屏富文本编辑\r\n            openFullEditer() {\r\n                const that = this\r\n                that.smallEditerContent = this.getContent\r\n                this.fullDialogOpen = true\r\n            },\r\n            //全屏富文本编辑返回数据\r\n            fullEditerContent(fullContent) {\r\n                this.fullDialogOpen = false\r\n                if (fullContent == false) {\r\n                    this.fullDialogOpen = false\r\n                } else {\r\n                    this.setContent = fullContent\r\n                    this.fullDialogOpen = false\r\n                }\r\n            },\r\n            //弹窗关闭\r\n            handleClose() {\r\n                this.tempData = ''\r\n                this.content = ''\r\n                this.dialogVisible = false;\r\n                this.allowUplaod = false;\r\n                this.$emit(\"refreshTable\", true)\r\n            },\r\n            //提交之前进行保存加载tableid\r\n            loadData() {\r\n                this.$emit(\"refreshTable\", false)\r\n            },\r\n            //富文本回调\r\n            onEditorReady(quill) {\r\n            },\r\n            //富文本回传\r\n            onEditorChange({quill, html, text}) {\r\n                this.getContent = html\r\n                this.setContent = html\r\n            },\r\n            //旧保存方法（好使）\r\n            saveForm(proclamationForm) {\r\n                const that = this;\r\n                //弹窗不关闭暂存uuid，用于控制重复提交\r\n                const tempId = this.tempData.uuid\r\n                if (tempId) {\r\n                    this.proclamationForm.uuid = tempId;\r\n                }\r\n                //获取富文本编辑框内容赋给表单\r\n                this.proclamationForm.content = this.getContent\r\n                if (that.proclamationForm.uuid == null || that.proclamationForm.uuid == '') {\r\n                    that.$refs[proclamationForm].validate((valid) => {\r\n                        if (valid) {\r\n                            //保存\r\n                            that.$axios({\r\n                                method: 'post',\r\n                                url: that.$api.xtglApi.xtglTzggSave,\r\n                                data: that.proclamationForm\r\n                            }).then(function (res) {\r\n                                that.relatedId = res.info.uuid;\r\n                                if (res.result === 1) {\r\n                                    that.tempData.uuid = res.info.uuid  //暂存uuid\r\n                                    let fileList = that.$refs.upload.fileList; //判断是否有附件，有则上传\r\n                                    if (fileList.length > 0) {\r\n                                        let MD5Paths = [],\r\n                                            fileNames = [];\r\n                                        fileList.forEach((item) => {\r\n                                            MD5Paths.push(item.url);\r\n                                            fileNames.push(item.name);\r\n                                        })\r\n                                        let param = {\r\n                                            \"relatedid\": res.info.uuid,\r\n                                            \"MD5Path\": MD5Paths.join(','),\r\n                                            \"fileName\": fileNames.join(',')\r\n                                        }\r\n                                        that.fileList = that.$refs.upload.fileList\r\n                                        that.$$insertFileInfoBatch(param).then((resdata) => {\r\n                                            that.$message({\r\n                                                message: '操作成功',\r\n                                                type: 'success'\r\n                                            });\r\n                                            that.tempData.tempFile = that.$refs.upload.fileList;  //暂存新上传附件\r\n                                            //that.dialogFormVisible = false; //保存成功不关闭弹窗\r\n                                        }).catch(function (err) {\r\n                                            that.$message({\r\n                                                message: '关联附件列表失败',\r\n                                                type: 'warning'\r\n                                            });\r\n                                            //that.dialogFormVisible = false; //保存成功不关闭弹窗\r\n                                        })\r\n                                    } else {\r\n                                        that.$message({\r\n                                            message: res.msg,\r\n                                            type: 'success'\r\n                                        });\r\n                                        //that.dialogFormVisible = false; //保存成功不关闭弹窗\r\n                                    }\r\n                                }\r\n                                //保存完成后弹窗不关闭\r\n                                //that.handleClose()\r\n                                //that.proclamationForm = ''\r\n                            })\r\n                        } else {\r\n                            return false;\r\n                        }\r\n                    });\r\n                } else {\r\n                    //更新\r\n                    this.relatedId = that.proclamationForm.uuid\r\n                    that.$axios({\r\n                        method: 'post',\r\n                        url: that.$api.xtglApi.xtglTzggUpdate,\r\n                        data: that.proclamationForm\r\n                    }).then(function (res) {\r\n                        if (res.result === 1) {\r\n                            let fileList = that.$refs.upload.fileList //所有文件列表\r\n                            //如果有文件则进行新旧文件判断\r\n                            if (fileList.length > 0) {\r\n                                let allFile = []  //提取的所有文件信息\r\n                                let uploadFile = [] //过滤完准备上传文件\r\n                                let oldFileList = that.tempData.tempFile //旧文件列表\r\n                                //获取所有文件信息用于比较md5值过滤\r\n                                that.$$request({\r\n                                    method: 'post',\r\n                                    url: that.$api.upload.queryFileList,\r\n                                    data: {\r\n                                        relatedid: res.info.uuid\r\n                                    }\r\n                                }).then((res) => {\r\n                                    allFile = res.info\r\n                                })\r\n                                //过滤旧文件\r\n                                allFile.forEach((item) => {\r\n                                    for (let oldFile of oldFileList) {\r\n                                        if (oldFile.md5path !== item.md5path) {\r\n                                            uploadFile.push(oldFile)\r\n                                        }\r\n                                    }\r\n                                })\r\n                                //如果有新文件则进行上传处理\r\n                                if (uploadFile.length > 0) {\r\n                                    //开始上传\r\n                                    let MD5Paths = [],\r\n                                        fileNames = [];\r\n                                    uploadFile.forEach((item) => {\r\n                                        MD5Paths.push(item.url);\r\n                                        fileNames.push(item.name);\r\n                                    })\r\n                                    let param = {\r\n                                        \"relatedid\": res.info.uuid,\r\n                                        \"MD5Path\": MD5Paths.join(','),\r\n                                        \"fileName\": fileNames.join(',')\r\n                                    }\r\n                                    that.$$insertFileInfoBatch(param).then((resdata) => {\r\n                                        that.$message({\r\n                                            message: '操作成功',\r\n                                            type: 'success'\r\n                                        });\r\n                                        that.tempData.tempFile = that.$refs.upload.fileList;  //暂存新上传文件\r\n                                        //that.dialogFormVisible = false; //弹窗不关闭\r\n                                    }).catch(function (err) {\r\n                                        that.$message({\r\n                                            message: '关联附件列表失败',\r\n                                            type: 'warning'\r\n                                        });\r\n                                        //that.dialogFormVisible = false; //弹窗不关闭\r\n                                    })\r\n                                } else {\r\n                                    that.$message({\r\n                                        message: res.msg,\r\n                                        type: 'success'\r\n                                    });\r\n                                }\r\n                            } else {\r\n                                that.$message({\r\n                                    message: res.msg,\r\n                                    type: 'success'\r\n                                });\r\n                            }\r\n                            that.$message({\r\n                                message: res.msg,\r\n                                type: 'success'\r\n                            });\r\n                        } else {\r\n                            that.$message({\r\n                                message: res.msg,\r\n                                type: 'error'\r\n                            });\r\n                        }\r\n\r\n                    })\r\n                    /*弹窗不关闭*/\r\n                    //that.handleClose()\r\n                    //that.proclamationForm = ''\r\n                    //that.content = ''\r\n                }\r\n            },\r\n            //旧提交\r\n            releaseForm(proclamationForm) {\r\n                const that = this;\r\n                //弹窗不关闭暂存uuid，用于控制重复提交\r\n                const tempId = this.tempData.uuid\r\n                if (tempId) {\r\n                    this.proclamationForm.uuid = tempId;\r\n                }\r\n                this.proclamationForm.content = this.getContent //获取富文本内容\r\n                if (this.proclamationForm.uuid === null || this.proclamationForm.uuid === \"\") {\r\n                    this.$refs[proclamationForm].validate((valid) => {\r\n                        if (valid) {   //判空校验\r\n                            //先保存后提交\r\n                            this.$axios({\r\n                                method: 'post',\r\n                                url: this.$api.xtglApi.xtglTzggSave,\r\n                                data: this.proclamationForm\r\n                            }).then(function (res) {\r\n                                if (res.result === 1) {\r\n                                    return res.info.uuid\r\n                                }\r\n                            }).then((id) => {\r\n                                let fileList = that.$refs.upload.fileList;\r\n                                //有则上传附件\r\n                                if (fileList.length > 0) {\r\n                                    let MD5Paths = [],\r\n                                        fileNames = [];\r\n                                    fileList.forEach((item) => {\r\n                                        MD5Paths.push(item.url);\r\n                                        fileNames.push(item.name);\r\n                                    })\r\n                                    let param = {\r\n                                        \"relatedid\": id,\r\n                                        \"MD5Path\": MD5Paths.join(','),\r\n                                        \"fileName\": fileNames.join(',')\r\n                                    }\r\n                                    that.$$insertFileInfoBatch(param).then((resdata) => {\r\n                                        //附件上传成功则提交（注意参数）\r\n                                        that.proclamationForm.tableid = id;\r\n                                        that.proclamationForm.uuid = '';\r\n                                        that.$axios({\r\n                                            method: 'post',\r\n                                            url: that.$api.xtglApi.xtglTzggSubmit,\r\n                                            data: that.proclamationForm\r\n                                        }).then(function (res) {\r\n                                            if (res.result === 1) {\r\n                                                that.$message({\r\n                                                    message: res.msg,\r\n                                                    type: 'success'\r\n                                                });\r\n                                            }\r\n                                            that.handleClose()\r\n                                            that.proclamationForm = ''\r\n                                        }).catch(function (err) {\r\n                                            that.$alert(err, \"系统异常，请联系管理员！\", {});\r\n                                        })\r\n                                    })\r\n                                } else {\r\n                                    //无附件则直接提交\r\n                                    that.proclamationForm.tableid = id;\r\n                                    that.$axios({\r\n                                        method: 'post',\r\n                                        url: that.$api.xtglApi.xtglTzggSubmit,\r\n                                        data: that.proclamationForm\r\n                                    }).then(function (res) {\r\n                                        if (res.result === 1) {\r\n                                            that.$message({\r\n                                                message: res.msg,\r\n                                                type: 'success'\r\n                                            });\r\n                                        }\r\n                                        that.handleClose()\r\n                                        that.proclamationForm = ''\r\n                                    }).catch(function (err) {\r\n                                        that.$alert(err, \"系统异常，请联系管理员！\", {});\r\n                                    })\r\n                                }\r\n                            }).catch(function (err) {\r\n                                that.$alert(err, \"系统异常，请联系管理员！\", {});\r\n                            })\r\n                        } else {\r\n                            return false;\r\n                        }\r\n                    });\r\n                } else {\r\n                    //更新提交\r\n                    this.$axios({\r\n                        method: 'post',\r\n                        url: this.$api.xtglApi.xtglTzggUpdate,\r\n                        data: this.proclamationForm\r\n                    }).then(function (res) {\r\n                        if (res.result == 1) {\r\n                            return res.info.uuid\r\n                        }\r\n                    }).then((id) => {\r\n                        let fileList = that.$refs.upload.fileList;\r\n                        //有则上传附件\r\n                        if (fileList.length > 0) {\r\n                            let MD5Paths = [],\r\n                                fileNames = [];\r\n                            fileList.forEach((item) => {\r\n                                MD5Paths.push(item.url);\r\n                                fileNames.push(item.name);\r\n                            })\r\n                            let param = {\r\n                                \"relatedid\": id,\r\n                                \"MD5Path\": MD5Paths.join(','),\r\n                                \"fileName\": fileNames.join(',')\r\n                            }\r\n                            that.$$insertFileInfoBatch(param).then((resdata) => {\r\n                                that.proclamationForm.tableid = id;\r\n                                that.proclamationForm.uuid = '';\r\n                                that.$axios({\r\n                                    method: 'post',\r\n                                    url: that.$api.xtglApi.xtglTzggSubmit,\r\n                                    data: that.proclamationForm\r\n                                }).then(function (res) {\r\n                                    if (res.result === 1) {\r\n                                        that.$message({\r\n                                            message: res.msg,\r\n                                            type: 'success'\r\n                                        });\r\n                                    }\r\n                                    that.handleClose()\r\n                                    that.proclamationForm = ''\r\n                                }).catch(function (err) {\r\n                                    that.$alert(err, \"系统异常，请联系管理员！\", {});\r\n                                })\r\n                            })\r\n                        } else {\r\n                            //无附件则直接提交\r\n                            that.proclamationForm.tableid = id;\r\n                            that.proclamationForm.uuid = '';\r\n                            that.$axios({\r\n                                method: 'post',\r\n                                url: that.$api.xtglApi.xtglTzggSubmit,\r\n                                data: that.proclamationForm\r\n                            }).then(function (res) {\r\n                                if (res.result === 1) {\r\n                                    that.$message({\r\n                                        message: res.msg,\r\n                                        type: 'success'\r\n                                    });\r\n                                }\r\n                                that.handleClose()\r\n                                that.proclamationForm = ''\r\n                            }).catch(function (err) {\r\n                                that.$alert(err, \"系统异常，请联系管理员！\", {});\r\n                            })\r\n                        }\r\n                    }).catch(function (err) {\r\n                        that.$alert(err, \"系统异常，请联系管理员！\", {});\r\n                    })\r\n                }\r\n            },\r\n\r\n            /*=================后续优化===============*/\r\n            //保存\r\n            saveFunc(proclamationForm) {\r\n                const that = this;\r\n                const tempId = this.tempData.uuid\r\n                if (tempId) {\r\n                    this.proclamationForm.uuid = tempId;\r\n                }\r\n                this.proclamationForm.content = this.getContent\r\n                if (that.proclamationForm.uuid == null || that.proclamationForm.uuid == '') {\r\n                    that.$refs[proclamationForm].validate((valid) => {\r\n                        if (valid) {\r\n                            this.asyncSaveForm().then(resdata => {\r\n                                if (resdata.result === 1) {\r\n                                    let fileList = that.$refs.upload.fileList;\r\n                                    if (fileList.length > 0) {\r\n                                        const saveForm = that.proclamationForm\r\n                                        saveForm.uuid = resdata.info.uuid;\r\n                                        this.asyncUploadFile(saveForm).then(res => {\r\n                                            that.$message({\r\n                                                message: resdata.msg,\r\n                                                type: 'success'\r\n                                            });\r\n                                            that.tempData.uuid = resdata.info.uuid;//暂存表单不关闭时的uuid\r\n                                            that.tempFileList = that.$refs.upload.fileList;  //暂存新上传附件\r\n                                        })\r\n                                    } else {\r\n                                        that.$message({\r\n                                            message: resdata.msg,\r\n                                            type: 'success'\r\n                                        });\r\n                                    }\r\n                                } else {\r\n                                    that.$message({\r\n                                        message: resdata.msg,\r\n                                        type: 'error'\r\n                                    });\r\n                                }\r\n                            }).catch(function (err) {\r\n                                that.$alert(err, \"系统异常，请联系管理员！\", {});\r\n                            })\r\n                        } else {\r\n                            return false;\r\n                        }\r\n                    })\r\n                } else {\r\n                    //this.relatedId = that.proclamationForm.uuid\r\n                    this.asyncUpdateForm(that.proclamationForm).then(resdata => {\r\n                        if (resdata.result === 1) {\r\n                            let fileList = that.$refs.upload.fileList;\r\n                            if (fileList.length > 0) {\r\n                                const saveForm = that.proclamationForm\r\n                                saveForm.uuid = resdata.info.uuid;\r\n                                this.asyncUploadFile(saveForm).then(res => {\r\n                                    that.$message({\r\n                                        message: resdata.msg,\r\n                                        type: 'success'\r\n                                    });\r\n                                    that.tempData.uuid = resdata.info.uuid;//暂存表单不关闭时的uuid\r\n                                    that.tempFileList = that.$refs.upload.fileList\r\n                                })\r\n                            }\r\n                        } else {\r\n                            that.$message({\r\n                                message: resdata.msg,\r\n                                type: 'error'\r\n                            });\r\n                        }\r\n                    }).catch(function (err) {\r\n                        that.$alert(err, \"系统异常，请联系管理员！\", {});\r\n                    })\r\n                }\r\n            },\r\n            //提交\r\n            releaseFunc(proclamationForm) {\r\n                const that = this;\r\n                const tempId = this.tempData.uuid\r\n                if (tempId) {\r\n                    this.proclamationForm.uuid = tempId;\r\n                }\r\n                this.proclamationForm.content = this.getContent\r\n                if (this.proclamationForm.uuid === null || this.proclamationForm.uuid === \"\") {\r\n                    this.$refs[proclamationForm].validate((valid) => {\r\n                        if (valid) {\r\n                            this.asyncSaveForm().then(res => {\r\n                                that.relatedId = res.info.uuid\r\n                                that.proclamationForm.tableid = res.info.uuid\r\n                                that.proclamationForm.uuid = ''\r\n                                if (res.result === 1) {\r\n                                    this.asyncInsertFile(that.relatedId, that.proclamationForm).then((res, submitForm) => {\r\n                                        this.asyncSubmit(submitForm).then(res => {\r\n                                            if (res.result === 1) {\r\n                                                return true\r\n                                            } else {\r\n                                                that.$message({\r\n                                                    message: '操作失败',\r\n                                                    type: 'error'\r\n                                                });\r\n                                                return false\r\n                                            }\r\n                                        })\r\n                                    }).catch(function (err) {\r\n                                        that.$alert(err, \"系统异常，请联系管理员！\", {});\r\n                                    })\r\n                                    that.$message({\r\n                                        message: res.msg,\r\n                                        type: 'success'\r\n                                    });\r\n                                    that.handleClose()\r\n                                    that.proclamationForm = ''\r\n                                } else {\r\n                                    that.$message({\r\n                                        message: res.msg,\r\n                                        type: 'error'\r\n                                    });\r\n                                }\r\n                            }).catch(function (err) {\r\n                                that.$alert(err, \"系统异常，请联系管理员！\", {});\r\n                            })\r\n                        } else {\r\n                            return false\r\n                        }\r\n                    })\r\n                } else {\r\n                    this.$refs[proclamationForm].validate((valid) => {\r\n                        if (valid) {\r\n                            this.asyncUpdateForm(that.proclamationForm).then(res => {\r\n                                that.relatedId = res.info.uuid;\r\n                                that.proclamationForm.tableid = res.info.uuid\r\n                                that.proclamationForm.uuid = ''\r\n                                if (res.result === 1) {\r\n                                    this.asyncInsertFile(that.relatedId, that.proclamationForm).then(res, submitForm => {\r\n                                        this.asyncSubmit(submitForm).then(res => {\r\n                                            if (res.result === 1) {\r\n                                                return true\r\n                                            } else {\r\n                                                that.$message({\r\n                                                    message: '操作失败',\r\n                                                    type: 'error'\r\n                                                });\r\n                                                return false\r\n                                            }\r\n                                        })\r\n                                    }).catch(function (err) {\r\n                                        that.$alert(err, \"系统异常，请联系管理员！\", {});\r\n                                    })\r\n                                    that.$message({\r\n                                        message: res.msg,\r\n                                        type: 'success'\r\n                                    });\r\n                                    that.handleClose()\r\n                                    that.proclamationForm = ''\r\n                                } else {\r\n                                    that.$message({\r\n                                        message: res.msg,\r\n                                        type: 'error'\r\n                                    });\r\n                                }\r\n                            }).catch(function (err) {\r\n                                that.$alert(err, \"系统异常，请联系管理员！\", {});\r\n                            })\r\n                        }\r\n                    })\r\n                }\r\n            },\r\n            /*异步保存*/\r\n            asyncSaveForm() {\r\n                let that = this;\r\n                const promise = new Promise((resolve, reject) => {\r\n                    that.$axios({\r\n                        method: 'post',\r\n                        url: that.$api.xtglApi.xtglTzggSave,\r\n                        data: that.proclamationForm\r\n                    }).then((res) => {\r\n                        resolve(res)\r\n                    }).catch((err) => {\r\n                        reject(err)\r\n                    })\r\n                })\r\n                return promise;\r\n            },\r\n            /*异步更新*/\r\n            asyncUpdateForm(proclamationForm) {\r\n                let that = this;\r\n                const promise = new Promise((resolve, reject) => {\r\n                    that.$axios({\r\n                        method: 'post',\r\n                        url: that.$api.xtglApi.xtglTzggUpdate,\r\n                        data: proclamationForm\r\n                    }).then((res) => {\r\n                        resolve(res)\r\n                    }).catch((err) => {\r\n                        reject(err)\r\n                    })\r\n                })\r\n                return promise;\r\n            },\r\n            /*关联附件列表*/\r\n            asyncInsertFile(uuid, submitForm) {\r\n                let that = this;\r\n                const promise = new Promise((resolve, reject) => {\r\n                    let fileList = that.$refs.upload.fileList;\r\n                    if (fileList.length > 0) {\r\n                        let MD5Paths = [],\r\n                            fileNames = [];\r\n                        fileList.forEach((item) => {\r\n                            MD5Paths.push(item.url);\r\n                            fileNames.push(item.name);\r\n                        })\r\n                        let param = {\r\n                            \"relatedid\": uuid,\r\n                            \"MD5Path\": MD5Paths.join(','),\r\n                            \"fileName\": fileNames.join(',')\r\n                        }\r\n                        that.$axios({\r\n                            method: 'post',\r\n                            url: that.$api.upload.insertFileInfoBatch,\r\n                            data: param\r\n                        }).then((res) => {\r\n                            resolve(res, submitForm)\r\n                        }).catch((err) => {\r\n                            reject(err)\r\n                        })\r\n                    } else {\r\n                        alert(\"上传没进！\")\r\n                    }\r\n                })\r\n                return promise;\r\n            },\r\n            //上传附件\r\n            asyncUploadFile(saveForm) {\r\n                let that = this;\r\n                const promise = new Promise((resolve, reject) => {\r\n                    let param = {} //上传参数\r\n                    let MD5Paths = [], fileNames = []  //附件参数\r\n                    let oldFileList = that.tempFileList  //本条数据已有附件\r\n                    let newFileList = that.$refs.upload.fileList //更新时上传新附件\r\n                    //只上传新文件\r\n                    if ((oldFileList) && newFileList.length > 0) {\r\n                        let isNewFile = true\r\n                        newFileList.forEach((newFile) => {\r\n                            for (let i = 0; i < oldFileList.length; i++) {\r\n                                let oldFile = oldFileList[i]\r\n                                if (newFile.url !== oldFile.url && newFile.name !== newFile.name) {\r\n                                    isNewFile = false\r\n                                    break\r\n                                }\r\n                            }\r\n                            if (isNewFile) {\r\n                                // 不要重复添加\r\n                                if (MD5Paths.indexOf(newFile.url) == -1) {\r\n                                    MD5Paths.push(newFile.url)\r\n                                    fileNames.push(newFile.name)\r\n                                }\r\n                            }\r\n                            param = {\r\n                                \"relatedid\": saveForm.uuid,\r\n                                \"MD5Path\": MD5Paths.join(','),\r\n                                \"fileName\": fileNames.join(',')\r\n                            }\r\n                            that.$refs.upload.fileList.push(param);\r\n                        })\r\n                    } else {\r\n                        newFileList.forEach((item) => {\r\n                            MD5Paths.push(item.url);\r\n                            fileNames.push(item.name);\r\n                        })\r\n                        param = {\r\n                            \"relatedid\": saveForm.uuid,\r\n                            \"MD5Path\": MD5Paths.join(','),\r\n                            \"fileName\": fileNames.join(',')\r\n                        }\r\n                        that.$refs.upload.fileList.push(param);\r\n                    }\r\n                    that.$axios({\r\n                        method: 'post',\r\n                        url: that.$api.upload.insertFileInfoBatch,\r\n                        data: param\r\n                    }).then((res) => {\r\n                        resolve(res)\r\n                    }).catch((err) => {\r\n                        reject(err)\r\n                    })\r\n                    return promise;\r\n                })\r\n            },\r\n            // 检测是否有新附件需要上传\r\n            UploadFileCheck(res) {\r\n                const that = this\r\n                let param = {}\r\n                let MD5Paths = [], fileNames = []\r\n                let newFileList = that.$refs.upload.fileList\r\n                if (newFileList.length > 0) {\r\n                    newFileList.forEach((outerItem) => {\r\n                        let flag = true\r\n                        for (let i = 0; i < that.fileList.length; i++) {\r\n                            let innerItem = that.fileList[i]\r\n                            if (outerItem.url == innerItem.url && outerItem.name == innerItem.name) {\r\n                                flag = false\r\n                                break\r\n                            }\r\n                        }\r\n                        // 如果是新文件\r\n                        if (flag) {\r\n                            // 判断是否包含\r\n                            if (MD5Paths.indexOf(outerItem.url) == -1) {\r\n                                MD5Paths.push(outerItem.url)\r\n                                fileNames.push(outerItem.name)\r\n                            }\r\n                        }\r\n                    })\r\n                    param = {\r\n                        \"relatedid\": res.info.uuid,\r\n                        \"MD5Path\": MD5Paths.join(','),\r\n                        \"fileName\": fileNames.join(',')\r\n                    }\r\n                } else {\r\n                    that.$message({\r\n                        message: '新增成功',\r\n                        type: 'success'\r\n                    })\r\n                }\r\n                return param\r\n            },\r\n            /* asyncInsertFile(uuid,submitForm)\r\n             {\r\n                 let that = this;\r\n                 const promise = new Promise((resolve, reject) => {\r\n                     let fileList = that.$refs.upload.fileList;\r\n                     if (fileList.length > 0) {\r\n                         let MD5Paths = [],\r\n                             fileNames = [];\r\n                         fileList.forEach((item) => {\r\n                             MD5Paths.push(item.url);\r\n                             fileNames.push(item.name);\r\n                         })\r\n                         let param = {\r\n                             \"relatedid\": uuid,\r\n                             \"MD5Path\": MD5Paths.join(','),\r\n                             \"fileName\": fileNames.join(',')\r\n                         }\r\n                         that.$$insertFileInfoBatch(param).then((res) => {\r\n                             resolve(res,submitForm)\r\n                         }).catch((err) => {\r\n                             reject(err)\r\n                         })\r\n                     } else {\r\n                         resolve()\r\n                     }\r\n                 })\r\n                 return promise;\r\n             },*/\r\n            /*异步提交*/\r\n            asyncSubmit(submitForm) {\r\n                let that = this;\r\n                const promise = new Promise((resolve, reject) => {\r\n                    that.$axios({\r\n                        method: 'post',\r\n                        url: that.$api.xtglApi.xtglTzggSubmit,\r\n                        data: submitForm\r\n                    }).then((res) => {\r\n                        resolve(res)\r\n                    }).catch((err) => {\r\n                        reject(err)\r\n                    })\r\n                })\r\n                return promise;\r\n            },\r\n            /*=================后续优化===============*/\r\n\r\n        },\r\n    }\r\n</script>\r\n<style scoped>\r\n    #formPage {\r\n        margin: 10px auto;\r\n        width: 80%;\r\n        padding: 0px 22px;\r\n        box-sizing: border-box;\r\n        background-color: #fff\r\n    }\r\n\r\n</style>\r\n<style lang=\"less\">\r\n    .el-select__caret el-input__icon el-icon-arrow-up {\r\n        width: 5px\r\n    }\r\n</style>\r\n<style scoped lang=\"less\">\r\n    /*调*/\r\n    .tzggStyle /deep/ .ql-bubble .ql-picker {\r\n        height: 40px\r\n    }\r\n\r\n    #formPage {\r\n        margin: 10px auto;\r\n        width: 80%;\r\n        padding: 0px 22px;\r\n        box-sizing: border-box;\r\n        background-color: #fff\r\n    }\r\n\r\n    .tzggStyle /deep/ .el-select__caret el-input__icon el-icon-arrow-up {\r\n        width: 5px\r\n    }\r\n\r\n    .tzggStyle /deep/ .el-dialog {\r\n        display: flex;\r\n        flex-direction: column;\r\n        margin: 0 !important;\r\n        position: absolute;\r\n        top: 50%;\r\n        left: 50%;\r\n        transform: translate(-50%, -50%);\r\n        /*height:600px;*/\r\n        max-height: calc(100% - 30px);\r\n        max-width: calc(100% - 30px);\r\n    }\r\n\r\n    .tzggStyle /deep/ .el-dialog .el-dialog__body {\r\n        flex: 1;\r\n        overflow: auto;\r\n    }\r\n\r\n    .tzggStyle /deep/ .ql-container.ql-snow {\r\n        min-height: 200px;\r\n    }\r\n\r\n    .el-dialog-div {\r\n        overflow: auto;\r\n    }\r\n\r\n    .tzggStyle /deep/ .el-dialog__body::-webkit-scrollbar {\r\n        width: 2px;\r\n        height: 100%;\r\n    }\r\n\r\n    .myupload .el-dialog__body {\r\n        padding: 10px 20px;\r\n        font-size: 16px;\r\n    }\r\n\r\n    .myupload .el-dialog__body-myi {\r\n        color: #EED46F;\r\n        margin-right: 20px;\r\n    }\r\n\r\n    .mytip {\r\n        font-size: 12px;\r\n        color: #909399;\r\n        margin: 3px;\r\n    }\r\n\r\n    .tzggStyle /deep/ .editor {\r\n        line-height: normal !important;\r\n        height: 500px;\r\n    }\r\n\r\n    .ql-snow .ql-tooltip[data-mode=link]::before {\r\n        content: \"请输入链接地址:\";\r\n    }\r\n\r\n    .ql-snow .ql-tooltip.ql-editing a.ql-action::after {\r\n        border-right: 0px;\r\n        content: '保存';\r\n        padding-right: 0px;\r\n    }\r\n\r\n    .ql-snow .ql-tooltip[data-mode=video]::before {\r\n        content: \"请输入视频地址:\";\r\n    }\r\n\r\n    .ql-snow .ql-picker.ql-size .ql-picker-label::before,\r\n    .ql-snow .ql-picker.ql-size .ql-picker-item::before {\r\n        content: '14px';\r\n    }\r\n\r\n    .ql-snow .ql-picker.ql-size .ql-picker-label[data-value=small]::before,\r\n    .ql-snow .ql-picker.ql-size .ql-picker-item[data-value=small]::before {\r\n        content: '10px';\r\n    }\r\n\r\n    .ql-snow .ql-picker.ql-size .ql-picker-label[data-value=large]::before,\r\n    .ql-snow .ql-picker.ql-size .ql-picker-item[data-value=large]::before {\r\n        content: '18px';\r\n    }\r\n\r\n    .ql-snow .ql-picker.ql-size .ql-picker-label[data-value=huge]::before,\r\n    .ql-snow .ql-picker.ql-size .ql-picker-item[data-value=huge]::before {\r\n        content: '32px';\r\n    }\r\n\r\n    .ql-snow .ql-picker.ql-size .ql-picker-label::before, .ql-snow .ql-picker.ql-size .ql-picker-item::before {\r\n        content: '文本';\r\n    }\r\n\r\n    .ql-snow .ql-picker.ql-header .ql-picker-label[data-value=\"1\"]::before,\r\n    .ql-snow .ql-picker.ql-header .ql-picker-item[data-value=\"1\"]::before {\r\n        content: '标题1';\r\n    }\r\n\r\n    .ql-snow .ql-picker.ql-header .ql-picker-label[data-value=\"2\"]::before,\r\n    .ql-snow .ql-picker.ql-header .ql-picker-item[data-value=\"2\"]::before {\r\n        content: '标题2';\r\n    }\r\n\r\n    .ql-snow .ql-picker.ql-header .ql-picker-label[data-value=\"3\"]::before,\r\n    .ql-snow .ql-picker.ql-header .ql-picker-item[data-value=\"3\"]::before {\r\n        content: '标题3';\r\n    }\r\n\r\n    .ql-snow .ql-picker.ql-header .ql-picker-label[data-value=\"4\"]::before,\r\n    .ql-snow .ql-picker.ql-header .ql-picker-item[data-value=\"4\"]::before {\r\n        content: '标题4';\r\n    }\r\n</style>\r\n"]}]}