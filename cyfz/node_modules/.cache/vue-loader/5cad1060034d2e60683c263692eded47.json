{"remainingRequest":"D:\\vueWorkspace\\cyfz\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\vueWorkspace\\cyfz\\src\\views\\xdqgl\\cgfb2.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\vueWorkspace\\cyfz\\src\\views\\xdqgl\\cgfb2.vue","mtime":1571403740178},{"path":"D:\\vueWorkspace\\cyfz\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\vueWorkspace\\cyfz\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\vueWorkspace\\cyfz\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\vueWorkspace\\cyfz\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport TableList from \"@/components/grid/TableList\";\nimport toolbar from \"@/components/toolbar/myToolbar\";\nimport createbar from \"@/views/xtgl/myToolbar/tzggCreOperation\";\nimport _ from 'lodash'\nexport default {\n    name: \"cgfb2\",\n    components: {\n        TableList,\n        toolbar,\n        createbar\n    },\n    data() {\n        return {\n            searchTip: '',\n            packageStatus: this.$packageStatus,\n            createOrgNameList: [],//查询页部门列表\n            stateList: [\n                {\n                    caption: '未发布',\n                    value: 0,\n                },\n                {\n                    caption: '审核中',\n                    value: 2,\n                    formatter: (row) => {\n                        return this.getState(row.value)\n                    }\n                },\n                {\n                    value: 9,\n                    caption: '已发布',\n                },\n            ],\n            xjDialogVisible: false,\n            dialogData: {},\n            checkedData: [], //全选框\n            uuids: [],\n            //工具栏\n            toolbarItem:[\n                {\n                    type:\"primary\",\n                    title:\"新建\",\n                    icon:\"el-icon-edit-outline\",\n                    disabled:false,\n                    click:\"create\"\n                },\n                {\n                    type:\"primary\",\n                    title:\"修改\",\n                    icon:\"el-icon-edit\",\n                    disabled:false,\n                    click:\"update\"\n                },\n                {\n                    type:\"primary\",\n                    title:\"删除\",\n                    icon:\"el-icon-delete\",\n                    disabled:false,\n                    click:\"delete\"\n                },\n            ],\n            //查询\n            searchParams: {\n                title: '',\n                createUserName: '',\n                createTimeStart: '',\n                createTimeEnd: '',\n                state: '',\n                createOrg:'',\n                timeStamp: [],\n            },\n            //分页\n            pagination: {\n                currentPage: 1,\n                pageSize: 10,\n                position: 'center',\n                pageSizes: [10, 50, 100],//默认每页显示多少条\n                layout: 'sizes ,prev, pager, next, jumper'\n            },\n            //表单字段\n            columns: [\n                {\n                    label: '标题',\n                    prop: 'title',\n                    width: '180',\n                    showOverflowTooltip: true,\n                    template: true\n                },\n                {\n                    label: '发布人',\n                    prop: 'createUserName',\n                },\n                {\n                    label: '发布部门',\n                    prop: 'createOrgName',\n                },\n                {\n                    label: '发布日期',\n                    prop: 'createTime',\n                    formatter(row) {\n                        return new Date(row.createTime).Format(\"yyyy-MM-dd hh:mm:ss\")\n                    },\n                },\n                {\n                    label: '发布状态',\n                    prop: 'stateName',\n                    formatter: (row) => {\n                        return this.getCaption(row.state)\n                    }\n                },\n                {\n                    label:'是否置顶',\n                    prop:'isTop',\n                    template: true\n                }\n            ],\n            //调用组件传输返回页面数据\n            getDataWay: {\n                dataType: \"url\",\n                data: this.$api.xtglApi.xtglTzggQuery,\n                type: 'post',\n                param: {proclamationDm: '0010'}\n            },\n        }\n    },\n    methods: {\n        //查询时间处理\n        timeSet(timeStamp){\n            if(timeStamp[0] !== '' && timeStamp[1] !== ''){\n                this.searchParams.createTimeStart = timeStamp[0]\n                this.searchParams.createTimeEnd = timeStamp[1]\n            }\n        },\n        //状态初始化\n        getCaption(data){\n            if(data <= 1){\n                return '未发布'\n            }else if(data > 1 && data < 9){\n                return '审核中'\n            }else if(data == 9){\n                return '已发布'\n            }\n        },\n        //弹窗初始化\n        dialogInit() {\n            this.xjDialogVisible = true\n        },\n        //页面刷新\n        refreshTable(refresh) {\n            this.xjDialogVisible = false\n            if (refresh == true) {\n                this.checkedData = [];\n                this.$refs.table.loadData()\n            }\n        },\n        //点击工具栏跳转\n        toolbarClick(item, event) {\n            const that = this;\n            //const fromType = '0001'\n            if (item.title == '新建') {\n                this.dialogData = {};\n                that.dialogData.showTip = true;\n                that.dialogData.allowUpload = false;\n                that.dialogData.fromType = '0010';\n                that.dialogData.spType = '010010';\n                this.xjDialogVisible = true;\n            }\n            if (item.title == '修改') {\n                /*修改初始化*/\n                if (this.checkedData.length == 1) {\n                    if (this.checkedData[0].state > 1 && this.checkedData[0].state < 9) {\n                        this.$alert('审核状态中无法修改！', '提示', {\n                            type: 'warning'\n                        })\n                    } else if(this.checkedData[0].state == 9){\n                        this.$alert('已发布内容无法修改！', '提示', {\n                            type: 'warning'\n                        })\n                    } else if(this.checkedData.editFlag===0){\n                        this.$alert('当前登录人不具有修改权限！', '提示', {\n                            type: 'warning'\n                        })\n                    } else {\n                        that.dialogData = this.checkedData[0];\n                        that.dialogData.showTip = false;\n                        that.dialogData.allowUpload = true;\n                        that.dialogData.fromType = '0010';\n                        that.dialogData.spType = '010010';\n                        this.xjDialogVisible = true;\n                    }\n                } else {\n                    this.checkedData = []\n                    this.$refs.table.loadData()\n                    this.$alert('请选中一条数据进行修改！', '提示', {\n                        type: 'error'\n                    })\n                }\n            }\n            if (item.title == '删除') {\n                if (that.checkedData.length < 1) {\n                    that.$alert('请选择至少一条数据进行删除！', '提示', {\n                        type: 'warning'\n                    })\n                } else if (that.checkedData.length >= 1) {\n                    let isDel = true\n                    if (isDel) {\n                        this.checkedData.forEach((item) => {\n                            if (item.state > 1 && item.state < 9) {\n                                this.$alert('审核状态中无法删除！', '提示', {\n                                    type: 'warning'\n                                })\n                                isDel = false\n                            } else if (item.state == 9) {\n                                this.$alert('已发布内容无法删除！', '提示', {\n                                    type: 'warning'\n                                })\n                                isDel = false\n                            }else if(this.checkedData.editFlag===0){\n                                this.$alert('当前登录人不具有修改权限！', '提示', {\n                                    type: 'warning'\n                                })\n                                isDel = false\n                            }\n                        })\n                    }\n                    if (isDel) {\n                        let ids = ''\n                        this.checkedData.forEach((item) => {\n                            ids += (item.uuid + ',')\n                        })\n                        that.$confirm('确认删除?', '提示', {\n                            confirmButtonText: '确定',\n                            cancelButtonText: '取消',\n                            type: 'warning'\n                        }).then(() => {\n                            that.$axios({\n                                method: 'post',\n                                url: that.$api.xtglApi.xtglTzggDelete,\n                                data: {\n                                    uuid: ids\n                                },\n                            }).then(\n                                function (res) {\n                                    if (res.result == 1) {\n                                        that.$message({\n                                            message: res.msg,\n                                            type: 'success'\n                                        });\n                                        that.checkedData = [];\n                                        that.$refs.table.loadData()\n                                    } else {\n                                        that.$message({\n                                            type: 'warning',\n                                            message: '删除失败!'\n                                        });\n                                    }\n                                })\n                        }).catch(() => {\n                        });\n\n                    }\n\n                }\n            }\n        },\n        //点击标题跳转页面方法\n        selectGg(data) {\n            this.$router.push({\n                name: \"detail\",\n                query: {\n                    uuid: data.uuid,\n                    moduleCode: 'cgfb',\n                }\n            })\n        },\n        //查询---防抖函数，限制后台访问频率\n        searchBtn: _.debounce(function () {\n            const that = this;\n            if (this.searchParams.title.indexOf('?') === -1) {\n                this.searchTip = ''\n            }\n            let param = {\n                title: that.searchParams.title,\n            }\n            that.$set(that.getDataWay.params = param);\n            that.$refs.table.loadData(param);\n        }, 500),\n    },\n    watch: {\n        'searchParams.title': {\n            handler(newParams, oldParams) {\n                this.searchTip = '正在输入...'\n            },\n            deep: true,\n            immediate: true\n        },\n    },\n    created(){\n        this.searchTip = '' //首次进入清除提示\n    },\n    mounted() {\n        const that = this\n        /*this.$$request({\n            method: 'post',\n            url: this.$api.xtglApi.xtglGetOrgList,\n            data:{},\n        }).then(function (res) {\n            that.createOrgNameList = res.info;\n        })*/\n    },\n    //加载页面前获取Mock数据\n    /*beforeCreate: function () {\n    var that = this\n    this.$$request({\n        url: \"http://mockjs.com/api/tzgg\",\n        data: {type: 'top', key: '123456'}\n    }).then(function (res) {\n        that.getDataWay.data = res.info.list  //查询请求\n        that.$refs.table.loadData()  //数据加载\n    })\n}*/\n}\n",{"version":3,"sources":["cgfb2.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyfile":"cgfb2.vue","sourceRoot":"src/views/xdqgl","sourcesContent":["<template>\r\n    <div class=\"rightMain\">\r\n        <!--工具栏-->\r\n        <toolbar v-if=\"packageStatus === 'zwww'\" position=top  :toolbarItem=\"toolbarItem\" @toolbarClick=\"toolbarClick\" center></toolbar>\r\n        <!--工具栏-新建-->\r\n        <createbar key=\"cgfb\" v-if=\"xjDialogVisible\" :checkedData=\"checkedData\" :dialogData=\"dialogData\" :taVisible=\"xjDialogVisible\" @refreshTable=\"refreshTable($event)\"></createbar>\r\n        <screenFilter  :searchParams=\"searchParams\">\r\n            <template slot=\"slot_two\">\r\n                <span style=\"font-size:8px;margin-right:14px;color: #B2B7B7;\">{{searchTip}}</span>\r\n                <el-input class=\"search-name\" size=\"small\" v-model=\"searchParams.title\" placeholder=\"请输入标题名称\"\r\n                          prefix-icon=\"el-icon-search\" @input=\"searchBtn\">\r\n                </el-input>\r\n            </template>\r\n            <template slot=\"slot_search\">\r\n                <el-form-item label=\"状态\">\r\n                    <el-select v-model=\"searchParams.state\" clearable placeholder=\"选择状态\" style=\"width: 100%\">\r\n                        <el-option v-for=\"item of this.stateList\" :label=\"item.caption\" :value=\"item.value\">\r\n                            {{item.caption}}\r\n                        </el-option>\r\n                    </el-select>\r\n                </el-form-item>\r\n                <el-form-item label=\"发布部门\">\r\n                    <el-select  v-model=\"searchParams.createOrg\" placeholder=\"请选择所属方向\">\r\n                        <el-option\r\n                                v-for=\"item in createOrgNameList\"\r\n                                :key=\"item.id\"\r\n                                :label=\"item.name\"\r\n                                :value=\"item.id\">\r\n                        </el-option>\r\n                    </el-select>\r\n                </el-form-item>\r\n                <el-form-item label=\"日期\">\r\n                    <div class=\"block\">\r\n                        <el-date-picker style=\"width:384px\"\r\n                                        v-model=\"searchParams.timeStamp\"\r\n                                        type=\"daterange\"\r\n                                        range-separator=\"至\"\r\n                                        start-placeholder=\"开始日期\"\r\n                                        end-placeholder=\"结束日期\"\r\n                                        value-format=\"yyyy-MM-dd hh:mm:ss\"\r\n                                        @change=\"timeSet\"\r\n                        >\r\n                        </el-date-picker>\r\n                    </div>\r\n                </el-form-item>\r\n            </template>\r\n        </screenFilter>\r\n        <tableList ref=\"table\"\r\n                   selection\r\n                   index\r\n                   style=\"border-top: none;text-align: center\"\r\n                   :getDataWay=\"getDataWay\"\r\n                   :columns=\"columns\"\r\n                   :pagination = \"pagination\"\r\n                   :checkedData='checkedData'\r\n        >\r\n            <el-table-column label=\"标题\" slot=\"title\" show-overflow-tooltip>\r\n                <template slot-scope=\"scope\">\r\n                    <el-link :underline=\"false\" @click=\"selectGg(scope.row)\" class=\"a-link\">\r\n                        {{scope.row.title}}\r\n                    </el-link>\r\n                </template>\r\n            </el-table-column>\r\n            <el-table-column label=\"是否置顶\" slot=\"isTop\" show-overflow-tooltip>\r\n                <template slot-scope=\"scope\">\r\n                    <span  v-if=\"scope.row.isTop=='1'\">置顶</span>\r\n                </template>\r\n            </el-table-column>\r\n\r\n        </tableList>\r\n    </div>\r\n</template>\r\n<script>\r\n    import TableList from \"@/components/grid/TableList\";\r\n    import toolbar from \"@/components/toolbar/myToolbar\";\r\n    import createbar from \"@/views/xtgl/myToolbar/tzggCreOperation\";\r\n    import _ from 'lodash'\r\n    export default {\r\n        name: \"cgfb2\",\r\n        components: {\r\n            TableList,\r\n            toolbar,\r\n            createbar\r\n        },\r\n        data() {\r\n            return {\r\n                searchTip: '',\r\n                packageStatus: this.$packageStatus,\r\n                createOrgNameList: [],//查询页部门列表\r\n                stateList: [\r\n                    {\r\n                        caption: '未发布',\r\n                        value: 0,\r\n                    },\r\n                    {\r\n                        caption: '审核中',\r\n                        value: 2,\r\n                        formatter: (row) => {\r\n                            return this.getState(row.value)\r\n                        }\r\n                    },\r\n                    {\r\n                        value: 9,\r\n                        caption: '已发布',\r\n                    },\r\n                ],\r\n                xjDialogVisible: false,\r\n                dialogData: {},\r\n                checkedData: [], //全选框\r\n                uuids: [],\r\n                //工具栏\r\n                toolbarItem:[\r\n                    {\r\n                        type:\"primary\",\r\n                        title:\"新建\",\r\n                        icon:\"el-icon-edit-outline\",\r\n                        disabled:false,\r\n                        click:\"create\"\r\n                    },\r\n                    {\r\n                        type:\"primary\",\r\n                        title:\"修改\",\r\n                        icon:\"el-icon-edit\",\r\n                        disabled:false,\r\n                        click:\"update\"\r\n                    },\r\n                    {\r\n                        type:\"primary\",\r\n                        title:\"删除\",\r\n                        icon:\"el-icon-delete\",\r\n                        disabled:false,\r\n                        click:\"delete\"\r\n                    },\r\n                ],\r\n                //查询\r\n                searchParams: {\r\n                    title: '',\r\n                    createUserName: '',\r\n                    createTimeStart: '',\r\n                    createTimeEnd: '',\r\n                    state: '',\r\n                    createOrg:'',\r\n                    timeStamp: [],\r\n                },\r\n                //分页\r\n                pagination: {\r\n                    currentPage: 1,\r\n                    pageSize: 10,\r\n                    position: 'center',\r\n                    pageSizes: [10, 50, 100],//默认每页显示多少条\r\n                    layout: 'sizes ,prev, pager, next, jumper'\r\n                },\r\n                //表单字段\r\n                columns: [\r\n                    {\r\n                        label: '标题',\r\n                        prop: 'title',\r\n                        width: '180',\r\n                        showOverflowTooltip: true,\r\n                        template: true\r\n                    },\r\n                    {\r\n                        label: '发布人',\r\n                        prop: 'createUserName',\r\n                    },\r\n                    {\r\n                        label: '发布部门',\r\n                        prop: 'createOrgName',\r\n                    },\r\n                    {\r\n                        label: '发布日期',\r\n                        prop: 'createTime',\r\n                        formatter(row) {\r\n                            return new Date(row.createTime).Format(\"yyyy-MM-dd hh:mm:ss\")\r\n                        },\r\n                    },\r\n                    {\r\n                        label: '发布状态',\r\n                        prop: 'stateName',\r\n                        formatter: (row) => {\r\n                            return this.getCaption(row.state)\r\n                        }\r\n                    },\r\n                    {\r\n                        label:'是否置顶',\r\n                        prop:'isTop',\r\n                        template: true\r\n                    }\r\n                ],\r\n                //调用组件传输返回页面数据\r\n                getDataWay: {\r\n                    dataType: \"url\",\r\n                    data: this.$api.xtglApi.xtglTzggQuery,\r\n                    type: 'post',\r\n                    param: {proclamationDm: '0010'}\r\n                },\r\n            }\r\n        },\r\n        methods: {\r\n            //查询时间处理\r\n            timeSet(timeStamp){\r\n                if(timeStamp[0] !== '' && timeStamp[1] !== ''){\r\n                    this.searchParams.createTimeStart = timeStamp[0]\r\n                    this.searchParams.createTimeEnd = timeStamp[1]\r\n                }\r\n            },\r\n            //状态初始化\r\n            getCaption(data){\r\n                if(data <= 1){\r\n                    return '未发布'\r\n                }else if(data > 1 && data < 9){\r\n                    return '审核中'\r\n                }else if(data == 9){\r\n                    return '已发布'\r\n                }\r\n            },\r\n            //弹窗初始化\r\n            dialogInit() {\r\n                this.xjDialogVisible = true\r\n            },\r\n            //页面刷新\r\n            refreshTable(refresh) {\r\n                this.xjDialogVisible = false\r\n                if (refresh == true) {\r\n                    this.checkedData = [];\r\n                    this.$refs.table.loadData()\r\n                }\r\n            },\r\n            //点击工具栏跳转\r\n            toolbarClick(item, event) {\r\n                const that = this;\r\n                //const fromType = '0001'\r\n                if (item.title == '新建') {\r\n                    this.dialogData = {};\r\n                    that.dialogData.showTip = true;\r\n                    that.dialogData.allowUpload = false;\r\n                    that.dialogData.fromType = '0010';\r\n                    that.dialogData.spType = '010010';\r\n                    this.xjDialogVisible = true;\r\n                }\r\n                if (item.title == '修改') {\r\n                    /*修改初始化*/\r\n                    if (this.checkedData.length == 1) {\r\n                        if (this.checkedData[0].state > 1 && this.checkedData[0].state < 9) {\r\n                            this.$alert('审核状态中无法修改！', '提示', {\r\n                                type: 'warning'\r\n                            })\r\n                        } else if(this.checkedData[0].state == 9){\r\n                            this.$alert('已发布内容无法修改！', '提示', {\r\n                                type: 'warning'\r\n                            })\r\n                        } else if(this.checkedData.editFlag===0){\r\n                            this.$alert('当前登录人不具有修改权限！', '提示', {\r\n                                type: 'warning'\r\n                            })\r\n                        } else {\r\n                            that.dialogData = this.checkedData[0];\r\n                            that.dialogData.showTip = false;\r\n                            that.dialogData.allowUpload = true;\r\n                            that.dialogData.fromType = '0010';\r\n                            that.dialogData.spType = '010010';\r\n                            this.xjDialogVisible = true;\r\n                        }\r\n                    } else {\r\n                        this.checkedData = []\r\n                        this.$refs.table.loadData()\r\n                        this.$alert('请选中一条数据进行修改！', '提示', {\r\n                            type: 'error'\r\n                        })\r\n                    }\r\n                }\r\n                if (item.title == '删除') {\r\n                    if (that.checkedData.length < 1) {\r\n                        that.$alert('请选择至少一条数据进行删除！', '提示', {\r\n                            type: 'warning'\r\n                        })\r\n                    } else if (that.checkedData.length >= 1) {\r\n                        let isDel = true\r\n                        if (isDel) {\r\n                            this.checkedData.forEach((item) => {\r\n                                if (item.state > 1 && item.state < 9) {\r\n                                    this.$alert('审核状态中无法删除！', '提示', {\r\n                                        type: 'warning'\r\n                                    })\r\n                                    isDel = false\r\n                                } else if (item.state == 9) {\r\n                                    this.$alert('已发布内容无法删除！', '提示', {\r\n                                        type: 'warning'\r\n                                    })\r\n                                    isDel = false\r\n                                }else if(this.checkedData.editFlag===0){\r\n                                    this.$alert('当前登录人不具有修改权限！', '提示', {\r\n                                        type: 'warning'\r\n                                    })\r\n                                    isDel = false\r\n                                }\r\n                            })\r\n                        }\r\n                        if (isDel) {\r\n                            let ids = ''\r\n                            this.checkedData.forEach((item) => {\r\n                                ids += (item.uuid + ',')\r\n                            })\r\n                            that.$confirm('确认删除?', '提示', {\r\n                                confirmButtonText: '确定',\r\n                                cancelButtonText: '取消',\r\n                                type: 'warning'\r\n                            }).then(() => {\r\n                                that.$axios({\r\n                                    method: 'post',\r\n                                    url: that.$api.xtglApi.xtglTzggDelete,\r\n                                    data: {\r\n                                        uuid: ids\r\n                                    },\r\n                                }).then(\r\n                                    function (res) {\r\n                                        if (res.result == 1) {\r\n                                            that.$message({\r\n                                                message: res.msg,\r\n                                                type: 'success'\r\n                                            });\r\n                                            that.checkedData = [];\r\n                                            that.$refs.table.loadData()\r\n                                        } else {\r\n                                            that.$message({\r\n                                                type: 'warning',\r\n                                                message: '删除失败!'\r\n                                            });\r\n                                        }\r\n                                    })\r\n                            }).catch(() => {\r\n                            });\r\n\r\n                        }\r\n\r\n                    }\r\n                }\r\n            },\r\n            //点击标题跳转页面方法\r\n            selectGg(data) {\r\n                this.$router.push({\r\n                    name: \"detail\",\r\n                    query: {\r\n                        uuid: data.uuid,\r\n                        moduleCode: 'cgfb',\r\n                    }\r\n                })\r\n            },\r\n            //查询---防抖函数，限制后台访问频率\r\n            searchBtn: _.debounce(function () {\r\n                const that = this;\r\n                if (this.searchParams.title.indexOf('?') === -1) {\r\n                    this.searchTip = ''\r\n                }\r\n                let param = {\r\n                    title: that.searchParams.title,\r\n                }\r\n                that.$set(that.getDataWay.params = param);\r\n                that.$refs.table.loadData(param);\r\n            }, 500),\r\n        },\r\n        watch: {\r\n            'searchParams.title': {\r\n                handler(newParams, oldParams) {\r\n                    this.searchTip = '正在输入...'\r\n                },\r\n                deep: true,\r\n                immediate: true\r\n            },\r\n        },\r\n        created(){\r\n            this.searchTip = '' //首次进入清除提示\r\n        },\r\n        mounted() {\r\n            const that = this\r\n            /*this.$$request({\r\n                method: 'post',\r\n                url: this.$api.xtglApi.xtglGetOrgList,\r\n                data:{},\r\n            }).then(function (res) {\r\n                that.createOrgNameList = res.info;\r\n            })*/\r\n        },\r\n        //加载页面前获取Mock数据\r\n        /*beforeCreate: function () {\r\n        var that = this\r\n        this.$$request({\r\n            url: \"http://mockjs.com/api/tzgg\",\r\n            data: {type: 'top', key: '123456'}\r\n        }).then(function (res) {\r\n            that.getDataWay.data = res.info.list  //查询请求\r\n            that.$refs.table.loadData()  //数据加载\r\n        })\r\n    }*/\r\n    }\r\n</script>\r\n<style scoped>\r\n    .rightMain {\r\n        margin: 10px auto;\r\n        width: 93%;\r\n        /*margin-right: 90px;\r\n        align:0 auto;\r\n        padding-left: 10px;\r\n        padding-top: 20px;\r\n        min-width: 150px;*/\r\n    }\r\n\r\n    .transition-box {\r\n        margin-bottom: 10px;\r\n        width: 100%;\r\n        height: 300px;\r\n        border-radius: 4px;\r\n        text-align: center;\r\n        color: #fff;\r\n        padding: 40px 20px;\r\n        box-sizing: border-box;\r\n        margin-right: 20px;\r\n    }\r\n</style>"]}]}