{"remainingRequest":"D:\\vueWorkspace\\cyfz\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\vueWorkspace\\cyfz\\src\\components\\echarts\\Map.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\vueWorkspace\\cyfz\\src\\components\\echarts\\Map.vue","mtime":1569478925260},{"path":"D:\\vueWorkspace\\cyfz\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\vueWorkspace\\cyfz\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\vueWorkspace\\cyfz\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\vueWorkspace\\cyfz\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n\nimport echarts from 'echarts'\nimport china from 'echarts/map/json/china.json'\necharts.registerMap('china', china)\n\nexport default {\n    name: 'Map',\n    props: {\n        Data: {\n            url: String,\n            color: { //地图的颜色范围\n                type: Array,\n                default: ['#0eb93d', '#00f4b3'], //深到浅\n            },\n            name: String,//标题名字\n            download: { //是否显示下载按钮\n                type: Boolean,\n                default: false\n            },\n            params: {\n                type: String,\n                default:'',\n            }\n        }\n    },\n    data() {\n        return {\n            data: [],\n            max: 1500,\n            param: this.Data.params,//传过来的业务类型参数\n            color: this.Data.color,//传递过来的颜色\n            name: this.Data.name,//图标题\n            download: this.Data.download,//是否下载按钮\n        }\n    },\n    mounted() {\n        this.getData();\n    },\n    methods: {\n        //获取数据\n        getData(){\n            let that = this;\n            this.$$request({\n                url: this.Data.url,\n                data: {\n                    mapType: this.param,\n                }\n            }).then(function (res) {\n                that.data = res.info.data;\n                that.max = res.info.maxCount;\n                let resultData = {\n                    data:res.info.data,\n                    totalCount: res.info.totalCount,\n                }\n                that.$emit(\"sendData\", resultData);\n            }).then(function () {\n                that.drawLine();\n            })\n        },\n        //绘制图表\n        drawLine() {\n            // 基于准备好的dom，初始化echarts实例\n            let id = \"echartBar\" + Math.random() * 1000;\n            this.$el.setAttribute(\"id\", id);\n            let myChartContainer = document.getElementById(id);\n            let myChartChina = echarts.init(myChartContainer);\n            // 绘制图表\n            let optionMap = { //地图配置项\n                tooltip: {},//鼠标悬停提示是否显示\n                title: {\n                    text: this.name,\n                    left: 'center',\n                    top: [10],\n                },\n                toolbox: {\n                    show: this.download,\n                    top: [5],\n                    right: [20],\n                    feature: {\n                        saveAsImage: {}\n                    }\n                },\n                // legend: {   //定位\n                //     orient: 'vertical',\n                //     left: 'left',\n                //     data: ['']\n                // },\n                visualMap: {\n                    min: 0,\n                    max: this.max,\n                    left: '5%',\n                    top: '50%',\n                    text: ['高', '低'],\n                    calculable: true,\n                    color: this.color,\n                    itemWidth: [10],\n                    itemHeight: [100],\n                },\n                selectedMode: 'single',\n                series: [\n                    {\n                        name: '',\n                        type:'map',\n                        // type: 'scatter',\n                        mapType: 'china',\n                        itemStyle: {\n                            normal: {\n                                borderColor: 'rgba(0, 0, 0, 0.2)'\n                            },\n                            emphasis: {\n                                shadowOffsetX: 10,\n                                shadowOffsetY: 10,\n                                shadowBlur: 20,\n                                borderWidth: 0,\n                                shadowColor: 'rgba(0, 0, 0, 0.5)'\n                            }\n                        },\n                        showLegendSymbol: true,\n                        label: {\n                            position: [4, 5],\n                            show: true,\n                            fontSize: 8,\n                            color: '#888888',\n                            align: 'center'\n                        },\n                        data: this.data,//展示的地图数据\n                    }\n                ]\n            };\n            myChartChina.setOption(optionMap);\n            window.onresize = function () {\n                myChartChina.resize();\n            }\n        },\n    },\n    watch: {\n        'Data.params':function (val) {\n            this.param = val;\n            this.name = this.Data.name;\n            this.getData();\n        },\n    },\n}\n",{"version":3,"sources":["Map.vue"],"names":[],"mappings":";;;;;;;;AAQA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Map.vue","sourceRoot":"src/components/echarts","sourcesContent":["<!--地图组件-->\r\n<template>\r\n    <div class=\"chart_map\">\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import echarts from 'echarts'\r\n    import china from 'echarts/map/json/china.json'\r\n    echarts.registerMap('china', china)\r\n\r\n    export default {\r\n        name: 'Map',\r\n        props: {\r\n            Data: {\r\n                url: String,\r\n                color: { //地图的颜色范围\r\n                    type: Array,\r\n                    default: ['#0eb93d', '#00f4b3'], //深到浅\r\n                },\r\n                name: String,//标题名字\r\n                download: { //是否显示下载按钮\r\n                    type: Boolean,\r\n                    default: false\r\n                },\r\n                params: {\r\n                    type: String,\r\n                    default:'',\r\n                }\r\n            }\r\n        },\r\n        data() {\r\n            return {\r\n                data: [],\r\n                max: 1500,\r\n                param: this.Data.params,//传过来的业务类型参数\r\n                color: this.Data.color,//传递过来的颜色\r\n                name: this.Data.name,//图标题\r\n                download: this.Data.download,//是否下载按钮\r\n            }\r\n        },\r\n        mounted() {\r\n            this.getData();\r\n        },\r\n        methods: {\r\n            //获取数据\r\n            getData(){\r\n                let that = this;\r\n                this.$$request({\r\n                    url: this.Data.url,\r\n                    data: {\r\n                        mapType: this.param,\r\n                    }\r\n                }).then(function (res) {\r\n                    that.data = res.info.data;\r\n                    that.max = res.info.maxCount;\r\n                    let resultData = {\r\n                        data:res.info.data,\r\n                        totalCount: res.info.totalCount,\r\n                    }\r\n                    that.$emit(\"sendData\", resultData);\r\n                }).then(function () {\r\n                    that.drawLine();\r\n                })\r\n            },\r\n            //绘制图表\r\n            drawLine() {\r\n                // 基于准备好的dom，初始化echarts实例\r\n                let id = \"echartBar\" + Math.random() * 1000;\r\n                this.$el.setAttribute(\"id\", id);\r\n                let myChartContainer = document.getElementById(id);\r\n                let myChartChina = echarts.init(myChartContainer);\r\n                // 绘制图表\r\n                let optionMap = { //地图配置项\r\n                    tooltip: {},//鼠标悬停提示是否显示\r\n                    title: {\r\n                        text: this.name,\r\n                        left: 'center',\r\n                        top: [10],\r\n                    },\r\n                    toolbox: {\r\n                        show: this.download,\r\n                        top: [5],\r\n                        right: [20],\r\n                        feature: {\r\n                            saveAsImage: {}\r\n                        }\r\n                    },\r\n                    // legend: {   //定位\r\n                    //     orient: 'vertical',\r\n                    //     left: 'left',\r\n                    //     data: ['']\r\n                    // },\r\n                    visualMap: {\r\n                        min: 0,\r\n                        max: this.max,\r\n                        left: '5%',\r\n                        top: '50%',\r\n                        text: ['高', '低'],\r\n                        calculable: true,\r\n                        color: this.color,\r\n                        itemWidth: [10],\r\n                        itemHeight: [100],\r\n                    },\r\n                    selectedMode: 'single',\r\n                    series: [\r\n                        {\r\n                            name: '',\r\n                            type:'map',\r\n                            // type: 'scatter',\r\n                            mapType: 'china',\r\n                            itemStyle: {\r\n                                normal: {\r\n                                    borderColor: 'rgba(0, 0, 0, 0.2)'\r\n                                },\r\n                                emphasis: {\r\n                                    shadowOffsetX: 10,\r\n                                    shadowOffsetY: 10,\r\n                                    shadowBlur: 20,\r\n                                    borderWidth: 0,\r\n                                    shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n                                }\r\n                            },\r\n                            showLegendSymbol: true,\r\n                            label: {\r\n                                position: [4, 5],\r\n                                show: true,\r\n                                fontSize: 8,\r\n                                color: '#888888',\r\n                                align: 'center'\r\n                            },\r\n                            data: this.data,//展示的地图数据\r\n                        }\r\n                    ]\r\n                };\r\n                myChartChina.setOption(optionMap);\r\n                window.onresize = function () {\r\n                    myChartChina.resize();\r\n                }\r\n            },\r\n        },\r\n        watch: {\r\n            'Data.params':function (val) {\r\n                this.param = val;\r\n                this.name = this.Data.name;\r\n                this.getData();\r\n            },\r\n        },\r\n    }\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n    .chart_map {\r\n        width: 100%;\r\n        height: 100%;\r\n        margin: 0 auto;\r\n    }\r\n</style>\r\n"]}]}