{"remainingRequest":"D:\\vueWorkspace\\cyfz\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\vueWorkspace\\cyfz\\src\\components\\echarts\\LineChart.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\vueWorkspace\\cyfz\\src\\components\\echarts\\LineChart.vue","mtime":1570327663879},{"path":"D:\\vueWorkspace\\cyfz\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\vueWorkspace\\cyfz\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\vueWorkspace\\cyfz\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\vueWorkspace\\cyfz\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n\nimport echarts from 'echarts'\n\nexport default {\n    name: \"LineChart\",\n    props: {\n        LineChartData: {\n            text: String, //标题  不需要标题可不传\n            titleSize: {  //标题大小\n                type: Number,\n                default: 20\n            },\n            download: { //是否显示下载按钮\n                type: Boolean,\n                default: false\n            },\n            data:[]\n        },\n    },\n    data() {\n        return {\n            tipData: [],//线数据\n            showData: [],//展示数据\n            text: this.LineChartData.text, //大标题\n            titleSize: this.LineChartData.titleSize, //标题大小\n            download: this.LineChartData.download,\n        }\n    },\n    // mounted() {\n    //     this.drawLine();\n    // },\n    methods: {\n        //绘制图表\n        drawLine() {\n            // 基于准备好的dom，初始化echarts实例\n            let id = \"echartBar\" + Math.random() * 1000;\n            this.$el.setAttribute(\"id\", id);\n            let myChartContainer = document.getElementById(id);\n            let myChartChina = echarts.init(myChartContainer);\n            // 绘制图表\n            let optionMap = {//折线图配置数据\n                color:['#6cacaf','#e4a526','#e4391d','#a1cb37','#8c97cb'],\n                title: {\n                    x: 'center',\n                    text: this.text,\n                    textStyle: {\n                        fontSize: this.titleSize,\n                    },\n                },\n                tooltip: {\n                    trigger: 'axis'\n                },\n                legend: {\n                    top: [30],\n                    data: this.tipData,\n                },\n                grid: {\n                    left: '3%',\n                    right: '4%',\n                    bottom: '3%',\n                    containLabel: true\n                },\n                toolbox: {\n                    show: this.download,\n                    top: [5],\n                    right: [20],\n                    feature: {\n                        saveAsImage: {}\n                    }\n                },\n                xAxis: {\n                    interval: ['0'], //标签显示间隔\n                    type: 'category',\n                    boundaryGap: false,\n                    data: ['1月', '2月', '3月', '4月', '5月', '6月', '7月', '8月', '9月', '10月', '11月', '12月'] //x轴数据\n                },\n                yAxis: {\n                    name: '(万元)',\n                    nameGap: [10],\n                    type: 'value'\n                },\n                series: this.showData,\n            };\n            myChartChina.setOption(optionMap);\n            window.onresize = function () {\n                myChartChina.resize();\n            }\n        },\n    },\n    watch: {\n        'LineChartData.data':function (val) {\n            this.tipData = [];\n            this.showData = [];\n            for (let i = 0; i < val.length; i++) {\n                let obj = { //折线图需要的数据结构\n                    name: '',\n                    type: 'line',\n                    data: []\n                };\n                obj.name = val[i].name;\n                this.tipData.push(val[i].name);\n                for(let j=0;j<val[i].monthlySales.length;j++){\n                    obj.data.push(parseFloat(val[i].monthlySales[j]));\n                }\n                this.showData.push(obj);\n            }\n            this.drawLine();\n        }\n    }\n}\n",{"version":3,"sources":["LineChart.vue"],"names":[],"mappings":";;;;;;;AAOA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"LineChart.vue","sourceRoot":"src/components/echarts","sourcesContent":["<template>\r\n    <div class=\"linechart\">\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import echarts from 'echarts'\r\n\r\n    export default {\r\n        name: \"LineChart\",\r\n        props: {\r\n            LineChartData: {\r\n                text: String, //标题  不需要标题可不传\r\n                titleSize: {  //标题大小\r\n                    type: Number,\r\n                    default: 20\r\n                },\r\n                download: { //是否显示下载按钮\r\n                    type: Boolean,\r\n                    default: false\r\n                },\r\n                data:[]\r\n            },\r\n        },\r\n        data() {\r\n            return {\r\n                tipData: [],//线数据\r\n                showData: [],//展示数据\r\n                text: this.LineChartData.text, //大标题\r\n                titleSize: this.LineChartData.titleSize, //标题大小\r\n                download: this.LineChartData.download,\r\n            }\r\n        },\r\n        // mounted() {\r\n        //     this.drawLine();\r\n        // },\r\n        methods: {\r\n            //绘制图表\r\n            drawLine() {\r\n                // 基于准备好的dom，初始化echarts实例\r\n                let id = \"echartBar\" + Math.random() * 1000;\r\n                this.$el.setAttribute(\"id\", id);\r\n                let myChartContainer = document.getElementById(id);\r\n                let myChartChina = echarts.init(myChartContainer);\r\n                // 绘制图表\r\n                let optionMap = {//折线图配置数据\r\n                    color:['#6cacaf','#e4a526','#e4391d','#a1cb37','#8c97cb'],\r\n                    title: {\r\n                        x: 'center',\r\n                        text: this.text,\r\n                        textStyle: {\r\n                            fontSize: this.titleSize,\r\n                        },\r\n                    },\r\n                    tooltip: {\r\n                        trigger: 'axis'\r\n                    },\r\n                    legend: {\r\n                        top: [30],\r\n                        data: this.tipData,\r\n                    },\r\n                    grid: {\r\n                        left: '3%',\r\n                        right: '4%',\r\n                        bottom: '3%',\r\n                        containLabel: true\r\n                    },\r\n                    toolbox: {\r\n                        show: this.download,\r\n                        top: [5],\r\n                        right: [20],\r\n                        feature: {\r\n                            saveAsImage: {}\r\n                        }\r\n                    },\r\n                    xAxis: {\r\n                        interval: ['0'], //标签显示间隔\r\n                        type: 'category',\r\n                        boundaryGap: false,\r\n                        data: ['1月', '2月', '3月', '4月', '5月', '6月', '7月', '8月', '9月', '10月', '11月', '12月'] //x轴数据\r\n                    },\r\n                    yAxis: {\r\n                        name: '(万元)',\r\n                        nameGap: [10],\r\n                        type: 'value'\r\n                    },\r\n                    series: this.showData,\r\n                };\r\n                myChartChina.setOption(optionMap);\r\n                window.onresize = function () {\r\n                    myChartChina.resize();\r\n                }\r\n            },\r\n        },\r\n        watch: {\r\n            'LineChartData.data':function (val) {\r\n                this.tipData = [];\r\n                this.showData = [];\r\n                for (let i = 0; i < val.length; i++) {\r\n                    let obj = { //折线图需要的数据结构\r\n                        name: '',\r\n                        type: 'line',\r\n                        data: []\r\n                    };\r\n                    obj.name = val[i].name;\r\n                    this.tipData.push(val[i].name);\r\n                    for(let j=0;j<val[i].monthlySales.length;j++){\r\n                        obj.data.push(parseFloat(val[i].monthlySales[j]));\r\n                    }\r\n                    this.showData.push(obj);\r\n                }\r\n                this.drawLine();\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n    .linechart {\r\n        width: 100%;\r\n        height: 100%;\r\n        margin: 0 auto;\r\n    }\r\n</style>\r\n"]}]}