{"remainingRequest":"D:\\vueWorkspace\\cyfz\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\vueWorkspace\\cyfz\\src\\views\\xtgl\\menuPage\\refreshRedis.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\vueWorkspace\\cyfz\\src\\views\\xtgl\\menuPage\\refreshRedis.vue","mtime":1571715009206},{"path":"D:\\vueWorkspace\\cyfz\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\vueWorkspace\\cyfz\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\vueWorkspace\\cyfz\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\vueWorkspace\\cyfz\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport TableList from \"../../../components/grid/TableList\";\n\nexport default {\n    name: \"refreshRedis\",\n    components: {\n        TableList,\n    },\n    data() {\n        return {\n            checkedData: [], //全选框\n            //表单字段\n            columns: [\n                {\n                    label: '表名',\n                    prop: 'tableName',\n\n                },\n                /*{\n                    label: '索引列',\n                    prop: 'indexColumns'\n                },*/\n                {\n                    label: 'SQL脚本',\n                    prop: 'dataQuerySql',\n                },\n                {\n                    label: '分组列',\n                    prop: 'groupIndex'\n                },\n                {\n                    label: '存储类型',\n                    prop: 'redisType',\n\n                },\n                /*{\n                    label: '说明',\n                    prop: 'indexCaption',\n                },*/\n            ],\n            //调用组件传输返回页面数据\n            getDataWay: {\n                dataType: \"url\",\n                data: this.$api.xtglApi.queryRedisTable,\n                type: \"post\",\n                param: {},\n            },\n        }\n    },\n    methods: {\n        //直接全部刷新\n        refreshTable() {\n            const that = this\n            this.$$request({\n                method:'post',\n                url:this.$api.xtglApi.refreshRedis,\n                data:{\n                    'tableName': ''\n                },\n            }).then(res => {\n                if(res.result == 1){\n                    that.$message({\n                        message: '缓存刷新成功！',\n                        type: 'success'\n                    })\n                }else{\n                    that.$message({\n                        message: '缓存刷新失败!',\n                        type: 'error'\n                    })\n                }\n                this.checkedData = [];\n                this.$refs.table.loadData()\n            }).catch(function (err) {\n                that.$alert(err, \"系统异常，请联系管理员！\", {});\n            })\n        },\n        //页面刷新\n        refreshTable2() {\n            const that = this\n            let refreshParam = ''\n            //暂时无批量刷新，但可一键刷新全部\n            if(this.checkedData.length > 1) {\n                this.$alert('请选中一条数据进行刷新！','提示',{\n                    type: 'warning'\n                })\n                return false\n            }else if(this.checkedData.length == 1) {\n                //预留批量刷新方法\n                this.checkedData.forEach((item) => {\n                    refreshParam += (item.tableName + ',')\n                })\n            }\n            this.$$request({\n                method:'post',\n                url:this.$api.xtglApi.refreshRedis,\n                data:{\n                    'tableName': refreshParam\n                },\n            }).then(res => {\n                if(res.result == 1){\n                    that.$message({\n                        message: '缓存刷新成功！',\n                        type: 'success'\n                    })\n                }else{\n                    that.$message({\n                        message: '缓存刷新失败!',\n                        type: 'error'\n                    })\n                }\n                this.checkedData = [];\n                this.$refs.table.loadData()\n            }).catch(function (err) {\n                that.$alert(err, \"系统异常，请联系管理员！\", {});\n            })\n        },\n    },\n}\n\n\n\n\n",{"version":3,"sources":["refreshRedis.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmfile":"refreshRedis.vue","sourceRoot":"src/views/xtgl/menuPage","sourcesContent":["<template>\r\n    <div class=\"rightMain\">\r\n        <el-form :inline=\"true\"  size=\"small\" >\r\n            <div class=\"\" style=\"margin-bottom: 23px;margin-top:15px\">\r\n                <el-button size=\"small\"  type=\"primary\"  @click=\"refreshTable\"><i class=\"el-icon-refresh ywBtn\"></i>一键刷新</el-button>\r\n            </div>\r\n        </el-form>\r\n        <tableList ref=\"table\"\r\n                   selection\r\n                   index\r\n                   style=\"border-top: none;text-align: center\"\r\n                   :getDataWay=\"getDataWay\"\r\n                   :columns=\"columns\"\r\n                   :checkedData='checkedData'\r\n        >\r\n        </tableList>\r\n    </div>\r\n</template>\r\n<script>\r\n    import TableList from \"../../../components/grid/TableList\";\r\n\r\n    export default {\r\n        name: \"refreshRedis\",\r\n        components: {\r\n            TableList,\r\n        },\r\n        data() {\r\n            return {\r\n                checkedData: [], //全选框\r\n                //表单字段\r\n                columns: [\r\n                    {\r\n                        label: '表名',\r\n                        prop: 'tableName',\r\n\r\n                    },\r\n                    /*{\r\n                        label: '索引列',\r\n                        prop: 'indexColumns'\r\n                    },*/\r\n                    {\r\n                        label: 'SQL脚本',\r\n                        prop: 'dataQuerySql',\r\n                    },\r\n                    {\r\n                        label: '分组列',\r\n                        prop: 'groupIndex'\r\n                    },\r\n                    {\r\n                        label: '存储类型',\r\n                        prop: 'redisType',\r\n\r\n                    },\r\n                    /*{\r\n                        label: '说明',\r\n                        prop: 'indexCaption',\r\n                    },*/\r\n                ],\r\n                //调用组件传输返回页面数据\r\n                getDataWay: {\r\n                    dataType: \"url\",\r\n                    data: this.$api.xtglApi.queryRedisTable,\r\n                    type: \"post\",\r\n                    param: {},\r\n                },\r\n            }\r\n        },\r\n        methods: {\r\n            //直接全部刷新\r\n            refreshTable() {\r\n                const that = this\r\n                this.$$request({\r\n                    method:'post',\r\n                    url:this.$api.xtglApi.refreshRedis,\r\n                    data:{\r\n                        'tableName': ''\r\n                    },\r\n                }).then(res => {\r\n                    if(res.result == 1){\r\n                        that.$message({\r\n                            message: '缓存刷新成功！',\r\n                            type: 'success'\r\n                        })\r\n                    }else{\r\n                        that.$message({\r\n                            message: '缓存刷新失败!',\r\n                            type: 'error'\r\n                        })\r\n                    }\r\n                    this.checkedData = [];\r\n                    this.$refs.table.loadData()\r\n                }).catch(function (err) {\r\n                    that.$alert(err, \"系统异常，请联系管理员！\", {});\r\n                })\r\n            },\r\n            //页面刷新\r\n            refreshTable2() {\r\n                const that = this\r\n                let refreshParam = ''\r\n                //暂时无批量刷新，但可一键刷新全部\r\n                if(this.checkedData.length > 1) {\r\n                    this.$alert('请选中一条数据进行刷新！','提示',{\r\n                        type: 'warning'\r\n                    })\r\n                    return false\r\n                }else if(this.checkedData.length == 1) {\r\n                    //预留批量刷新方法\r\n                    this.checkedData.forEach((item) => {\r\n                        refreshParam += (item.tableName + ',')\r\n                    })\r\n                }\r\n                this.$$request({\r\n                    method:'post',\r\n                    url:this.$api.xtglApi.refreshRedis,\r\n                    data:{\r\n                        'tableName': refreshParam\r\n                    },\r\n                }).then(res => {\r\n                    if(res.result == 1){\r\n                        that.$message({\r\n                            message: '缓存刷新成功！',\r\n                            type: 'success'\r\n                        })\r\n                    }else{\r\n                        that.$message({\r\n                            message: '缓存刷新失败!',\r\n                            type: 'error'\r\n                        })\r\n                    }\r\n                    this.checkedData = [];\r\n                    this.$refs.table.loadData()\r\n                }).catch(function (err) {\r\n                    that.$alert(err, \"系统异常，请联系管理员！\", {});\r\n                })\r\n            },\r\n        },\r\n    }\r\n\r\n\r\n\r\n\r\n</script>\r\n<style scoped>\r\n    /*.screenFilter{\r\n       overflow-x: hidden;\r\n       overflow-y: hidden;\r\n   }*/\r\n    .rightMain {\r\n        margin: 10px auto;\r\n        width: 93%;\r\n        /*margin-right: 90px;\r\n        align:0 auto;\r\n        padding-left: 10px;\r\n        padding-top: 20px;\r\n        min-width: 150px;*/\r\n    }\r\n\r\n    .task-form-item{\r\n        margin-left: 359px;\r\n        display: inline-block;\r\n        vertical-align: middle;\r\n    }\r\n\r\n    .task-btn-item {\r\n        padding-top: 0;\r\n        display: inline-block;\r\n        margin-left: 0px;\r\n        vertical-align: middle;\r\n        float: left;\r\n        padding-left: 10px;\r\n    }\r\n</style>"]}]}